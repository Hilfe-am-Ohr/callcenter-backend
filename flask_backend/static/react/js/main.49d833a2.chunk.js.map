{"version":3,"sources":["ReduxActions/index.jsx","App/Navbar/Navbar.jsx","Components/CustomTextField.jsx","App/SignInPage/LoginPage.jsx","App/SignInPage/RegisterPage.jsx","App/AccountPage/AccountPage.jsx","App/CallsPage/Call.jsx","App/CallsPage/CallsPage.jsx","App/GuidePage/GuidePage.jsx","App/IndexPage/IndexPage.jsx","Wrappers/Router.jsx","Wrappers/Themer.jsx","Wrappers/ReduxWrapper.jsx","Wrappers/Wrapper.jsx","serviceWorker.js","index.js"],"names":["handleLogin","response","type","api_key","data","account","calls","handleNewAccountData","useStyles","makeStyles","theme","appBar","zIndex","drawer","width","flexShrink","drawerPaper","toolbar","mixins","navBar","backgroundColor","palette","gunmetalGray","main","menuButton","marginRight","spacing","title","flexGrow","HeaderIconButton","margin","padding","overflow","borderRadius","HeaderIcon","height","button","marginBottom","alignItems","justifyContent","textTransform","transitionDelay","transitionDuration","topButton","marginTop","link","textDecoration","display","divider","marginLeft","wrapper","position","CircularProgress","drawerBox","drawerScrollBox","paddingBottom","Navbar","connect","state","loggedIn","autoLogin","dispatch","handleLogout","props","classes","path","window","location","pathname","initialPageTitle","startsWith","useState","pageTitle","setPageTitle","drawerIsOpen","toggleDrawer","pageTitleComponent","Typography","variant","noWrap","className","pageLogoComponent","edge","to","onClick","IconButton","aria-label","disableRipple","alt","style","fill","fontSize","pageButtons","Fragment","Button","size","color","startIcon","clsx","loginButton","disabled","small","down","AppBar","Toolbar","Drawer","open","onClose","onKeyDown","role","Divider","large","up","CssBaseline","paper","ReducedNavbar","CustomTextField","React","forwardRef","ref","value","setValue","TextField","fullWidth","required","helperText","event","target","onChange","which","preventDefault","onTab","onEnter","console","log","onEscape","onBlur","label","cloneDeep","require","textAlign","textField","buttonProgress","top","left","formContainer","snackbar","snackbarContentError","primary","snackbarContentSuccess","secondary","switchLink","LoginPage","emailInputRef","useRef","passwordInputRef","email","password","loading","errorMessageVisible","errorMessageText","changeState","handleFormChange","errorSnackbar","text","newState","blurEmail","blurPassword","startLoading","axios","post","BACKEND_URL","then","setTimeout","status","catch","focusPassword","current","focus","blur","Container","maxWidth","Grid","container","item","xs","Snackbar","anchorOrigin","vertical","horizontal","SnackbarContent","aria-describedby","message","id","RegisterPage","passwordConfirmationInputRef","zipInputRef","cityInputRef","countryInputRef","formData","passwordConfirmation","zip","city","country","newFormData","forEach","key","blurPasswordConfirmation","blurZip","blurCity","replace","str","toUpperCase","account_email","account_password","account_passwordConfirmation","account_zip","account_city","account_country","focusPasswordConfirmation","focusZip","focusCity","sm","md","AccountPage","oldPassword","newPassword","newPasswordConfirmation","address","resending","resend","startResending","stopResending","handleChange","put","new_email","email_verified","callPaper","paddingTop","paddingRight","paddingLeft","inlineText","phoneText","fontWeight","timeText","Call","axiosPutAction","action","call_id","call","Paper","elevation","phone_number","timestamp","buttonIcon","subheading","placeholder","CallsPageWrapper","loadingNewCall","loadingGoOnline","componentDidMount","bind","acceptNewCall","goOnline","goOffline","get","this","handleNewCallData","setState","CallsPageComponent","Component","online","accepted","map","index","length","fulfilled","CallsPage","description","crowdSource","root","heading","GuidePage","ExpansionPanel","ExpansionPanelSummary","expandIcon","href","title2","videoContainer","links","lineHeight","IndexPage","src","frameBorder","allowFullScreen","content","fullHeightContainer","minHeight","children","Content","Router","exact","strict","createMuiTheme","transparent80","white","transparent60","maastrichtBlue","pinctonBlue","desireMagenta","transparent40","transparent20","gray1","gray2","Themer","ThemeProvider","store","createStore","Cookies","set","expires","remove","cookieEmail","cookieApiKey","undefined","ReduxWrapper","Wrapper","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"js/main.49d833a2.chunk.js","sourcesContent":["\nexport const handleLogout = () => ({\n    type: \"LOGOUT\"\n});\n\nexport const handleLogin = (response) => ({\n    type: \"LOGIN\",\n    api_key: response.data.api_key,\n    account: response.data.account,\n    calls: response.data.calls,\n});\n\nexport const startAutoLogin = () => ({\n    type: \"START_AUTOLOGIN\",\n});\n\nexport const abortAutoLogin = () => ({\n    type: \"ABORT_AUTOLOGIN\",\n});\n\nexport const handleNewAccountData = (response) => ({\n    type: \"NEW_ACCOUNT_DATA\",\n    account: response.data.account,\n    calls: response.data.calls,\n});\n","import React, {useState} from 'react';\nimport {connect} from 'react-redux';\nimport {handleLogout} from '../../ReduxActions';\n\nimport clsx from 'clsx';\nimport './Navbar.scss';\n\nimport {makeStyles} from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport {Link} from \"react-router-dom\";\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\n\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport PersonIcon from '@material-ui/icons/Person';\n\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport CallIcon from '@material-ui/icons/Call';\nimport {CircularProgress} from \"@material-ui/core\";\n\nimport MenuIcon from '@material-ui/icons/Menu';\n\nimport {Breakpoint} from 'react-socks';\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    toolbar: theme.mixins.toolbar,\n    navBar: {\n        backgroundColor: theme.palette.gunmetalGray.main,\n    },\n    menuButton: {\n        marginRight: theme.spacing(1),\n    },\n    title: {\n        flexGrow: 1,\n    },\n    HeaderIconButton: {\n        margin: 0,\n        padding: 0,\n        backgroundColor: \"transparent !important\",\n        overflow: \"visible\",\n        borderRadius: \"0\",\n    },\n    HeaderIcon: {\n        backgroundColor: \"transparent !important\",\n        height: theme.spacing(4),\n        margin: \"-6px\",\n    },\n    button: {\n        margin: theme.spacing(1),\n        marginBottom: 0,\n        padding: theme.spacing(1),\n        width: \"225px\",\n        alignItems: \"flex-start\",\n        justifyContent: \"left\",\n        textTransform: \"capitalize\",\n        transitionDelay: 0,\n        transitionDuration: 0\n    },\n    topButton: {\n        marginTop: theme.spacing(1)\n    },\n    link: {\n        textDecoration: \"none\",\n        display: \"block\"\n    },\n    divider: {\n        marginTop: theme.spacing(2),\n        marginBottom: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        marginLeft: theme.spacing(1),\n    },\n    wrapper: {\n        position: 'relative',\n    },\n    CircularProgress: {\n        marginTop: 0,\n        marginLeft: 0,\n        marginRight: 4,\n    },\n    drawerBox: {\n        height: \"100vh\",\n        position: \"relative\",\n    },\n    drawerScrollBox: {\n        paddingBottom: theme.spacing(10),\n    },\n}));\n\nfunction NavbarComponent(props) {\n    const classes = useStyles();\n\n    const path = window.location.pathname;\n    let initialPageTitle = \"\";\n    if (path.startsWith(\"/guide\")) {\n        initialPageTitle = \"Guide\";\n    } else if (path.startsWith(\"/calls\")) {\n        initialPageTitle = \"Calls\";\n    } else if (path.startsWith(\"/account\")) {\n        initialPageTitle = \"Account\";\n    }\n\n    const [pageTitle, setPageTitle] = useState(initialPageTitle);\n\n    const [drawerIsOpen, toggleDrawer] = useState(false);\n\n    const pageTitleComponent = (\n        <Typography variant=\"h6\" noWrap className={classes.title}>{pageTitle}</Typography>\n    );\n\n    const pageLogoComponent = (\n        <Link edge=\"end\"\n              to=\"/\"\n              onClick={() => setPageTitle(\"Guide\")}>\n            <IconButton aria-label=\"index\"\n                        className={classes.HeaderIconButton}\n                        disableRipple={true}>\n                <CallIcon alt=\"Phone Icon\" style={{fill: \"white\"}} fontSize=\"large\"/>\n            </IconButton>\n        </Link>\n    );\n\n    const pageButtons = (\n        <React.Fragment>\n            <Link to=\"/guide\"\n                  className={classes.link}\n                  onClick={() => setPageTitle(\"Guide\")}>\n                <Button size=\"large\"\n                        color={path.startsWith(\"/guide\") ? \"secondary\" : \"primary\"}\n                        startIcon={<AssignmentIcon alt=\"Guide Icon\"/>}\n                        className={clsx(classes.button, classes.topButton)}>Guide</Button>\n            </Link>\n\n            {props.loggedIn && (\n                <React.Fragment>\n                    <Link to=\"/calls\"\n                          className={classes.link}\n                          onClick={() => setPageTitle(\"Calls\")}>\n                        <Button size=\"large\"\n                                color={path.startsWith(\"/calls\") ? \"secondary\" : \"primary\"}\n                                startIcon={<CallIcon alt=\"Phone Icon\"/>}\n                                className={clsx(classes.button, classes.topButton)}>Calls</Button>\n                    </Link>\n                    <Link to=\"/account\"\n                          className={classes.link}\n                          onClick={() => setPageTitle(\"Account\")}>\n                        <Button size=\"large\"\n                                color={path.startsWith(\"/account\") ? \"secondary\" : \"primary\"}\n                                startIcon={<SettingsIcon alt=\"Account Icon\"/>}\n                                className={clsx(classes.button, classes.topButton)}>Account</Button>\n                    </Link>\n                </React.Fragment>\n            )}\n        </React.Fragment>\n    );\n\n    const loginButton = (\n        <React.Fragment>\n            {props.loggedIn && (\n                <Link to=\"/logout\"\n                      className={classes.link}\n                      onClick={() => {\n                          props.handleLogout();\n                          setPageTitle(\"Guide\");\n                      }}>\n                    <Button size=\"large\"\n                            color=\"primary\"\n                            startIcon={<PersonIcon alt=\"Logout Icon\"/>}\n                            className={clsx(classes.button, classes.topButton)}>Logout</Button>\n                </Link>\n            )}\n            {!props.loggedIn && (\n                <Link to=\"/login\"\n                      className={classes.link}>\n                    <div className={classes.wrapper}>\n                        <Button size=\"large\"\n                                color=\"primary\"\n                                disabled={props.autoLogin}\n\n                                startIcon={props.autoLogin ?\n                                    <CircularProgress size={20} className={classes.CircularProgress} disabled/> :\n                                    <PersonIcon alt=\"Login Icon\"/>}\n                                className={clsx(classes.button, classes.topButton)}>Login</Button>\n                    </div>\n                </Link>\n            )}\n        </React.Fragment>\n    );\n\n    return (\n        <React.Fragment>\n\n            <Breakpoint small down>\n                <AppBar position=\"fixed\" className={classes.navBar}>\n                    <Toolbar>\n                        <IconButton edge=\"start\"\n                                    color=\"inherit\"\n                                    aria-label=\"menu\"\n                                    className={classes.menuButton}\n                                    onClick={() => toggleDrawer(true)}>\n                            <MenuIcon alt=\"Menu Icon\"/>\n                        </IconButton>\n                        {pageTitleComponent}\n                        {pageLogoComponent}\n                    </Toolbar>\n                </AppBar>\n                <Drawer open={drawerIsOpen}\n                        onClose={() => toggleDrawer(false)}\n                        onClick={() => toggleDrawer(false)}\n                        onKeyDown={() => toggleDrawer(false)}>\n                    <div role=\"presentation\" className={classes.drawerBox}>\n                        <div className={classes.drawerScrollBox}>\n                            {pageButtons}\n                            <Divider className={classes.divider}/>\n                            {loginButton}\n                        </div>\n                    </div>\n                </Drawer>\n            </Breakpoint>\n\n            <Breakpoint large up>\n                <CssBaseline/>\n                <AppBar position=\"fixed\" className={classes.appBar}>\n                    <Toolbar>\n                        {pageTitleComponent}\n                        {pageLogoComponent}\n                    </Toolbar>\n                </AppBar>\n                <Drawer\n                    className={classes.drawer}\n                    variant=\"permanent\"\n                    classes={{\n                        paper: classes.drawerPaper,\n                    }}>\n\n                    <div className={classes.toolbar}/>\n                    {pageButtons}\n                    <Divider className={classes.divider}/>\n                    {loginButton}\n\n                </Drawer>\n            </Breakpoint>\n\n        </React.Fragment>\n    );\n}\n\n\n/* Redux link -------------------------------------------------------------------- */\n/* Making the RouterComponent watch the loggedIn property of the store */\n\n\nconst mapStateToProps = state => ({\n    loggedIn: state.loggedIn,\n    autoLogin: state.autoLogin,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    handleLogout: () => dispatch(handleLogout())\n});\n\nexport const Navbar = connect(mapStateToProps, mapDispatchToProps)(NavbarComponent);\n\n\n/* Reduced Navbar (login, register, 404) ----------------------------------------- */\n\n\nexport const ReducedNavbar = (props) => {\n    const classes = useStyles();\n\n    return (\n        <div className=\"navbar\">\n            <CssBaseline/>\n            <AppBar position=\"fixed\" className={classes.appBar}>\n                <Toolbar>\n                    <Typography variant=\"h6\" noWrap className={classes.title}></Typography>\n                    <Link to=\"/\"\n                          edge=\"end\">\n                        <IconButton disableRipple={true} className={classes.HeaderIconButton}>\n                            <CallIcon alt=\"Phone Icon\" style={{fill: \"white\"}} fontSize=\"large\"/>\n                        </IconButton>\n                    </Link>\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n};\n\n","\n/* General Imports --------------------------------------------------------------- */\nimport React from \"react\";\n\n\n/* Material UI Imports ----------------------------------------------------------- */\nimport TextField from \"@material-ui/core/TextField\";\n\n\n/* Component --------------------------------------------------------------------- */\n\n\nexport const CustomTextField = React.forwardRef((props, ref) => {\n\n    /*\n\n    REQUIRED props:\n    * label (label of the input field)\n\n    OPTIONAL props:\n    * value (initial value)\n    * className (actual classname strings)\n    * variant (standard, outlined or filled)\n    * type (e.g. text, password) -> See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types\n\n    * required\n    * disabled\n    * helperText\n\n    * onChange (function handler for value change (when focused))\n    * onTab (function handler for pressed Tab keys (when focused))\n    * onEnter (function handler for pressed Enter keys (when focused))\n    * onEscape (function handler for pressed Escape keys (when focused))\n\n    * ref (the react-ref belonging to the actual input)\n\n    */\n\n    const [value, setValue] = React.useState(\"value\" in props ? props[\"value\"] : \"\");\n\n    const handleChange = (event) => {\n        setValue(event.target.value);\n        if (\"onChange\" in props) {\n            props.onChange(event.target.value);\n        }\n    };\n\n    const handleKeyDown = (event) => {\n        if (\"onTab\" in props && event.which === 9) {\n            event.preventDefault();\n            props.onTab(event.target.value);\n        } else if (\"onEnter\" in props && event.which === 13) {\n            event.preventDefault();\n            props.onEnter(event.target.value);\n        } else if (\"onEscape\" in props && event.which === 27) {\n            console.log(\"Triggering Escape\");\n            event.preventDefault();\n            props.onEscape(event.target.value);\n        }\n    };\n\n    const handleBlur = (event) => {\n        if (\"onBlur\" in props) {\n            props.onBlur(event.target.value);\n        }\n    };\n\n    return (\n        <TextField fullWidth={(\"fullWidth\" in props) ? props[\"fullWidth\"] : false}\n                   className={(\"className\" in props) ? props[\"className\"] : \"\"}\n                   type={(\"type\" in props) ? props[\"type\"] : \"text\"}\n\n                   required={(\"required\" in props) ? props[\"required\"] : false}\n                   disabled={(\"disabled\" in props) ? props[\"disabled\"] : false}\n                   helperText={(\"helperText\" in props) ? props[\"helperText\"] : \"\"}\n\n                   variant={(\"variant\" in props) ? props[\"variant\"] : \"standard\"}\n\n                   disabled={\"disabled\" in props ? props[\"disabled\"] : false}\n                   multiline={(\"multiline\" in props) ? props[\"multiline\"] : false}\n                   rowsMax={(\"rowsMax\" in props) ? props[\"rowsMax\"] : \"1\"}\n\n                   value={value}\n                   inputRef={ref}\n                   onChange={handleChange}\n                   onKeyDown={handleKeyDown}\n                   onBlur={handleBlur}\n                   label={props.label}/>\n    );\n});\n","import React, {useState, useRef} from 'react';\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nimport {connect} from 'react-redux';\nimport {handleLogin} from '../../ReduxActions';\n\nimport {Container} from \"@material-ui/core\";\nimport {Link} from \"react-router-dom\";\nimport {Typography} from \"@material-ui/core\";\n\nimport {Button} from \"@material-ui/core\";\nimport {CircularProgress} from \"@material-ui/core\";\n\nimport {CustomTextField} from \"../../Components/CustomTextField\";\n\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\n\nimport {BACKEND_URL} from \"../../secrets\";\n\nimport axios from 'axios';\n\nimport './SignInPage.scss';\nimport clsx from \"clsx\";\nimport Grid from \"@material-ui/core/Grid\";\n\n\nvar cloneDeep = require('lodash.clonedeep');\n\n\nconst useStyles = makeStyles(theme => ({\n    title: {\n        display: \"block\",\n        textAlign: \"center\",\n        marginBottom: theme.spacing(2)\n    },\n    link: {\n        textDecoration: \"none\",\n        display: \"block\"\n    },\n    button: {\n        color: \"white\"\n    },\n    textField: {\n        display: \"block\",\n        marginBottom: theme.spacing(1)\n    },\n    wrapper: {\n        marginTop: theme.spacing(1),\n        marginLeft: theme.spacing(0.5),\n        marginRight: theme.spacing(0.5),\n        position: 'relative',\n    },\n    buttonProgress: {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        marginTop: -12,\n        marginLeft: -12,\n    },\n    formContainer: {\n        marginTop: theme.spacing(2),\n        marginBottom: theme.spacing(2),\n    },\n    snackbar: {\n        margin: theme.spacing(1)\n    },\n    snackbarContentError: {\n        backgroundColor: theme.palette.primary.main,\n    },\n    snackbarContentSuccess: {\n        backgroundColor: theme.palette.secondary.main,\n    },\n    switchLink: {\n        marginTop: theme.spacing(2)\n    }\n}));\n\n\nexport function LoginPageComponent(props) {\n\n    const classes = useStyles();\n\n    const emailInputRef = useRef(null);\n    const passwordInputRef = useRef(null);\n\n    let [state, changeState] = useState({\n        email: \"\",\n        password: \"\",\n        loading: false,\n        errorMessageVisible: false,\n        errorMessageText: \"\",\n    });\n\n    function handleFormChange(email, password) {\n        changeState({\n            email: email,\n            password: password,\n            loading: false,\n            errorMessageVisible: false,\n            errorMessageText: \"\",\n        });\n    }\n\n    function startLoading() {\n        blurEmail();\n        blurPassword();\n\n        let newState = cloneDeep(state);\n        newState.loading = true;\n        newState.errorMessageVisible = false;\n        newState.errorMessageText = \"\";\n        changeState(newState);\n    }\n\n    function errorSnackbar(text) {\n        let newState = cloneDeep(state);\n        newState.loading = false;\n        newState.errorMessageVisible = true;\n        newState.errorMessageText = text;\n        changeState(newState);\n    }\n\n    function handleLogin() {\n        startLoading();\n\n        axios.post(BACKEND_URL + \"backend/login\", {email: state.email, password: state.password})\n            .then(response => {\n\n                setTimeout(() => {\n                    if (response.data.status === \"ok\") {\n                        props.handleLogin(response);\n                    } else {\n                        errorSnackbar(response.data.status);\n                    }\n                }, 1000);\n            }).catch(response => {\n            console.log(\"Axios promise rejected! Response:\");\n            console.log(response);\n            errorSnackbar(\"The server seems to be offline. See console for details.\");\n        });\n    }\n\n    function focusEmail() {\n        emailInputRef.current.focus();\n    }\n\n    function focusPassword() {\n        passwordInputRef.current.focus();\n    }\n\n    function blurEmail() {\n        emailInputRef.current.blur();\n    }\n\n    function blurPassword() {\n        passwordInputRef.current.blur();\n    }\n\n    return (\n        <Container maxWidth=\"xs\" className={\"SignInPage\"}>\n            <div className=\"SignInForm\">\n                <Typography variant=\"h3\" className={classes.title}>Login</Typography>\n\n                <Grid container spacing={1} className={classes.formContainer}>\n                    <Grid item xs={12}>\n                        <CustomTextField\n                            ref={emailInputRef}\n                            onTab={focusPassword}\n                            onEnter={focusPassword}\n                            onEscape={blurEmail}\n\n                            className={classes.textField}\n                            variant=\"outlined\"\n\n                            label=\"email\"\n                            fullWidth\n\n                            value={state.email}\n                            onChange={(email) => handleFormChange(email, state.password)}/>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <CustomTextField\n                            ref={passwordInputRef}\n                            onTab={focusEmail}\n                            onEnter={handleLogin}\n                            onEscape={blurPassword}\n\n                            className={classes.textField}\n                            variant=\"outlined\"\n\n                            label=\"password\"\n                            type=\"password\"\n                            fullWidth\n\n                            value={state.password}\n                            onChange={(password) => handleFormChange(state.email, password)}/>\n                    </Grid>\n                </Grid>\n\n                <div className=\"ButtonBox\">\n                    <div className={classes.wrapper}>\n                        <Button variant=\"contained\"\n                                disabled={state.loading}\n                                color=\"secondary\"\n                                className={classes.button}>\n                            <Link to={\"/guide\"} className={classes.link}>Cancel</Link>\n                        </Button>\n                    </div>\n                    <div className={classes.wrapper}>\n                        <Button variant=\"contained\"\n                                disabled={state.loading}\n                                color=\"secondary\"\n                                onClick={handleLogin}\n                                className={classes.button}>Login</Button>\n                        {state.loading && (\n                            <CircularProgress size={24}\n                                              className={classes.buttonProgress}\n                                              color=\"secondary\"/>\n                        )}\n                    </div>\n                </div>\n\n                <Link to={\"/register\"} className={classes.switchLink}>Don't have an account yet?</Link>\n\n                {state.errorMessageVisible && (\n                    <Snackbar className={classes.snackbar}\n                              open={true}\n                              anchorOrigin={{vertical: 'bottom', horizontal: 'center'}}>\n                        <SnackbarContent\n                            className={classes.snackbarContentError}\n                            aria-describedby=\"message-id\"\n                            message={<span id=\"message-id\">{state.errorMessageText}</span>}\n                        />\n                    </Snackbar>\n                )}\n            </div>\n        </Container>\n    );\n}\n\n\n/* Redux link -------------------------------------------------------------------- */\n/* Making the RouterComponent watch the loggedIn property of the store */\n\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = dispatch => ({\n    handleLogin: (response) => dispatch(handleLogin(response)),\n});\n\nexport const LoginPage = connect(mapStateToProps, mapDispatchToProps)(LoginPageComponent);\n\n","import React, {useState, useRef} from 'react';\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nimport {connect} from 'react-redux';\nimport {handleLogin} from '../../ReduxActions';\n\nimport {Container} from \"@material-ui/core\";\nimport {Link} from \"react-router-dom\";\nimport {Typography} from \"@material-ui/core\";\n\nimport {Button} from \"@material-ui/core\";\nimport {CircularProgress} from \"@material-ui/core\";\n\nimport {CustomTextField} from \"../../Components/CustomTextField\";\n\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\n\nimport axios from 'axios';\n\nimport './SignInPage.scss';\n\nimport {BACKEND_URL} from \"../../secrets\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\n\n\nvar cloneDeep = require('lodash.clonedeep');\n\n\nconst useStyles = makeStyles(theme => ({\n    title: {\n        display: \"block\",\n        textAlign: \"center\",\n        marginBottom: theme.spacing(2),\n    },\n    link: {\n        textDecoration: \"none\",\n        display: \"block\"\n    },\n    button: {\n        color: \"white\"\n    },\n    textField: {\n        marginBottom: theme.spacing(1)\n    },\n    wrapper: {\n        marginTop: theme.spacing(1),\n        marginLeft: theme.spacing(0.5),\n        marginRight: theme.spacing(0.5),\n        position: 'relative',\n    },\n    buttonProgress: {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        marginTop: -12,\n        marginLeft: -12,\n    },\n    snackbar: {\n        margin: theme.spacing(1)\n    },\n    snackbarContentError: {\n        backgroundColor: theme.palette.primary.main,\n    },\n    snackbarContentSuccess: {\n        backgroundColor: theme.palette.secondary.main,\n    },\n    switchLink: {\n        marginTop: theme.spacing(2),\n        textAlign: \"center\",\n    },\n    formContainer: {\n        marginTop: theme.spacing(2),\n        marginBottom: theme.spacing(2),\n    },\n    divider: {\n        marginTop: theme.spacing(3),\n        marginBottom: theme.spacing(3),\n    },\n}));\n\n\nexport function RegisterPageComponent(props) {\n\n    const classes = useStyles();\n\n    const emailInputRef = useRef(null);\n    const passwordInputRef = useRef(null);\n    const passwordConfirmationInputRef = useRef(null);\n    const zipInputRef = useRef(null);\n    const cityInputRef = useRef(null);\n    const countryInputRef = useRef(null);\n\n    let [state, changeState] = useState({\n        formData: {\n            email: \"\",\n\n            password: \"\",\n            passwordConfirmation: \"\",\n\n            zip: \"\",\n            city: \"\",\n            country: \"Germany\",\n        },\n        loading: false,\n        errorMessageVisible: false,\n        errorMessageText: \"\",\n    });\n\n    function handleFormChange(newFormData) {\n        let newState = cloneDeep(state);\n\n        [\"email\", \"password\", \"passwordConfirmation\", \"zip\", \"city\", \"country\"].forEach(key => {\n            newState.formData[key] = key in newFormData ? newFormData[key] : newState.formData[key];\n        });\n\n        newState.loading = false;\n        newState.errorMessageVisible = false;\n        newState.errorMessageText = \"\";\n        changeState(newState);\n    }\n\n    function startLoading() {\n        blurAll();\n\n        let newState = cloneDeep(state);\n        newState.loading = true;\n        newState.errorMessageVisible = false;\n        newState.errorMessageText = \"\";\n        changeState(newState);\n    }\n\n    function errorSnackbar(text) {\n        let newState = cloneDeep(state);\n        newState.loading = false;\n        newState.errorMessageVisible = true;\n        newState.errorMessageText = text;\n        changeState(newState);\n    }\n\n    function formValidation() {\n\n        [\"email\", \"password\", \"passwordConfirmation\", \"zip\", \"city\", \"country\"].forEach(key => {\n            if (state.formData[key] === \"\") {\n\n                // 1. insert a space before all caps 2. uppercase all first characters\n                // Source: https://stackoverflow.com/questions/4149276/how-to-convert-camelcase-to-camel-case\n                let formattedString = key.replace(/([A-Z])/g, ' $1').replace(/^./, function (str) {\n                    return str.toUpperCase();\n                });\n\n                errorSnackbar(\"\\\"\" + formattedString + \"\\\" is empty\");\n                return false;\n            }\n        });\n\n        if (state.formData[\"password\"] !== state.formData[\"passwordConfirmation\"]) {\n            errorSnackbar(\"\\\"Password\\\" and \\\"Password Confirmation\\\" do not match\");\n            return false;\n        }\n\n        return true;\n    }\n\n    function handleLogin() {\n        startLoading();\n\n        if (formValidation()) {\n            axios.post(BACKEND_URL + \"backend/database/account\", {\n                account_email: state.formData.email,\n\n                account_password: state.formData.password,\n                account_passwordConfirmation: state.formData.passwordConfirmation,\n\n                account_zip: state.formData.zip,\n                account_city: state.formData.city,\n                account_country: state.formData.country,\n            })\n                .then(response => {\n\n                    setTimeout(() => {\n                        if (response.data.status === \"ok\") {\n                            props.handleLogin(response);\n                        } else {\n                            errorSnackbar(response.data.status);\n                        }\n                    }, 1000);\n                }).catch(response => {\n                console.log(\"Axios promise rejected! Response:\");\n                console.log(response);\n                errorSnackbar(\"The server seems to be offline. See console for details.\");\n            });\n        }\n    }\n\n\n    function focusEmail() {\n        emailInputRef.current.focus();\n    }\n\n    function focusPassword() {\n        passwordInputRef.current.focus();\n    }\n\n    function focusPasswordConfirmation() {\n        passwordConfirmationInputRef.current.focus();\n    }\n\n    function focusZip() {\n        zipInputRef.current.focus();\n    }\n\n    function focusCity() {\n        cityInputRef.current.focus();\n    }\n\n    function focusCountry() {\n        countryInputRef.current.focus();\n    }\n\n\n    function blurEmail() {\n        emailInputRef.current.blur();\n    }\n\n    function blurPassword() {\n        passwordInputRef.current.blur();\n    }\n\n    function blurPasswordConfirmation() {\n        passwordConfirmationInputRef.current.blur();\n    }\n\n    function blurZip() {\n        zipInputRef.current.blur();\n    }\n\n    function blurCity() {\n        cityInputRef.current.blur();\n    }\n\n    function blurCountry() {\n        countryInputRef.current.blur();\n    }\n\n    function blurAll() {\n        blurEmail();\n        blurPassword();\n        blurPasswordConfirmation();\n        blurZip();\n        blurCity();\n        blurCountry();\n    }\n\n    return (\n        <Container maxWidth=\"md\" className=\"SignInPage\">\n            <div className=\"SignInForm\">\n                <Typography variant=\"h3\" className={classes.title}>Register</Typography>\n\n                <Grid container spacing={1} className={classes.formContainer}>\n\n                    <Grid item xs={12}>\n                        <CustomTextField\n                            required\n                            ref={emailInputRef} onTab={focusPassword} onEnter={focusPassword} onEscape={blurEmail}\n                            className={classes.textField} variant=\"outlined\" label=\"Email\" fullWidth\n                            value={state.formData.email} onChange={(email) => handleFormChange({email: email})}/>\n                    </Grid>\n\n                    <Grid item xs={12} sm={6}>\n                        <CustomTextField\n                            required type=\"password\"\n                            ref={passwordInputRef} onTab={focusPasswordConfirmation} onEnter={focusPasswordConfirmation}\n                            onEscape={blurPassword}\n                            className={classes.textField} variant=\"outlined\" label=\"Password\" fullWidth\n                            value={state.formData.password}\n                            onChange={(password) => handleFormChange({password: password})}/>\n                    </Grid>\n\n                    <Grid item xs={12} sm={6}>\n                        <CustomTextField\n                            required type=\"password\"\n                            ref={passwordConfirmationInputRef} onTab={focusZip} onEnter={focusZip}\n                            onEscape={blurPasswordConfirmation}\n                            className={classes.textField} variant=\"outlined\" label=\"Confirm Password\" fullWidth\n                            value={state.formData.passwordConfirmation}\n                            onChange={(passwordConfirmation) => handleFormChange({passwordConfirmation: passwordConfirmation})}/>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <div className={classes.divider}/>\n                    </Grid>\n\n                    <Grid item xs={12} sm={6} md={4}>\n                        <CustomTextField\n                            required\n                            ref={zipInputRef} onTab={focusCity} onEnter={focusCity} onEscape={blurZip}\n                            className={classes.textField} variant=\"outlined\" label=\"ZIP Code\" fullWidth\n                            value={state.formData.zip} onChange={(zip) => handleFormChange({zip: zip})}/>\n                    </Grid>\n\n                    <Grid item xs={12} sm={6} md={4}>\n                        <CustomTextField\n                            required\n                            ref={cityInputRef} onTab={focusEmail} onEnter={handleLogin} onEscape={blurCity}\n                            className={classes.textField} variant=\"outlined\" label=\"City\" fullWidth\n                            value={state.formData.city} onChange={(city) => handleFormChange({city: city})}/>\n                    </Grid>\n\n                    <Grid item xs={12} sm={6} md={4}>\n                        <CustomTextField\n                            required disabled\n                            ref={countryInputRef}\n                            className={classes.textField} variant=\"outlined\" label=\"Country\" fullWidth\n                            value={state.formData.country}/>\n                    </Grid>\n\n                </Grid>\n\n                <div className=\"ButtonBox\">\n                    <div className={classes.wrapper}>\n                        <Button variant=\"contained\"\n                                disabled={state.loading}\n                                color=\"secondary\"\n                                className={classes.button}>\n                            <Link to={\"/guide\"} className={classes.link}>Cancel</Link>\n                        </Button>\n                    </div>\n                    <div className={classes.wrapper}>\n                        <Button variant=\"contained\"\n                                disabled={state.loading}\n                                color=\"secondary\"\n                                onClick={handleLogin}\n                                className={classes.button}>Register</Button>\n                        {state.loading && (\n                            <CircularProgress size={24}\n                                              className={classes.buttonProgress}\n                                              color=\"secondary\"/>\n                        )}\n                    </div>\n                </div>\n\n                <Link to={\"/login\"} className={classes.switchLink}>Already have an account?</Link>\n\n                {state.errorMessageVisible && (\n                    <Snackbar className={classes.snackbar}\n                              open={true}\n                              anchorOrigin={{vertical: 'bottom', horizontal: 'center'}}>\n                        <SnackbarContent\n                            className={classes.snackbarContentError}\n                            aria-describedby=\"message-id\"\n                            message={<span id=\"message-id\">{state.errorMessageText}</span>}\n                        />\n                    </Snackbar>\n                )}\n            </div>\n        </Container>\n    );\n}\n\n\n/* Redux link -------------------------------------------------------------------- */\n/* Making the RouterComponent watch the loggedIn property of the store */\n\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = dispatch => ({\n    handleLogin: (response) => dispatch(handleLogin(response)),\n});\n\nexport const RegisterPage = connect(mapStateToProps, mapDispatchToProps)(RegisterPageComponent);\n\n","import React, {useState, useRef} from 'react';\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nimport {connect} from 'react-redux';\nimport {handleNewAccountData} from '../../ReduxActions';\n\nimport {Container} from \"@material-ui/core\";\nimport {Typography} from \"@material-ui/core\";\n\nimport {Button} from \"@material-ui/core\";\nimport {CircularProgress} from \"@material-ui/core\";\n\nimport {CustomTextField} from \"../../Components/CustomTextField\";\n\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\n\nimport {BACKEND_URL} from \"../../secrets\";\n\nimport axios from 'axios';\n\nimport './AccountPage.scss';\n\nimport Grid from \"@material-ui/core/Grid\";\n\n\nvar cloneDeep = require('lodash.clonedeep');\n\n\nconst useStyles = makeStyles(theme => ({\n    title: {\n        display: \"block\",\n        textAlign: \"center\",\n        marginBottom: theme.spacing(2),\n    },\n    link: {\n        textDecoration: \"none\",\n        display: \"block\"\n    },\n    button: {\n        color: \"white\"\n    },\n    textField: {\n        marginBottom: theme.spacing(1)\n    },\n    wrapper: {\n        marginTop: theme.spacing(1),\n        marginLeft: theme.spacing(0.5),\n        marginRight: theme.spacing(0.5),\n        position: 'relative',\n    },\n    buttonProgress: {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        marginTop: -12,\n        marginLeft: -12,\n    },\n    snackbar: {\n        margin: theme.spacing(1)\n    },\n    snackbarContentError: {\n        backgroundColor: theme.palette.primary.main,\n    },\n    snackbarContentSuccess: {\n        backgroundColor: theme.palette.secondary.main,\n    },\n    switchLink: {\n        marginTop: theme.spacing(2),\n        textAlign: \"center\",\n    },\n    formContainer: {\n        marginTop: theme.spacing(2),\n        marginBottom: theme.spacing(2),\n    },\n    divider: {\n        marginTop: theme.spacing(3),\n        marginBottom: theme.spacing(3),\n    },\n}));\n\n\nexport function AccountPageComponent(props) {\n\n    const classes = useStyles();\n\n    const emailInputRef = useRef(null);\n    const zipInputRef = useRef(null);\n    const cityInputRef = useRef(null);\n    const countryInputRef = useRef(null);\n\n    let [state, changeState] = useState({\n        account: {\n            email: props.account.email,\n\n            oldPassword: \"\",\n            newPassword: \"\",\n            newPasswordConfirmation: \"\",\n\n            zip: props.account.address.zip,\n            city: props.account.address.city,\n            country: props.account.address.country,\n        },\n        errorMessageVisible: false,\n        errorMessageText: \"\",\n\n        resending: false,\n        resend: false,\n    });\n\n    function handleFormChange(newFormData) {\n        let newState = cloneDeep(state);\n\n        [\"email\", \"oldPassword\", \"newPassword\", \"newPasswordConfirmation\", \"zip\", \"city\", \"country\"].forEach(key => {\n            newState.account[key] = key in newFormData ? newFormData[key] : newState.account[key];\n        });\n\n        newState.errorMessageVisible = false;\n        newState.errorMessageText = \"\";\n        changeState(newState);\n    }\n\n    function startResending() {\n        blurAll();\n\n        let newState = cloneDeep(state);\n        newState.resending = true;\n        newState.errorMessageVisible = false;\n        newState.errorMessageText = \"\";\n        changeState(newState);\n    }\n\n    function stopResending() {\n        let newState = cloneDeep(state);\n        newState.resending = false;\n        newState.resend = true;\n        newState.errorMessageVisible = false;\n        newState.errorMessageText = \"\";\n        changeState(newState);\n    }\n\n    function errorSnackbar(text) {\n        let newState = cloneDeep(state);\n        newState.loading = false;\n        newState.errorMessageVisible = true;\n        newState.errorMessageText = text;\n        changeState(newState);\n    }\n\n    function formValidation() {\n\n        [\"email\", \"zip\", \"city\", \"country\"].forEach(key => {\n            if (state.account[key] === \"\") {\n\n                // 1. insert a space before all caps 2. uppercase all first characters\n                // Source: https://stackoverflow.com/questions/4149276/how-to-convert-camelcase-to-camel-case\n                let formattedString = key.replace(/([A-Z])/g, ' $1').replace(/^./, function (str) {\n                    return str.toUpperCase();\n                });\n\n                errorSnackbar(\"\\\"\" + formattedString + \"\\\" is empty\");\n                return false;\n            }\n        });\n\n        if (state.account[\"newPassword\"] !== state.account[\"newPasswordConfirmation\"]) {\n            errorSnackbar(\"\\\"New Password\\\" and \\\"New Password Confirmation\\\" do not match\");\n            return false;\n        }\n\n        return true;\n    }\n\n    function handleChange() {\n        if (formValidation()) {\n            axios.put(BACKEND_URL + \"backend/database/account\", {\n                email: props.account.email,\n                api_key: props.api_key,\n\n                new_email: state.account.email,\n\n                account_zip: state.account.zip,\n                account_city: state.account.city,\n            })\n                .then(response => {\n                    if (response.data.status === \"ok\") {\n                        props.handleNewAccountData(response);\n                    } else {\n                        errorSnackbar(response.data.status);\n                    }\n                }).catch(response => {\n                console.log(\"Axios promise rejected! Response:\");\n                console.log(response);\n                errorSnackbar(\"The server seems to be offline. See console for details.\");\n            });\n        }\n    }\n\n    function handleResend() {\n        startResending();\n\n        axios.post(BACKEND_URL + \"backend/email/resend\", {\n            email: props.account.email,\n            api_key: props.api_key,\n        })\n            .then(response => {\n                if (response.data.status === \"ok\") {\n                    setTimeout(stopResending, 1000);\n                } else {\n                    errorSnackbar(response.data.status);\n                }\n            }).catch(response => {\n            console.log(\"Axios promise rejected! Response:\");\n            console.log(response);\n            errorSnackbar(\"The server seems to be offline. See console for details.\");\n        });\n    }\n\n    function blurEmail() {\n        handleChange();\n        emailInputRef.current.blur();\n    }\n\n    function blurZip() {\n        handleChange();\n        zipInputRef.current.blur();\n    }\n\n    function blurCity() {\n        handleChange();\n        cityInputRef.current.blur();\n    }\n\n    function blurAll() {\n        blurEmail();\n        blurZip();\n        blurCity();\n    }\n\n    return (\n        <Container maxWidth=\"md\" className=\"AccountPage\">\n\n                <Grid container spacing={1} className={classes.formContainer}>\n\n                    <Grid item xs={12} md={props.account.email_verified ? 9 : 6}>\n                        <CustomTextField\n                            required disabled={props.account.email_verified}\n                            ref={emailInputRef} onTab={blurEmail} onEnter={blurEmail} onEscape={blurEmail}\n                            className={classes.textField} variant=\"outlined\" label=\"Email\" fullWidth\n                            value={state.account.email} onChange={(email) => handleFormChange({email: email})}/>\n                    </Grid>\n\n                    <Grid item xs={12} md={props.account.email_verified ? 3 : 6}>\n                        <div className=\"ButtonBox\">\n                            {!props.account.email_verified && (\n                                <div className={classes.wrapper}>\n                                    <Button variant=\"contained\"\n                                            disabled={state.resending || state.resend || props.account.email !== state.account.email}\n                                            color=\"secondary\"\n                                            onClick={handleResend}\n                                            className={classes.button}>Resend Verification</Button>\n                                    {state.resending && (\n                                        <CircularProgress size={24}\n                                                          className={classes.buttonProgress}\n                                                          color=\"secondary\"/>\n                                    )}\n                                </div>\n                            )}\n                            <div className={classes.wrapper}>\n                                <Button variant=\"contained\"\n                                        disabled={state.resending || props.account.email !== state.account.email}\n                                        color=\"secondary\"\n                                        className={classes.button}>Change Password</Button>\n                            </div>\n                        </div>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <div className={classes.divider}/>\n                    </Grid>\n\n                    <Grid item xs={12} sm={6} md={4}>\n                        <CustomTextField\n                            required\n                            ref={zipInputRef} onTab={blurZip} onEnter={blurZip} onEscape={blurZip}\n                            className={classes.textField} variant=\"outlined\" label=\"ZIP Code\" fullWidth\n                            value={state.account.zip} onChange={(zip) => handleFormChange({zip: zip})}/>\n                    </Grid>\n\n                    <Grid item xs={12} sm={6} md={4}>\n                        <CustomTextField\n                            required\n                            ref={cityInputRef} onTab={blurCity} onEnter={blurCity} onEscape={blurCity}\n                            className={classes.textField} variant=\"outlined\" label=\"City\" fullWidth\n                            value={state.account.city} onChange={(city) => handleFormChange({city: city})}/>\n                    </Grid>\n\n                    <Grid item xs={12} sm={6} md={4}>\n                        <CustomTextField\n                            required disabled\n                            className={classes.textField} variant=\"outlined\" label=\"Country\" fullWidth\n                            value={state.account.country}/>\n                    </Grid>\n\n                </Grid>\n\n                {state.errorMessageVisible && (\n                    <Snackbar className={classes.snackbar}\n                              open={true}\n                              anchorOrigin={{vertical: 'bottom', horizontal: 'center'}}>\n                        <SnackbarContent\n                            className={classes.snackbarContentError}\n                            aria-describedby=\"message-id\"\n                            message={<span id=\"message-id\">{state.errorMessageText}</span>}\n                        />\n                    </Snackbar>\n                )}\n        </Container>\n    );\n}\n\n\n/* Redux link -------------------------------------------------------------------- */\n/* Making the RouterComponent watch the loggedIn property of the store */\n\n\nconst mapStateToProps = state => ({\n    account: state.account,\n    api_key: state.api_key,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    handleNewAccountData: (response) => dispatch(handleNewAccountData(response)),\n});\n\nexport const AccountPage = connect(mapStateToProps, mapDispatchToProps)(AccountPageComponent);\n\n","import React from 'react';\nimport {makeStyles} from \"@material-ui/core/styles\";\n\n\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {handleNewAccountData} from \"../../ReduxActions\";\nimport {connect} from \"react-redux\";\nimport axios from \"axios\";\nimport {BACKEND_URL} from \"../../secrets\";\nimport clsx from \"clsx\";\n\nimport CheckIcon from '@material-ui/icons/Check';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport IconButton from '@material-ui/core/IconButton';\n\nconst useStyles = makeStyles(theme => ({\n    callPaper: {\n        paddingTop: theme.spacing(1),\n        paddingRight: theme.spacing(1),\n        paddingBottom: theme.spacing(1),\n        paddingLeft: theme.spacing(2),\n\n        marginBottom: theme.spacing(1),\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n    },\n    inlineText: {\n        display: \"inline\"\n    },\n    phoneText: {\n        marginRight: theme.spacing(3),\n        fontWeight: \"500\",\n    },\n    timeText: {\n        flexGrow: 1,\n        fontWeight: \"400\",\n    },\n}));\n\n\nexport function CallComponent(props) {\n\n    const classes = useStyles();\n\n    function axiosPutAction(action) {\n        axios.put(BACKEND_URL + \"backend/database/call\", {\n            email: props.account.email,\n            api_key: props.api_key,\n            action: action,\n            call_id: props.call.id,\n        })\n            .then(response => {\n                if (response.data.status === \"ok\") {\n                    props.handleNewAccountData(response);\n                    console.log(response.data.calls);\n                }\n            }).catch(response => {\n            console.log(\"Axios promise rejected! Response:\");\n            console.log(response);\n        });\n    }\n\n    return (\n        <Paper elevation={3} className={classes.callPaper}>\n            <Typography variant=\"body1\" className={clsx(classes.inlineText, classes.phoneText)}>{props.call.phone_number}</Typography>\n            <Typography variant=\"body2\" className={clsx(classes.inlineText, classes.timeText)}>{props.call.timestamp}</Typography>\n            {props.call.status !== \"fulfilled\" && (\n                <React.Fragment>\n                    <IconButton onClick={() => axiosPutAction(\"fulfill\")}>\n                        <CheckIcon color=\"primary\"/>\n                    </IconButton>\n                    <IconButton onClick={() => axiosPutAction(\"decline\")}>\n                        <ClearIcon color=\"primary\"/>\n                    </IconButton>\n                </React.Fragment>\n            )}\n            {props.call.status === \"fulfilled\" && (\n                <IconButton disabled>\n                    <CheckIcon style={{fill: \"transparent\"}}/>\n                </IconButton>\n            )}\n        </Paper>\n    );\n}\n\n\nconst mapStateToProps = state => ({\n    account: state.account,\n    api_key: state.api_key,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    handleNewAccountData: (response) => dispatch(handleNewAccountData(response)),\n});\n\nexport const Call = connect(mapStateToProps, mapDispatchToProps)(CallComponent);\n\n\n","import React, {useState, useRef} from 'react';\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nimport {connect} from 'react-redux';\nimport {handleNewAccountData} from '../../ReduxActions';\n\nimport {Container} from \"@material-ui/core\";\nimport {Typography} from \"@material-ui/core\";\n\nimport {Button} from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Divider from \"@material-ui/core/Divider\";\n\nimport {CircularProgress} from \"@material-ui/core\";\n\nimport {CustomTextField} from \"../../Components/CustomTextField\";\n\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\n\nimport {BACKEND_URL} from \"../../secrets\";\n\nimport {Call} from \"./Call\";\n\nimport axios from 'axios';\n\n\nimport Grid from \"@material-ui/core/Grid\";\nimport {Link} from \"react-router-dom\";\n\nimport WifiIcon from '@material-ui/icons/Wifi';\nimport WifiOffIcon from '@material-ui/icons/WifiOff';\nimport AddIcon from '@material-ui/icons/Add';\n\nimport './CallsPage.scss';\n\nvar cloneDeep = require('lodash.clonedeep');\n\n\nconst useStyles = makeStyles(theme => ({\n    title: {\n        display: \"block\",\n        textAlign: \"center\",\n        marginBottom: theme.spacing(2),\n    },\n    link: {\n        textDecoration: \"none\",\n        display: \"block\"\n    },\n    button: {\n        color: \"white\"\n    },\n    textField: {\n        marginBottom: theme.spacing(1)\n    },\n    wrapper: {\n        marginTop: theme.spacing(1),\n        marginLeft: theme.spacing(0.5),\n        marginRight: theme.spacing(0.5),\n        position: 'relative',\n    },\n    buttonProgress: {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        marginTop: -12,\n        marginLeft: -12,\n    },\n    buttonIcon: {\n        marginLeft: -8,\n        marginRight: -4,\n    },\n    snackbar: {\n        margin: theme.spacing(1),\n    },\n    snackbarContentError: {\n        backgroundColor: theme.palette.primary.main,\n    },\n    snackbarContentSuccess: {\n        backgroundColor: theme.palette.secondary.main,\n    },\n    switchLink: {\n        marginTop: theme.spacing(2),\n        textAlign: \"center\",\n    },\n    formContainer: {\n        marginTop: theme.spacing(2),\n        marginBottom: theme.spacing(2),\n    },\n    divider: {\n        marginTop: theme.spacing(6),\n        marginBottom: theme.spacing(1),\n    },\n    subheading: {\n        marginBottom: theme.spacing(1),\n        marginLeft: theme.spacing(1),\n    },\n    placeholder: {\n        marginLeft: theme.spacing(0.5),\n    },\n}));\n\nclass CallsPageWrapper extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loadingNewCall: false,\n            loadingGoOnline: false,\n            errorMessageVisible: false,\n            errorMessageText: \"\",\n        };\n\n        this.componentDidMount = this.componentDidMount.bind(this);\n        this.axiosPutAction = this.axiosPutAction.bind(this);\n\n        this.acceptNewCall = this.acceptNewCall.bind(this);\n        this.goOnline = this.goOnline.bind(this);\n        this.goOffline = this.goOffline.bind(this);\n    }\n\n    componentDidMount() {\n\n        axios.get(BACKEND_URL + \"backend/database/call\", {\n            email: this.props.account.email,\n            api_key: this.props.api_key,\n        })\n            .then(response => {\n                if (response.data.status === \"ok\") {\n                    this.props.handleNewAccountData(response);\n                }\n            }).catch(response => {\n            console.log(\"Axios promise rejected! Response:\");\n            console.log(response);\n        });\n    }\n\n    axiosPutAction(action) {\n        axios.put(BACKEND_URL + \"backend/database/call\", {\n            email: this.props.account.email,\n            api_key: this.props.api_key,\n            action: action,\n        })\n            .then(response => {\n                if (response.data.status === \"ok\") {\n                    this.props.handleNewCallData(response);\n                    console.log(response.data.calls);\n                } else if (response.data.status === \"no new calls\") {\n                    this.setState({\n                        errorMessageVisible: true,\n                        errorMessageText: \"Currently no new calls. Please try again in a few minutes.\",\n                    });\n                    setTimeout(() => {\n                        this.setState({\n                            errorMessageVisible: false,\n                        })\n                    }, 2500);\n                }\n\n            }).catch(response => {\n            console.log(\"Axios promise rejected! Response:\");\n            console.log(response);\n        });\n    }\n\n    acceptNewCall() {\n        this.setState({loadingNewCall: true});\n        setTimeout(() => {\n            this.axiosPutAction(\"accept\");\n            this.setState({loadingNewCall: false});\n        }, 1000);\n    }\n\n    goOnline() {\n        this.setState({loadingGoOnline: true});\n        setTimeout(() => {\n            this.axiosPutAction(\"go_online\");\n            this.setState({loadingGoOnline: false});\n        }, 1000);\n    }\n\n    goOffline() {\n        this.setState({loadingGoOnline: true});\n        setTimeout(() => {\n            this.axiosPutAction(\"go_offline\");\n            this.setState({loadingGoOnline: false});\n        }, 1000);\n    }\n\n    render() {\n        return (\n            <CallsPageComponent calls={this.props.calls}\n\n                                account={this.props.account}\n                                acceptNewCall={this.acceptNewCall}\n                                loadingNewCall={this.state.loadingNewCall}\n\n                                goOnline={this.goOnline}\n                                goOffline={this.goOffline}\n                                loadingGoOnline={this.state.loadingGoOnline}\n\n                                errorMessageVisible={this.state.errorMessageVisible}\n                                errorMessageText={this.state.errorMessageText}/>\n        );\n    }\n\n}\n\nexport function CallsPageComponent(props) {\n\n    const classes = useStyles();\n\n    return (\n        <Container maxWidth=\"md\" className=\"CallsPage\">\n\n            <Grid container spacing={1} className={classes.formContainer}>\n\n                <Grid item xs={12}>\n                    <div className=\"ButtonBox\">\n                        <div className={classes.wrapper}>\n                            <Button variant=\"contained\"\n                                    disabled={props.loadingNewCall || !props.account.online}\n                                    color=\"secondary\"\n                                    onClick={props.acceptNewCall}\n                                    startIcon={props.loadingNewCall ?\n                                        <CircularProgress size={20} className={classes.buttonIcon} color=\"secondary\"/> :\n                                        <AddIcon className={classes.buttonIcon}/>\n                                    }\n                                    className={classes.button}>Accept Call</Button>\n                        </div>\n\n                        <div className={classes.wrapper}>\n                            <Button variant=\"contained\"\n                                    disabled={props.loadingGoOnline}\n                                    color=\"secondary\"\n                                    startIcon={props.loadingGoOnline ?\n                                        <CircularProgress size={20} className={classes.buttonIcon} color=\"secondary\"/> : (\n                                            props.account.online ?\n                                            <WifiIcon className={classes.buttonIcon}/> :\n                                            <WifiOffIcon className={classes.buttonIcon}/>\n                                    )}\n                                    onClick={props.account.online ? props.goOffline : props.goOnline}\n                                    className={classes.button}>{props.account.online ? \"online\" : \"offline\"}</Button>\n                        </div>\n                    </div>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Divider className={classes.divider}/>\n                </Grid>\n\n                <Typography variant=\"h6\" className={classes.subheading}>Accepted Calls</Typography>\n\n                <Grid item xs={12}>\n                    {props.calls.accepted.map((call, index) => (\n                        <Call key={index} call={call}/>\n                    ))}\n                    {props.calls.accepted.length === 0 && (\n                        <Typography variant=\"body1\" className={classes.placeholder}>No accepted Calls</Typography>\n                    )}\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Divider className={classes.divider}/>\n                </Grid>\n\n                <Typography variant=\"h6\" className={classes.subheading}>Fulfilled Calls</Typography>\n\n                <Grid item xs={12}>\n                    {props.calls.fulfilled.map((call, index) => (\n                        <Call key={index} call={call}/>\n                    ))}\n                    {props.calls.fulfilled.length === 0 && (\n                        <Typography variant=\"body1\" className={classes.placeholder}>No fulfilled Calls</Typography>\n                    )}\n                </Grid>\n\n            </Grid>\n\n            <Snackbar className={classes.snackbar}\n                      open={props.errorMessageVisible}\n                      anchorOrigin={{vertical: 'top', horizontal: 'center'}}>\n                <SnackbarContent\n                    className={classes.snackbarContentError}\n                    aria-describedby=\"message-id\"\n                    message={<span id=\"message-id\">{props.errorMessageText}</span>}\n                />\n            </Snackbar>\n\n        </Container>\n    );\n}\n\n\n/* Redux link -------------------------------------------------------------------- */\n/* Making the RouterComponent watch the loggedIn property of the store */\n\n\nconst mapStateToProps = state => ({\n    calls: state.calls,\n    account: state.account,\n    api_key: state.api_key,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    handleNewCallData: (response) => dispatch(handleNewAccountData(response)),\n});\n\nexport const CallsPage = connect(mapStateToProps, mapDispatchToProps)(CallsPageWrapper);\n\n","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport {Container} from \"@material-ui/core\";\n\nimport './GuidePage.scss';\n\nconst useStyles = makeStyles(theme => ({\n    title: {\n        display: \"block\",\n        textAlign: \"center\",\n        marginBottom: theme.spacing(3),\n    },\n    description: {\n        display: \"block\",\n        textAlign: \"center\",\n        marginBottom: theme.spacing(6),\n    },\n    crowdSource: {\n        display: \"block\",\n        textAlign: \"center\",\n        marginTop: theme.spacing(6),\n        marginBottom: theme.spacing(6),\n    },\n    root: {\n        width: '100%',\n    },\n    heading: {\n        fontWeight: \"500\"\n    },\n}));\n\nexport const GuidePage = (props) => {\n    const classes = useStyles();\n\n    return (\n        <Container maxWidth=\"md\" className=\"GuidePage\">\n            <Typography variant=\"h4\" className={classes.title}>Guide <em>(coming soon)</em></Typography>\n\n            <Container maxWidth=\"sm\">\n                <Typography variant=\"body1\" className={classes.description}>\n                    Call-Center-Volunteers should not have to figure out everything by themselves.\n\n                    This page will contain a <strong>list of tips</strong> for <strong>all kinds of\n                    scenarios</strong> our\n                    volunteers might have to conquer.\n\n                    <br/><br/>\n\n                    Since we do not want to share \"truth's\" specified by only a small number of people we are\n                    <strong> not yet ready to share</strong> these tips.\n\n                    We're already <strong>crowdsourcing the best strategies</strong> which people broadly agreed on.\n\n                    <br/><br/>\n\n                    Stay tuned!\n                </Typography>\n            </Container>\n\n            <div className={classes.root}>\n\n                <ExpansionPanel disabled>\n                    <ExpansionPanelSummary\n                        expandIcon={<ExpandMoreIcon/>}>\n                        <Typography variant=\"subtitle1\" className={classes.heading}>\n                            Grocery shopping\n                        </Typography>\n                    </ExpansionPanelSummary>\n\n                </ExpansionPanel>\n\n                <ExpansionPanel disabled>\n                    <ExpansionPanelSummary\n                        expandIcon={<ExpandMoreIcon/>}>\n                        <Typography variant=\"subtitle1\" className={classes.heading}>\n                            Picking up parcels from the post office\n                        </Typography>\n                    </ExpansionPanelSummary>\n                </ExpansionPanel>\n\n                <ExpansionPanel disabled>\n                    <ExpansionPanelSummary\n                        expandIcon={<ExpandMoreIcon/>}>\n                        <Typography variant=\"subtitle1\" className={classes.heading}>\n                            Stores are closed/risky: Helping with internet shopping\n                        </Typography>\n                    </ExpansionPanelSummary>\n                </ExpansionPanel>\n\n                <ExpansionPanel disabled>\n                    <ExpansionPanelSummary\n                        expandIcon={<ExpandMoreIcon/>}>\n                        <Typography variant=\"subtitle1\" className={classes.heading}>\n                            Picking up prescription/medication\n                        </Typography>\n                    </ExpansionPanelSummary>\n                </ExpansionPanel>\n\n                <ExpansionPanel disabled>\n                    <ExpansionPanelSummary\n                        expandIcon={<ExpandMoreIcon/>}>\n                        <Typography variant=\"subtitle1\" className={classes.heading}>\n                            Dealing with mental health\n                        </Typography>\n                    </ExpansionPanelSummary>\n                </ExpansionPanel>\n\n            </div>\n\n            <Container maxWidth=\"sm\">\n                <Typography variant=\"body1\" className={classes.crowdSource}>\n                    If you want to <strong>help us in the process</strong> feel free to contact us via:\n                    <br/>\n                    <a href=\"mailto:info@hilfe-am-ohr.de\">info@hilfe-am-ohr.de</a>\n\n                    <br/><br/>\n\n                    If you want to <strong>contribute by translating this page</strong> into more languages:\n                    <br/>\n                    <a href=\"mailto:languages@hilfe-am-ohr.de\">languages@hilfe-am-ohr.de</a>\n                </Typography>\n            </Container>\n        </Container>\n    );\n};\n","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport {Button, CircularProgress, Container} from \"@material-ui/core\";\nimport clsx from \"clsx\";\n\nimport './IndexPage.scss';\nimport {Link} from \"react-router-dom\";\n\nconst useStyles = makeStyles(theme => ({\n    title: {\n        display: \"block\",\n        textAlign: \"center\",\n        marginBottom: theme.spacing(1),\n    },\n    title2: {\n        display: \"block\",\n        textAlign: \"center\",\n        marginBottom: theme.spacing(3),\n    },\n    videoContainer: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        marginBottom: theme.spacing(3),\n    },\n    description: {\n        display: \"block\",\n        textAlign: \"center\",\n        marginBottom: theme.spacing(3),\n    },\n    links: {\n        display: \"block\",\n        textAlign: \"center\",\n        marginBottom: theme.spacing(3),\n        lineHeight: theme.spacing(0.3),\n    },\n    link: {\n        textDecoration: \"none\",\n        display: \"block\"\n    },\n    button: {\n        color: \"white\",\n        marginTop: theme.spacing(1),\n        marginLeft: theme.spacing(0.5),\n        marginRight: theme.spacing(0.5),\n        position: 'relative',\n    }\n}));\n\nexport const IndexPage = (props) => {\n    const classes = useStyles();\n\n    return (\n        <div className=\"IndexPage\">\n            <Typography variant=\"h4\" className={classes.title}>Hilfe am Ohr!</Typography>\n            <Typography variant=\"h6\" className={classes.title2}>Eine Hotline für Menschen ohne Internetzugang</Typography>\n\n            <Container maxWidth=\"sm\">\n                <div className={clsx(classes.videoContainer, \"VideoContainer\")}>\n                    <iframe src=\"https://www.youtube.com/embed/veRkcaPmV4g?rel=0\" frameBorder=\"0\"\n                            allowFullScreen=\"allowfullscreen\"/>\n                </div>\n                <Typography variant=\"body1\" className={classes.description}>\n                    <em>Showcase coming soon!</em>\n                </Typography>\n\n                <Typography variant=\"body1\" className={classes.links}>\n                    Webapp Frontend Repository on <a target=\"_blank\" href=\"https://github.com/dostuffthatmatters/callcenter-frontend\">GitHub</a>\n                    <br/>\n                    Webapp Backend Repository on <a target=\"_blank\" href=\"https://github.com/dostuffthatmatters/callcenter-backend\">GitHub</a>\n                    <br/>\n                    Telegram Bot Repository: <em>sharing soon</em>\n                    <br/>\n                    Hub Backend Repository: <em>sharing soon</em>\n                </Typography>\n            </Container>\n\n            <div className=\"ButtonBox\">\n                <Button variant=\"contained\"\n                        color=\"secondary\"\n                        className={classes.button}>\n                    <Link to={\"/guide\"} className={classes.link}>Read our Guide</Link>\n                </Button>\n                <Button variant=\"contained\"\n                        color=\"secondary\"\n                        className={classes.button}>\n                    <Link to={\"/register\"} className={classes.link}>Register</Link>\n                </Button>\n            </div>\n\n        </div>\n    );\n};\n","/* General Imports --------------------------------------------------------------- */\nimport React from 'react';\nimport {connect} from 'react-redux';\nimport {makeStyles} from '@material-ui/core/styles';\n\n/* Routing Imports --------------------------------------------------------------- */\nimport {Switch, Route, BrowserRouter, Redirect, Link} from 'react-router-dom';\n\n\n/* Component Imports ------------------------------------------------------------- */\nimport {Navbar, ReducedNavbar} from \"../App/Navbar/Navbar\";\nimport {LoginPage} from '../App/SignInPage/LoginPage';\nimport {RegisterPage} from \"../App/SignInPage/RegisterPage\";\nimport {AccountPage} from \"../App/AccountPage/AccountPage\";\nimport {CallsPage} from \"../App/CallsPage/CallsPage\";\nimport {GuidePage} from \"../App/GuidePage/GuidePage\";\nimport {IndexPage} from \"../App/IndexPage/IndexPage\";\n// import {Footer} from \"../App/Footer/Footer\";\n\n\n/* Component --------------------------------------------------------------------- */\n\n\nconst useStyles = makeStyles(theme => ({\n    content: {\n        flexGrow: 1,\n    },\n    fullHeightContainer: {\n        minHeight: \"100vh\",\n    },\n    children: {\n        padding: theme.spacing(0),\n    },\n    toolbar: theme.mixins.toolbar,\n}));\n\nconst Content = (props) => {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n            <main className={classes.content}>\n                <div className={classes.fullHeightContainer}>\n                    <div className={classes.toolbar}/>\n                    <div className={classes.children}>\n                        {props.children}\n                    </div>\n                </div>\n            </main>\n        </React.Fragment>\n    );\n};\n\n\nconst RouterComponent = (props) => (\n    <BrowserRouter>\n        <Route>\n            <Switch>\n                <Route exact strict path=\"/\">\n                    <ReducedNavbar/>\n                    <IndexPage/>\n                </Route>\n\n                <Route exact strict path=\"/guide\">\n                    <Navbar/>\n                    <Content>\n                        <GuidePage/>\n                    </Content>\n                </Route>\n\n                <Route exact strict path=\"/calls\">\n                    {props.loggedIn && (\n                        <React.Fragment>\n                            <Navbar/>\n                            <Content>\n                                <CallsPage/>\n                            </Content>\n                        </React.Fragment>\n                    )}\n                    {(!props.loggedIn && props.autoLogin) && (<Navbar/>)}\n                    {(!props.loggedIn && !props.autoLogin) && (<Redirect to=\"/login\"/>)}\n                </Route>\n\n                <Route exact strict path=\"/account\">\n                    {props.loggedIn && (\n                        <React.Fragment>\n                            <Navbar/>\n                            <Content>\n                                <AccountPage/>\n                            </Content>\n                        </React.Fragment>\n                    )}\n                    {(!props.loggedIn && props.autoLogin) && (<Navbar/>)}\n                    {(!props.loggedIn && !props.autoLogin) && (<Redirect to=\"/login\"/>)}\n                </Route>\n\n                <Route exact strict path=\"/login\">\n                    {props.loggedIn && (\n                        <Redirect to=\"/account\"/>\n                    )}\n                    {!props.loggedIn && (\n                        <React.Fragment>\n                            <ReducedNavbar/>\n                            <LoginPage/>\n                        </React.Fragment>\n                    )}\n                </Route>\n                <Route exact strict path=\"/register\">\n                    {props.loggedIn && (\n                        <Redirect to=\"/account\"/>\n                    )}\n                    {!props.loggedIn && (\n                        <React.Fragment>\n                            <ReducedNavbar/>\n                            <RegisterPage/>\n                        </React.Fragment>\n                    )}\n                </Route>\n                <Route exact strict path=\"/logout\">\n                    <Redirect to=\"/guide\"/>\n                </Route>\n\n                <Route>\n                    <ReducedNavbar/>\n                    <Content>\n                        <p>page not found</p>\n                    </Content>\n                </Route>\n            </Switch>\n        </Route>\n    </BrowserRouter>\n);\n\n\n/* Redux link -------------------------------------------------------------------- */\n/* Making the RouterComponent watch the loggedIn property of the store */\n\nconst mapStateToProps = state => ({\n    loggedIn: state.loggedIn,\n    autoLogin: state.autoLogin,\n});\n\nconst mapDispatchToProps = dispatch => ({});\n\nexport const Router = connect(mapStateToProps, mapDispatchToProps)(RouterComponent);\n","/* General Imports --------------------------------------------------------------- */\nimport React from 'react';\n\n\n/* Styling Imports --------------------------------------------------------------- */\nimport {createMuiTheme} from \"@material-ui/core/styles\";\nimport {ThemeProvider} from \"@material-ui/core/styles\";\nimport {BreakpointProvider} from 'react-socks';\nimport './Themer.scss';\n\n\n/* Component Imports ------------------------------------------------------------- */\nimport {Router} from './Router';\n\n\n/* Theme ------------------------------------------------------------------------- */\n\n\nconst theme = createMuiTheme({\n\tpalette : {\n\t\tprimary: {\n\t\t\tmain: 'hsl(229, 25%, 18%)',\n\t\t\ttransparent80: 'rgba(40, 44, 52, 0.8)',\n\t\t},\n\t\tsecondary: {\n\t\t\tmain: 'hsl(344, 93%, 50%)',\n\t\t\ttransparent80: 'hsla(340, 100%, 50%, 0.8)',\n\t\t},\n\t\twhite: {\n\t\t\tmain: 'rgb(255, 255, 255)',\n\t\t\ttransparent80: 'rgba(255, 255, 255, 0.8)',\n\t\t\ttransparent60: 'rgba(255, 255, 255, 0.6)',\n\t\t},\n\n\t\tmaastrichtBlue: {\n\t\t\tmain: 'hsl(237, 77%, 18%)',\n\t\t\ttransparent80: 'hsla(237, 77%, 18%, 0.8)',\n\t\t\ttransparent60: 'hsla(237, 77%, 18%, 0.6)',\n\t\t},\n\t\tpinctonBlue: {\n\t\t\tmain: 'hsl(206, 81%, 50%)',\n\t\t\ttransparent80: 'hsla(206, 81%, 50%, 0.8)',\n\t\t\ttransparent60: 'hsla(206, 81%, 50%, 0.6)',\n\t\t},\n\t\tdesireMagenta: {\n\t\t\tmain: 'hsl(344, 93%, 50%)',\n\t\t\ttransparent80: 'hsla(344, 93%, 50%, 0.8)',\n\t\t\ttransparent60:  'hsla(344, 93%, 50%, 0.6)',\n\t\t\ttransparent40:  'hsla(344, 93%, 50%, 0.4)',\n\t\t\ttransparent20:  'hsla(344, 93%, 50%, 0.2)',\n\t\t},\n\t\tgunmetalGray: {\n\t\t\tmain: 'hsl(229, 25%, 18%)',\n\t\t\ttransparent80: 'hsla(229, 25%, 18%, 0.8)',\n\t\t\ttransparent60: 'hsla(229, 25%, 18%, 0.6)',\n\t\t},\n\t\tgray1: 'hsl(0, 0%, 95%)',\n\t\tgray2: 'hsl(0, 0%, 90%)',\n\t}\n});\n\n\n/* Component --------------------------------------------------------------------- */\n\n\nexport const Themer = () => {\n\treturn (\n\t\t<ThemeProvider theme={theme}>\n\t\t\t<BreakpointProvider>\n\t\t\t\t<Router/>\n\t\t\t</BreakpointProvider>\n\t\t</ThemeProvider>\n\t);\n};\n","\n/* General Imports --------------------------------------------------------------- */\nimport React from 'react';\nimport {createStore} from 'redux'\nimport {Provider} from \"react-redux\";\nimport {Themer} from \"./Themer\";\n\n\nimport Cookies from 'js-cookie';\nimport axios from \"axios\";\nimport {handleLogin, abortAutoLogin, startAutoLogin} from \"../ReduxActions\";\n\nimport {BACKEND_URL} from \"../secrets\";\n\n\nvar cloneDeep = require('lodash.clonedeep');\n\n\nfunction storeReducer(state = {\n    loggedIn: false,\n    autoLogin: false,\n\n    account: {\n        email: \"\",\n        online: false,\n    },\n    calls: {\n        accepted: [],\n        fulfilled: []\n    },\n    api_key: \"\",\n}, action) {\n\n    let newState = cloneDeep(state);\n\n    switch (action.type) {\n        case \"LOGIN\":\n            newState.loggedIn = true;\n            newState.autoLogin = false;\n            newState.api_key = action.api_key;\n            newState.account = action.account;\n            newState.calls = action.calls;\n\n            Cookies.set('email', action.account.email, {expires: 7});\n            Cookies.set('api_key', action.api_key, {expires: 7});\n\n            return newState;\n\n        case \"LOGOUT\":\n            newState.loggedIn = false;\n            delete newState.account.email;\n            delete newState.api_key;\n\n            Cookies.remove('email');\n            Cookies.remove('api_key');\n\n            return newState;\n\n        case \"START_AUTOLOGIN\":\n            newState.autoLogin = true;\n            return newState;\n\n        case \"ABORT_AUTOLOGIN\":\n            newState.autoLogin = false;\n\n            Cookies.remove('email');\n            Cookies.remove('api_key');\n\n            return newState;\n\n        case \"NEW_ACCOUNT_DATA\":\n            newState.account = action.account;\n            newState.calls = action.calls;\n\n            Cookies.remove('email');\n            Cookies.set('email', action.account.email);\n            return newState;\n\n        default:\n            return newState;\n    }\n}\n\nlet store = createStore(storeReducer);\n\n\n// Try to log in automatically on launch\n\nlet cookieEmail =  Cookies.get('email');\nlet cookieApiKey =  Cookies.get('api_key');\n\nif (cookieEmail !== undefined && cookieApiKey !== undefined) {\n    store.dispatch(startAutoLogin());\n    axios.post(BACKEND_URL + \"backend/login\", {email: cookieEmail, api_key: cookieApiKey})\n        .then(response => {\n            if (response.data.status === \"ok\") {\n                // Instant view-change looks laggy rather than fast -> 1.0 second delay\n                setTimeout(() => {\n                    store.dispatch(handleLogin(response));\n                }, 1000);\n            } else {\n                store.dispatch(abortAutoLogin());\n            }\n        }).catch(response => {\n        console.log(\"Axios promise rejected! Response:\");\n        console.log(response);\n        store.dispatch(abortAutoLogin());\n    });\n}\n\nexport const ReduxWrapper = () => {\n\n    return (\n        <Provider store={store}>\n            <Themer/>\n        </Provider>\n    );\n};\n","/* General Imports --------------------------------------------------------------- */\nimport React from 'react';\n\n\n/* Component Imports ------------------------------------------------------------- */\nimport {ReduxWrapper} from \"./ReduxWrapper\";\n\n\n/* Component --------------------------------------------------------------------- */\n\n\nconst Wrapper = () => {\n\n\t// window.console.log = () => {};\n\t// window.console.warn = () => {};\n\t// window.console.error = () => {};\n\n\treturn <ReduxWrapper/>;\n};\n\nexport default Wrapper;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Wrapper from './Wrappers/Wrapper';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Wrapper />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}