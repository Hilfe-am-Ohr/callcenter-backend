{"version":3,"sources":["ReduxActions/index.jsx","Components/CustomTextField.jsx","App/Navbar/Navbar.jsx","App/SignInPage/LoginPage.jsx","App/SignInPage/RegisterPage.jsx","App/AccountPage/AccountPage.jsx","App/CallsPage/Call.jsx","App/CallsPage/CallsPage.jsx","App/GuidePage/GuidePage.jsx","App/IndexPage/IndexPage.jsx","Wrappers/Router.jsx","Wrappers/Themer.jsx","Wrappers/ReduxWrapper.jsx","Wrappers/Wrapper.jsx","serviceWorker.js","index.js"],"names":["handleLogin","response","type","api_key","data","account","calls","handleNewAccountData","CustomTextField","React","forwardRef","props","ref","TextField","fullWidth","className","required","disabled","helperText","variant","multiline","rowsMax","value","inputRef","onChange","event","target","onKeyDown","which","preventDefault","onTab","onEnter","console","log","onEscape","onBlur","label","useStyles","makeStyles","theme","appBar","zIndex","drawer","width","flexShrink","drawerPaper","toolbar","mixins","navBar","backgroundColor","palette","gunmetalGray","main","menuButton","marginRight","spacing","title","flexGrow","HeaderIconButton","margin","padding","overflow","borderRadius","HeaderIcon","height","button","marginBottom","alignItems","justifyContent","textTransform","transitionDelay","transitionDuration","topButton","marginTop","link","textDecoration","display","divider","marginLeft","wrapper","position","CircularProgress","drawerBox","drawerScrollBox","paddingBottom","logoutDialog","boxSizing","overflowX","logoutDialogContainer","scroll","logoutDialogButton","color","logoutDialogWrapper","logoutDialogTitle","textAlign","Navbar","connect","state","loggedIn","autoLogin","dispatch","handleLogout","classes","path","window","location","pathname","initialPageTitle","startsWith","useState","pageTitle","setPageTitle","open","setLogoutDialogState","drawerIsOpen","toggleDrawer","pageTitleComponent","Typography","noWrap","pageLogoComponent","edge","to","onClick","IconButton","aria-label","disableRipple","alt","style","fill","fontSize","pageButtons","Fragment","Button","size","startIcon","clsx","loginButton","small","down","AppBar","Toolbar","Drawer","onClose","role","Divider","large","up","CssBaseline","paper","Dialog","aria-labelledby","maxWidth","Grid","container","item","xs","buttonBox","ReducedNavbar","cloneDeep","require","textField","buttonProgress","top","left","formContainer","snackbar","snackbarContentError","primary","snackbarContentSuccess","secondary","switchLink","LoginPage","emailInputRef","useRef","passwordInputRef","email","password","loading","errorMessageVisible","errorMessageText","changeState","handleFormChange","errorSnackbar","text","newState","blurEmail","blurPassword","startLoading","axios","post","BACKEND_URL","then","setTimeout","status","catch","focusPassword","current","focus","blur","Container","Snackbar","anchorOrigin","vertical","horizontal","SnackbarContent","aria-describedby","message","id","RegisterPage","passwordConfirmationInputRef","zipInputRef","cityInputRef","countryInputRef","formData","passwordConfirmation","zip","city","country","newFormData","forEach","key","blurPasswordConfirmation","blurZip","blurCity","replace","str","toUpperCase","account_email","account_password","account_passwordConfirmation","account_zip","account_city","account_country","focusPasswordConfirmation","focusZip","focusCity","sm","md","passwordTextField","form2Container","AccountPage","password1InputRef","password2InputRef","password3InputRef","initialState","oldPassword","newPassword","newPasswordConfirmation","address","resending","resendPossible","form1Modified","form1Submitting","form2Submitting","form2Open","resetForm1Change","stopResendingEmailState","stopForm1SubmittingState","stopForm2SubmittingState","form2Modified","showErrorSnackbar","submitForm2Change","startForm2SubmittingState","length","put","account_old_password","account_new_password","account_new_password_confirmation","form2Success","closeForm2","focusPassword2","focusPassword3","email_verified","startResendingEmailState","startForm1SubmittingState","new_email","callPaper","paddingTop","paddingRight","paddingLeft","inlineText","phoneText","fontWeight","timeText","Call","axiosPutAction","action","call_id","call","Paper","elevation","phone_number","timestamp","buttonIcon","subheading","placeholder","CallsPageWrapper","loadingNewCall","loadingGoOnline","componentDidMount","bind","acceptNewCall","goOnline","goOffline","get","this","handleNewCallData","setState","CallsPageComponent","Component","online","accepted","map","index","fulfilled","CallsPage","description","crowdSource","root","heading","GuidePage","ExpansionPanel","ExpansionPanelSummary","expandIcon","href","title2","videoContainer","links","lineHeight","IndexPage","src","frameBorder","allowFullScreen","content","fullHeightContainer","minHeight","children","Content","Router","exact","strict","createMuiTheme","transparent80","white","transparent60","maastrichtBlue","pinctonBlue","desireMagenta","transparent40","transparent20","gray1","gray2","Themer","ThemeProvider","store","createStore","Cookies","set","expires","remove","cookieEmail","cookieApiKey","undefined","ReduxWrapper","Wrapper","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"js/main.b759b135.chunk.js","sourcesContent":["\nexport const handleLogout = () => ({\n    type: \"LOGOUT\"\n});\n\nexport const handleLogin = (response) => ({\n    type: \"LOGIN\",\n    api_key: response.data.api_key,\n    account: response.data.account,\n    calls: response.data.calls,\n});\n\nexport const startAutoLogin = () => ({\n    type: \"START_AUTOLOGIN\",\n});\n\nexport const abortAutoLogin = () => ({\n    type: \"ABORT_AUTOLOGIN\",\n});\n\nexport const handleNewAccountData = (response) => ({\n    type: \"NEW_ACCOUNT_DATA\",\n    account: response.data.account,\n    calls: response.data.calls,\n});\n","\n/* General Imports --------------------------------------------------------------- */\nimport React from \"react\";\n\n\n/* Material UI Imports ----------------------------------------------------------- */\nimport TextField from \"@material-ui/core/TextField\";\n\n\n/* Component --------------------------------------------------------------------- */\n\n\nexport const CustomTextField = React.forwardRef((props, ref) => {\n\n    /*\n\n    REQUIRED props:\n    * label (label of the input field)\n\n    OPTIONAL props:\n    * value (initial value)\n    * className (actual classname strings)\n    * variant (standard, outlined or filled)\n    * type (e.g. text, password) -> See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types\n\n    * required\n    * disabled\n    * helperText\n\n    * onChange (function handler for value change (when focused))\n    * onTab (function handler for pressed Tab keys (when focused))\n    * onEnter (function handler for pressed Enter keys (when focused))\n    * onEscape (function handler for pressed Escape keys (when focused))\n\n    * ref (the react-ref belonging to the actual input)\n\n    */\n\n    //const [value, setValue] = React.useState(\"value\" in props ? props[\"value\"] : \"\");\n\n    const handleChange = (event) => {\n        //setValue(event.target.value);\n        if (\"onChange\" in props) {\n            props.onChange(event.target.value);\n        }\n    };\n\n    const handleKeyDown = (event) => {\n        if (\"onTab\" in props && event.which === 9) {\n            event.preventDefault();\n            props.onTab(event.target.value);\n        } else if (\"onEnter\" in props && event.which === 13) {\n            event.preventDefault();\n            props.onEnter(event.target.value);\n        } else if (\"onEscape\" in props && event.which === 27) {\n            console.log(\"Triggering Escape\");\n            event.preventDefault();\n            props.onEscape(event.target.value);\n        }\n    };\n\n    const handleBlur = (event) => {\n        if (\"onBlur\" in props) {\n            props.onBlur(event.target.value);\n        }\n    };\n\n    return (\n        <TextField fullWidth={(\"fullWidth\" in props) ? props[\"fullWidth\"] : false}\n                   className={(\"className\" in props) ? props[\"className\"] : \"\"}\n                   type={(\"type\" in props) ? props[\"type\"] : \"text\"}\n\n                   required={(\"required\" in props) ? props[\"required\"] : false}\n                   disabled={(\"disabled\" in props) ? props[\"disabled\"] : false}\n                   helperText={(\"helperText\" in props) ? props[\"helperText\"] : \"\"}\n\n                   variant={(\"variant\" in props) ? props[\"variant\"] : \"standard\"}\n                   multiline={(\"multiline\" in props) ? props[\"multiline\"] : false}\n                   rowsMax={(\"rowsMax\" in props) ? props[\"rowsMax\"] : \"1\"}\n\n                   value={props.value}\n                   inputRef={ref}\n                   onChange={handleChange}\n                   onKeyDown={handleKeyDown}\n                   onBlur={handleBlur}\n                   label={props.label}/>\n    );\n});\n","import React, {useState} from 'react';\nimport {connect} from 'react-redux';\nimport {handleLogout} from '../../ReduxActions';\n\nimport clsx from 'clsx';\nimport './Navbar.scss';\n\nimport {makeStyles} from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport {Link} from \"react-router-dom\";\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\n\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport PersonIcon from '@material-ui/icons/Person';\n\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport CallIcon from '@material-ui/icons/Call';\nimport {CircularProgress} from \"@material-ui/core\";\n\nimport MenuIcon from '@material-ui/icons/Menu';\n\nimport {Breakpoint} from 'react-socks';\nimport Grid from \"@material-ui/core/Grid\";\nimport {CustomTextField} from \"../../Components/CustomTextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    toolbar: theme.mixins.toolbar,\n    navBar: {\n        backgroundColor: theme.palette.gunmetalGray.main,\n    },\n    menuButton: {\n        marginRight: theme.spacing(1),\n    },\n    title: {\n        flexGrow: 1,\n    },\n    HeaderIconButton: {\n        margin: 0,\n        padding: 0,\n        backgroundColor: \"transparent !important\",\n        overflow: \"visible\",\n        borderRadius: \"0\",\n    },\n    HeaderIcon: {\n        backgroundColor: \"transparent !important\",\n        height: theme.spacing(4),\n        margin: \"-6px\",\n    },\n    button: {\n        margin: theme.spacing(1),\n        marginBottom: 0,\n        padding: theme.spacing(1),\n        width: \"225px\",\n        alignItems: \"flex-start\",\n        justifyContent: \"left\",\n        textTransform: \"capitalize\",\n        transitionDelay: 0,\n        transitionDuration: 0\n    },\n    topButton: {\n        marginTop: theme.spacing(1)\n    },\n    link: {\n        textDecoration: \"none\",\n        display: \"block\"\n    },\n    divider: {\n        marginTop: theme.spacing(2),\n        marginBottom: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        marginLeft: theme.spacing(1),\n    },\n    wrapper: {\n        position: 'relative',\n    },\n    CircularProgress: {\n        marginTop: 0,\n        marginLeft: 0,\n        marginRight: 4,\n    },\n    drawerBox: {\n        height: \"100vh\",\n        position: \"relative\",\n    },\n    drawerScrollBox: {\n        paddingBottom: theme.spacing(10),\n    },\n\n    logoutDialog: {\n        boxSizing: \"border-box\",\n        overflowX: \"hidden\",\n    },\n    logoutDialogContainer: {\n        position: \"relative\",\n        display: \"block\",\n        scroll: \"disabled\",\n        padding: theme.spacing(2),\n        margin: -3.5,\n    },\n    logoutDialogButton: {\n        color: \"white\",\n    },\n    logoutDialogWrapper: {\n        marginTop: theme.spacing(1),\n        marginLeft: theme.spacing(0.5),\n        marginRight: theme.spacing(0.5),\n        position: 'relative',\n        display: \"inline-flex\"\n    },\n    logoutDialogTitle: {\n        textAlign: \"center\",\n    },\n}));\n\nfunction NavbarComponent(props) {\n    const classes = useStyles();\n\n    const path = window.location.pathname;\n    let initialPageTitle = \"\";\n    if (path.startsWith(\"/guide\")) {\n        initialPageTitle = \"Guide\";\n    } else if (path.startsWith(\"/calls\")) {\n        initialPageTitle = \"Calls\";\n    } else if (path.startsWith(\"/account\")) {\n        initialPageTitle = \"Account\";\n    }\n\n    const [pageTitle, setPageTitle] = useState(initialPageTitle);\n    const [logoutDialog, setLogoutDialogState] = useState({open: false});\n\n    const [drawerIsOpen, toggleDrawer] = useState(false);\n\n    const pageTitleComponent = (\n        <Typography variant=\"h6\" noWrap className={classes.title}>{pageTitle}</Typography>\n    );\n\n    const pageLogoComponent = (\n        <Link edge=\"end\"\n              to=\"/\"\n              onClick={() => setPageTitle(\"Guide\")}>\n            <IconButton aria-label=\"index\"\n                        className={classes.HeaderIconButton}\n                        disableRipple={true}>\n                <CallIcon alt=\"Phone Icon\" style={{fill: \"white\"}} fontSize=\"large\"/>\n            </IconButton>\n        </Link>\n    );\n\n    const pageButtons = (\n        <React.Fragment>\n            <Link to=\"/guide\"\n                  className={classes.link}\n                  onClick={() => setPageTitle(\"Guide\")}>\n                <Button size=\"large\"\n                        color={path.startsWith(\"/guide\") ? \"secondary\" : \"primary\"}\n                        startIcon={<AssignmentIcon alt=\"Guide Icon\"/>}\n                        className={clsx(classes.button, classes.topButton)}>Guide</Button>\n            </Link>\n\n            {props.loggedIn && (\n                <React.Fragment>\n                    <Link to=\"/calls\"\n                          className={classes.link}\n                          onClick={() => setPageTitle(\"Calls\")}>\n                        <Button size=\"large\"\n                                color={path.startsWith(\"/calls\") ? \"secondary\" : \"primary\"}\n                                startIcon={<CallIcon alt=\"Phone Icon\"/>}\n                                className={clsx(classes.button, classes.topButton)}>Calls</Button>\n                    </Link>\n                    <Link to=\"/account\"\n                          className={classes.link}\n                          onClick={() => setPageTitle(\"Account\")}>\n                        <Button size=\"large\"\n                                color={path.startsWith(\"/account\") ? \"secondary\" : \"primary\"}\n                                startIcon={<SettingsIcon alt=\"Account Icon\"/>}\n                                className={clsx(classes.button, classes.topButton)}>Account</Button>\n                    </Link>\n                </React.Fragment>\n            )}\n        </React.Fragment>\n    );\n\n    const loginButton = (\n        <React.Fragment>\n            {props.loggedIn && (\n                <Button onClick={() => {setLogoutDialogState({open: true});}}\n                        size=\"large\"\n                        color=\"primary\"\n                        startIcon={<PersonIcon alt=\"Logout Icon\"/>}\n                        className={clsx(classes.button, classes.topButton)}>Logout</Button>\n            )}\n            {!props.loggedIn && (\n                <Link to=\"/login\"\n                      className={classes.link}>\n                    <div className={classes.wrapper}>\n                        <Button size=\"large\"\n                                color=\"primary\"\n                                disabled={props.autoLogin}\n\n                                startIcon={props.autoLogin ?\n                                    <CircularProgress size={20} className={classes.CircularProgress} disabled/> :\n                                    <PersonIcon alt=\"Login Icon\"/>}\n                                className={clsx(classes.button, classes.topButton)}>Login</Button>\n                    </div>\n                </Link>\n            )}\n        </React.Fragment>\n    );\n\n    return (\n        <React.Fragment>\n\n            <Breakpoint small down>\n                <AppBar position=\"fixed\" className={classes.navBar}>\n                    <Toolbar>\n                        <IconButton edge=\"start\"\n                                    color=\"inherit\"\n                                    aria-label=\"menu\"\n                                    className={classes.menuButton}\n                                    onClick={() => toggleDrawer(true)}>\n                            <MenuIcon alt=\"Menu Icon\"/>\n                        </IconButton>\n                        {pageTitleComponent}\n                        {pageLogoComponent}\n                    </Toolbar>\n                </AppBar>\n                <Drawer open={drawerIsOpen}\n                        onClose={() => toggleDrawer(false)}\n                        onClick={() => toggleDrawer(false)}\n                        onKeyDown={() => toggleDrawer(false)}>\n                    <div role=\"presentation\" className={classes.drawerBox}>\n                        <div className={classes.drawerScrollBox}>\n                            {pageButtons}\n                            <Divider className={classes.divider}/>\n                            {loginButton}\n                        </div>\n                    </div>\n                </Drawer>\n            </Breakpoint>\n\n            <Breakpoint large up>\n                <CssBaseline/>\n                <AppBar position=\"fixed\" className={classes.appBar}>\n                    <Toolbar>\n                        {pageTitleComponent}\n                        {pageLogoComponent}\n                    </Toolbar>\n                </AppBar>\n                <Drawer\n                    className={classes.drawer}\n                    variant=\"permanent\"\n                    classes={{\n                        paper: classes.drawerPaper,\n                    }}>\n\n                    <div className={classes.toolbar}/>\n                    {pageButtons}\n                    <Divider className={classes.divider}/>\n                    {loginButton}\n\n                </Drawer>\n            </Breakpoint>\n\n            <Dialog onClose={() => setLogoutDialogState({open: false})}\n                    aria-labelledby=\"logout-dialog\"\n                    open={logoutDialog.open}\n                    className={classes.logoutDialog}\n                    maxWidth=\"xs\">\n\n                <Grid container spacing={1} className={classes.logoutDialogContainer}>\n\n                    <Grid item xs={12}>\n                        <Typography variant=\"h6\" className={classes.logoutDialogTitle}>Are you sure?</Typography>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <div className={clsx(\"ButtonBox\", classes.buttonBox)}>\n                            <div className={classes.logoutDialogWrapper}>\n                                <Button variant=\"contained\"\n                                        color=\"secondary\"\n                                        onClick={() => setLogoutDialogState({open: false})}\n                                        className={classes.logoutDialogButton}>Cancel</Button>\n                            </div>\n                            <div className={classes.logoutDialogWrapper}>\n                                <Link to=\"/logout\"\n                                      className={classes.link}\n                                      onClick={() => {\n                                          props.handleLogout();\n                                          setPageTitle(\"Guide\");\n                                      }}>\n                                    <Button variant=\"contained\"\n                                            color=\"secondary\"\n                                            className={classes.logoutDialogButton}>Logout</Button>\n                                </Link>\n                            </div>\n                        </div>\n                    </Grid>\n\n                </Grid>\n            </Dialog>\n\n        </React.Fragment>\n    );\n}\n\n\n/* Redux link -------------------------------------------------------------------- */\n/* Making the RouterComponent watch the loggedIn property of the store */\n\n\nconst mapStateToProps = state => ({\n    loggedIn: state.loggedIn,\n    autoLogin: state.autoLogin,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    handleLogout: () => dispatch(handleLogout())\n});\n\nexport const Navbar = connect(mapStateToProps, mapDispatchToProps)(NavbarComponent);\n\n\n/* Reduced Navbar (login, register, 404) ----------------------------------------- */\n\n\nexport const ReducedNavbar = (props) => {\n    const classes = useStyles();\n\n    return (\n        <div className=\"navbar\">\n            <CssBaseline/>\n            <AppBar position=\"fixed\" className={classes.appBar}>\n                <Toolbar>\n                    <Typography variant=\"h6\" noWrap className={classes.title}></Typography>\n                    <Link to=\"/\"\n                          edge=\"end\">\n                        <IconButton disableRipple={true} className={classes.HeaderIconButton}>\n                            <CallIcon alt=\"Phone Icon\" style={{fill: \"white\"}} fontSize=\"large\"/>\n                        </IconButton>\n                    </Link>\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n};\n\n","import React, {useState, useRef} from 'react';\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nimport {connect} from 'react-redux';\nimport {handleLogin} from '../../ReduxActions';\n\nimport {Container} from \"@material-ui/core\";\nimport {Link} from \"react-router-dom\";\nimport {Typography} from \"@material-ui/core\";\n\nimport {Button} from \"@material-ui/core\";\nimport {CircularProgress} from \"@material-ui/core\";\n\nimport {CustomTextField} from \"../../Components/CustomTextField\";\n\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\n\nimport {BACKEND_URL} from \"../../secrets\";\n\nimport axios from 'axios';\n\nimport './SignInPage.scss';\nimport clsx from \"clsx\";\nimport Grid from \"@material-ui/core/Grid\";\n\n\nvar cloneDeep = require('lodash.clonedeep');\n\n\nconst useStyles = makeStyles(theme => ({\n    title: {\n        display: \"block\",\n        textAlign: \"center\",\n        marginBottom: theme.spacing(2)\n    },\n    link: {\n        textDecoration: \"none\",\n        display: \"block\"\n    },\n    button: {\n        color: \"white\"\n    },\n    textField: {\n        display: \"block\",\n        marginBottom: theme.spacing(1)\n    },\n    wrapper: {\n        marginTop: theme.spacing(1),\n        marginLeft: theme.spacing(0.5),\n        marginRight: theme.spacing(0.5),\n        position: 'relative',\n    },\n    buttonProgress: {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        marginTop: -12,\n        marginLeft: -12,\n    },\n    formContainer: {\n        marginTop: theme.spacing(2),\n        marginBottom: theme.spacing(2),\n    },\n    snackbar: {\n        margin: theme.spacing(1)\n    },\n    snackbarContentError: {\n        backgroundColor: theme.palette.primary.main,\n    },\n    snackbarContentSuccess: {\n        backgroundColor: theme.palette.secondary.main,\n    },\n    switchLink: {\n        marginTop: theme.spacing(2)\n    }\n}));\n\n\nexport function LoginPageComponent(props) {\n\n    const classes = useStyles();\n\n    const emailInputRef = useRef(null);\n    const passwordInputRef = useRef(null);\n\n    let [state, changeState] = useState({\n        email: \"\",\n        password: \"\",\n        loading: false,\n        errorMessageVisible: false,\n        errorMessageText: \"\",\n    });\n\n    function handleFormChange(email, password) {\n        changeState({\n            email: email,\n            password: password,\n            loading: false,\n            errorMessageVisible: false,\n            errorMessageText: \"\",\n        });\n    }\n\n    function startLoading() {\n        blurEmail();\n        blurPassword();\n\n        let newState = cloneDeep(state);\n        newState.loading = true;\n        newState.errorMessageVisible = false;\n        newState.errorMessageText = \"\";\n        changeState(newState);\n    }\n\n    function errorSnackbar(text) {\n        let newState = cloneDeep(state);\n        newState.loading = false;\n        newState.errorMessageVisible = true;\n        newState.errorMessageText = text;\n        changeState(newState);\n    }\n\n    function handleLogin() {\n        startLoading();\n\n        axios.post(BACKEND_URL + \"backend/login\", {email: state.email, password: state.password})\n            .then(response => {\n\n                setTimeout(() => {\n                    if (response.data.status === \"ok\") {\n                        props.handleLogin(response);\n                    } else {\n                        errorSnackbar(response.data.status);\n                    }\n                }, 1000);\n            }).catch(response => {\n            console.log(\"Axios promise rejected! Response:\");\n            console.log(response);\n            errorSnackbar(\"The server seems to be offline. See console for details.\");\n        });\n    }\n\n    function focusEmail() {\n        emailInputRef.current.focus();\n    }\n\n    function focusPassword() {\n        passwordInputRef.current.focus();\n    }\n\n    function blurEmail() {\n        emailInputRef.current.blur();\n    }\n\n    function blurPassword() {\n        passwordInputRef.current.blur();\n    }\n\n    return (\n        <Container maxWidth=\"xs\" className={\"SignInPage\"}>\n            <div className=\"SignInForm\">\n                <Typography variant=\"h3\" className={classes.title}>Login</Typography>\n\n                <Grid container spacing={1} className={classes.formContainer}>\n                    <Grid item xs={12}>\n                        <CustomTextField\n                            ref={emailInputRef}\n                            onTab={focusPassword}\n                            onEnter={focusPassword}\n                            onEscape={blurEmail}\n\n                            className={classes.textField}\n                            variant=\"outlined\"\n\n                            label=\"email\"\n                            fullWidth\n\n                            value={state.email}\n                            onChange={(email) => handleFormChange(email, state.password)}/>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <CustomTextField\n                            ref={passwordInputRef}\n                            onTab={focusEmail}\n                            onEnter={handleLogin}\n                            onEscape={blurPassword}\n\n                            className={classes.textField}\n                            variant=\"outlined\"\n\n                            label=\"password\"\n                            type=\"password\"\n                            fullWidth\n\n                            value={state.password}\n                            onChange={(password) => handleFormChange(state.email, password)}/>\n                    </Grid>\n                </Grid>\n\n                <div className=\"ButtonBox\">\n                    <div className={classes.wrapper}>\n                        <Button variant=\"contained\"\n                                disabled={state.loading}\n                                color=\"secondary\"\n                                className={classes.button}>\n                            <Link to={\"/guide\"} className={classes.link}>Cancel</Link>\n                        </Button>\n                    </div>\n                    <div className={classes.wrapper}>\n                        <Button variant=\"contained\"\n                                disabled={state.loading}\n                                color=\"secondary\"\n                                onClick={handleLogin}\n                                className={classes.button}>Login</Button>\n                        {state.loading && (\n                            <CircularProgress size={24}\n                                              className={classes.buttonProgress}\n                                              color=\"secondary\"/>\n                        )}\n                    </div>\n                </div>\n\n                <Link to={\"/register\"} className={classes.switchLink}>Don't have an account yet?</Link>\n\n                {state.errorMessageVisible && (\n                    <Snackbar className={classes.snackbar}\n                              open={true}\n                              anchorOrigin={{vertical: 'bottom', horizontal: 'center'}}>\n                        <SnackbarContent\n                            className={classes.snackbarContentError}\n                            aria-describedby=\"message-id\"\n                            message={<span id=\"message-id\">{state.errorMessageText}</span>}\n                        />\n                    </Snackbar>\n                )}\n            </div>\n        </Container>\n    );\n}\n\n\n/* Redux link -------------------------------------------------------------------- */\n/* Making the RouterComponent watch the loggedIn property of the store */\n\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = dispatch => ({\n    handleLogin: (response) => dispatch(handleLogin(response)),\n});\n\nexport const LoginPage = connect(mapStateToProps, mapDispatchToProps)(LoginPageComponent);\n\n","import React, {useState, useRef} from 'react';\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nimport {connect} from 'react-redux';\nimport {handleLogin} from '../../ReduxActions';\n\nimport {Container} from \"@material-ui/core\";\nimport {Link} from \"react-router-dom\";\nimport {Typography} from \"@material-ui/core\";\n\nimport {Button} from \"@material-ui/core\";\nimport {CircularProgress} from \"@material-ui/core\";\n\nimport {CustomTextField} from \"../../Components/CustomTextField\";\n\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\n\nimport axios from 'axios';\n\nimport './SignInPage.scss';\n\nimport {BACKEND_URL} from \"../../secrets\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\n\n\nvar cloneDeep = require('lodash.clonedeep');\n\n\nconst useStyles = makeStyles(theme => ({\n    title: {\n        display: \"block\",\n        textAlign: \"center\",\n        marginBottom: theme.spacing(2),\n    },\n    link: {\n        textDecoration: \"none\",\n        display: \"block\"\n    },\n    button: {\n        color: \"white\"\n    },\n    textField: {\n        marginBottom: theme.spacing(1)\n    },\n    wrapper: {\n        marginTop: theme.spacing(1),\n        marginLeft: theme.spacing(0.5),\n        marginRight: theme.spacing(0.5),\n        position: 'relative',\n    },\n    buttonProgress: {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        marginTop: -12,\n        marginLeft: -12,\n    },\n    snackbar: {\n        margin: theme.spacing(1)\n    },\n    snackbarContentError: {\n        backgroundColor: theme.palette.primary.main,\n    },\n    snackbarContentSuccess: {\n        backgroundColor: theme.palette.secondary.main,\n    },\n    switchLink: {\n        marginTop: theme.spacing(2),\n        textAlign: \"center\",\n    },\n    formContainer: {\n        marginTop: theme.spacing(2),\n        marginBottom: theme.spacing(2),\n    },\n    divider: {\n        marginTop: theme.spacing(3),\n        marginBottom: theme.spacing(3),\n    },\n}));\n\n\nexport function RegisterPageComponent(props) {\n\n    const classes = useStyles();\n\n    const emailInputRef = useRef(null);\n    const passwordInputRef = useRef(null);\n    const passwordConfirmationInputRef = useRef(null);\n    const zipInputRef = useRef(null);\n    const cityInputRef = useRef(null);\n    const countryInputRef = useRef(null);\n\n    let [state, changeState] = useState({\n        formData: {\n            email: \"\",\n\n            password: \"\",\n            passwordConfirmation: \"\",\n\n            zip: \"\",\n            city: \"\",\n            country: \"Germany\",\n        },\n        loading: false,\n        errorMessageVisible: false,\n        errorMessageText: \"\",\n    });\n\n    function handleFormChange(newFormData) {\n        let newState = cloneDeep(state);\n\n        [\"email\", \"password\", \"passwordConfirmation\", \"zip\", \"city\", \"country\"].forEach(key => {\n            newState.formData[key] = key in newFormData ? newFormData[key] : newState.formData[key];\n        });\n\n        newState.loading = false;\n        newState.errorMessageVisible = false;\n        newState.errorMessageText = \"\";\n        changeState(newState);\n    }\n\n    function startLoading() {\n        blurAll();\n\n        let newState = cloneDeep(state);\n        newState.loading = true;\n        newState.errorMessageVisible = false;\n        newState.errorMessageText = \"\";\n        changeState(newState);\n    }\n\n    function errorSnackbar(text) {\n        let newState = cloneDeep(state);\n        newState.loading = false;\n        newState.errorMessageVisible = true;\n        newState.errorMessageText = text;\n        changeState(newState);\n    }\n\n    function formValidation() {\n\n        [\"email\", \"password\", \"passwordConfirmation\", \"zip\", \"city\", \"country\"].forEach(key => {\n            if (state.formData[key] === \"\") {\n\n                // 1. insert a space before all caps 2. uppercase all first characters\n                // Source: https://stackoverflow.com/questions/4149276/how-to-convert-camelcase-to-camel-case\n                let formattedString = key.replace(/([A-Z])/g, ' $1').replace(/^./, function (str) {\n                    return str.toUpperCase();\n                });\n\n                errorSnackbar(\"\\\"\" + formattedString + \"\\\" is empty\");\n                return false;\n            }\n        });\n\n        if (state.formData[\"password\"] !== state.formData[\"passwordConfirmation\"]) {\n            errorSnackbar(\"\\\"Password\\\" and \\\"Password Confirmation\\\" do not match\");\n            return false;\n        }\n\n        return true;\n    }\n\n    function handleLogin() {\n        startLoading();\n\n        if (formValidation()) {\n            axios.post(BACKEND_URL + \"backend/database/account\", {\n                account_email: state.formData.email,\n\n                account_password: state.formData.password,\n                account_passwordConfirmation: state.formData.passwordConfirmation,\n\n                account_zip: state.formData.zip,\n                account_city: state.formData.city,\n                account_country: state.formData.country,\n            })\n                .then(response => {\n\n                    setTimeout(() => {\n                        if (response.data.status === \"ok\") {\n                            props.handleLogin(response);\n                        } else {\n                            errorSnackbar(response.data.status);\n                        }\n                    }, 1000);\n                }).catch(response => {\n                console.log(\"Axios promise rejected! Response:\");\n                console.log(response);\n                errorSnackbar(\"The server seems to be offline. See console for details.\");\n            });\n        }\n    }\n\n\n    function focusEmail() {\n        emailInputRef.current.focus();\n    }\n\n    function focusPassword() {\n        passwordInputRef.current.focus();\n    }\n\n    function focusPasswordConfirmation() {\n        passwordConfirmationInputRef.current.focus();\n    }\n\n    function focusZip() {\n        zipInputRef.current.focus();\n    }\n\n    function focusCity() {\n        cityInputRef.current.focus();\n    }\n\n    function focusCountry() {\n        countryInputRef.current.focus();\n    }\n\n\n    function blurEmail() {\n        emailInputRef.current.blur();\n    }\n\n    function blurPassword() {\n        passwordInputRef.current.blur();\n    }\n\n    function blurPasswordConfirmation() {\n        passwordConfirmationInputRef.current.blur();\n    }\n\n    function blurZip() {\n        zipInputRef.current.blur();\n    }\n\n    function blurCity() {\n        cityInputRef.current.blur();\n    }\n\n    function blurCountry() {\n        countryInputRef.current.blur();\n    }\n\n    function blurAll() {\n        blurEmail();\n        blurPassword();\n        blurPasswordConfirmation();\n        blurZip();\n        blurCity();\n        blurCountry();\n    }\n\n    return (\n        <Container maxWidth=\"md\" className=\"SignInPage\">\n            <div className=\"SignInForm\">\n                <Typography variant=\"h3\" className={classes.title}>Register</Typography>\n\n                <Grid container spacing={1} className={classes.formContainer}>\n\n                    <Grid item xs={12}>\n                        <CustomTextField\n                            required\n                            ref={emailInputRef} onTab={focusPassword} onEnter={focusPassword} onEscape={blurEmail}\n                            className={classes.textField} variant=\"outlined\" label=\"Email\" fullWidth\n                            value={state.formData.email} onChange={(email) => handleFormChange({email: email})}/>\n                    </Grid>\n\n                    <Grid item xs={12} sm={6}>\n                        <CustomTextField\n                            required type=\"password\"\n                            ref={passwordInputRef} onTab={focusPasswordConfirmation} onEnter={focusPasswordConfirmation}\n                            onEscape={blurPassword}\n                            className={classes.textField} variant=\"outlined\" label=\"Password\" fullWidth\n                            value={state.formData.password}\n                            onChange={(password) => handleFormChange({password: password})}/>\n                    </Grid>\n\n                    <Grid item xs={12} sm={6}>\n                        <CustomTextField\n                            required type=\"password\"\n                            ref={passwordConfirmationInputRef} onTab={focusZip} onEnter={focusZip}\n                            onEscape={blurPasswordConfirmation}\n                            className={classes.textField} variant=\"outlined\" label=\"Confirm Password\" fullWidth\n                            value={state.formData.passwordConfirmation}\n                            onChange={(passwordConfirmation) => handleFormChange({passwordConfirmation: passwordConfirmation})}/>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <div className={classes.divider}/>\n                    </Grid>\n\n                    <Grid item xs={12} sm={6} md={4}>\n                        <CustomTextField\n                            required\n                            ref={zipInputRef} onTab={focusCity} onEnter={focusCity} onEscape={blurZip}\n                            className={classes.textField} variant=\"outlined\" label=\"ZIP Code\" fullWidth\n                            value={state.formData.zip} onChange={(zip) => handleFormChange({zip: zip})}/>\n                    </Grid>\n\n                    <Grid item xs={12} sm={6} md={4}>\n                        <CustomTextField\n                            required\n                            ref={cityInputRef} onTab={focusEmail} onEnter={handleLogin} onEscape={blurCity}\n                            className={classes.textField} variant=\"outlined\" label=\"City\" fullWidth\n                            value={state.formData.city} onChange={(city) => handleFormChange({city: city})}/>\n                    </Grid>\n\n                    <Grid item xs={12} sm={6} md={4}>\n                        <CustomTextField\n                            required disabled\n                            ref={countryInputRef}\n                            className={classes.textField} variant=\"outlined\" label=\"Country\" fullWidth\n                            value={state.formData.country}/>\n                    </Grid>\n\n                </Grid>\n\n                <div className=\"ButtonBox\">\n                    <div className={classes.wrapper}>\n                        <Button variant=\"contained\"\n                                disabled={state.loading}\n                                color=\"secondary\"\n                                className={classes.button}>\n                            <Link to={\"/guide\"} className={classes.link}>Cancel</Link>\n                        </Button>\n                    </div>\n                    <div className={classes.wrapper}>\n                        <Button variant=\"contained\"\n                                disabled={state.loading}\n                                color=\"secondary\"\n                                onClick={handleLogin}\n                                className={classes.button}>Register</Button>\n                        {state.loading && (\n                            <CircularProgress size={24}\n                                              className={classes.buttonProgress}\n                                              color=\"secondary\"/>\n                        )}\n                    </div>\n                </div>\n\n                <Link to={\"/login\"} className={classes.switchLink}>Already have an account?</Link>\n\n                {state.errorMessageVisible && (\n                    <Snackbar className={classes.snackbar}\n                              open={true}\n                              anchorOrigin={{vertical: 'bottom', horizontal: 'center'}}>\n                        <SnackbarContent\n                            className={classes.snackbarContentError}\n                            aria-describedby=\"message-id\"\n                            message={<span id=\"message-id\">{state.errorMessageText}</span>}\n                        />\n                    </Snackbar>\n                )}\n            </div>\n        </Container>\n    );\n}\n\n\n/* Redux link -------------------------------------------------------------------- */\n/* Making the RouterComponent watch the loggedIn property of the store */\n\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = dispatch => ({\n    handleLogin: (response) => dispatch(handleLogin(response)),\n});\n\nexport const RegisterPage = connect(mapStateToProps, mapDispatchToProps)(RegisterPageComponent);\n\n","import React, {useState, useRef} from 'react';\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nimport {connect} from 'react-redux';\nimport {handleNewAccountData} from '../../ReduxActions';\n\nimport {Container} from \"@material-ui/core\";\nimport {Typography} from \"@material-ui/core\";\nimport Dialog from \"@material-ui/core/Dialog\";\n\nimport {Button} from \"@material-ui/core\";\nimport {CircularProgress} from \"@material-ui/core\";\n\nimport {CustomTextField} from \"../../Components/CustomTextField\";\n\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\n\nimport {BACKEND_URL} from \"../../secrets\";\n\nimport axios from 'axios';\n\nimport './AccountPage.scss';\n\nimport Grid from \"@material-ui/core/Grid\";\nimport clsx from \"clsx\";\n\n\nvar cloneDeep = require('lodash.clonedeep');\n\n\nconst useStyles = makeStyles(theme => ({\n    title: {\n        display: \"block\",\n        textAlign: \"center\",\n        marginBottom: theme.spacing(2),\n    },\n    link: {\n        textDecoration: \"none\",\n        display: \"block\"\n    },\n    button: {\n        color: \"white\",\n    },\n    textField: {\n        marginBottom: theme.spacing(1)\n    },\n    passwordTextField: {},\n    wrapper: {\n        marginTop: theme.spacing(1),\n        marginLeft: theme.spacing(0.5),\n        marginRight: theme.spacing(0.5),\n        position: 'relative',\n        display: \"inline-flex\"\n    },\n    buttonProgress: {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        marginTop: -12,\n        marginLeft: -12,\n    },\n    snackbar: {\n        margin: theme.spacing(1)\n    },\n    snackbarContentError: {\n        backgroundColor: theme.palette.primary.main,\n    },\n    snackbarContentSuccess: {\n        backgroundColor: theme.palette.secondary.main,\n    },\n    switchLink: {\n        marginTop: theme.spacing(2),\n        textAlign: \"center\",\n    },\n    formContainer: {\n        marginTop: theme.spacing(2),\n        marginBottom: theme.spacing(2),\n    },\n    form2Container: {\n        padding: theme.spacing(2),\n        width: 400,\n    },\n    divider: {\n        marginTop: theme.spacing(3),\n        marginBottom: theme.spacing(3),\n    },\n}));\n\n\nexport function AccountPageComponent(props) {\n\n    const classes = useStyles();\n\n    const emailInputRef = useRef(null);\n    const zipInputRef = useRef(null);\n    const cityInputRef = useRef(null);\n\n    const password1InputRef = useRef(null);\n    const password2InputRef = useRef(null);\n    const password3InputRef = useRef(null);\n\n    const initialState = {\n        account: {\n            email: props.account.email,\n\n            oldPassword: \"\",\n            newPassword: \"\",\n            newPasswordConfirmation: \"\",\n\n            zip: props.account.address.zip,\n            city: props.account.address.city,\n            country: props.account.address.country,\n        },\n        errorMessageVisible: false,\n        errorMessageText: \"\",\n\n        resending: false,\n        resendPossible: true,\n\n        form1Modified: false,\n\n        form1Submitting: false,\n        form2Submitting: false,\n\n        form2Open: false,\n    };\n\n    let [state, changeState] = useState(initialState);\n\n    const resetForm1Change = () => {\n        changeState({...initialState});\n    };\n\n    // form1 = email, zip & city\n    // form2 = password fields\n\n    function handleFormChange(newFormData) {\n        let newState = cloneDeep(state);\n\n        let form1Modified = false;\n\n        if (\"email\" in newFormData) {\n            newState.account[\"email\"] = newFormData[\"email\"];\n            form1Modified = (newFormData[\"email\"] !== props.account.address[\"email\"]) || form1Modified;\n        }\n\n        [\"zip\", \"city\", \"country\"].forEach(key => {\n            if (key in newFormData) {\n                newState.account[key] = newFormData[key];\n                form1Modified = (newFormData[key] !== props.account.address[key]) || form1Modified;\n            }\n        });\n\n        [\"oldPassword\", \"newPassword\", \"newPasswordConfirmation\"].forEach(key => {\n            if (key in newFormData) {\n                newState.account[key] = newFormData[key];\n            }\n        });\n\n        newState.form1Modified = form1Modified;\n\n        newState.errorMessageVisible = false;\n        changeState(newState);\n    }\n\n    function startResendingEmailState() {\n        let newState = cloneDeep(state);\n        newState.resending = true;\n        newState.errorMessageVisible = false;\n        changeState(newState);\n    }\n\n    function stopResendingEmailState() {\n        let newState = cloneDeep(state);\n        newState.resending = false;\n        newState.errorMessageVisible = false;\n        changeState(newState);\n    }\n\n    function startForm1SubmittingState() {\n        let newState = cloneDeep(state);\n        newState.form1Submitting = true;\n        changeState(newState);\n    }\n\n    function stopForm1SubmittingState() {\n        let newState = cloneDeep(state);\n        newState.form1Modified = false;\n        newState.form1Submitting = false;\n        changeState(newState);\n    }\n\n    function startForm2SubmittingState() {\n        let newState = cloneDeep(state);\n        newState.form2Submitting = true;\n        changeState(newState);\n    }\n\n    function stopForm2SubmittingState() {\n        let newState = cloneDeep(state);\n        newState.form2Modified = false;\n        changeState(newState);\n    }\n\n    function showErrorSnackbar(text) {\n        let newState = cloneDeep(state);\n        newState.errorMessageVisible = true;\n        newState.errorMessageText = text;\n        changeState(newState);\n    }\n\n    function hideErrorSnackbar(text) {\n        let newState = cloneDeep(state);\n        newState.errorMessageVisible = false;\n        changeState(newState);\n    }\n\n    function form1Validation() {\n\n        [\"email\", \"zip\", \"city\", \"country\"].forEach(key => {\n            if (state.account[key] === \"\") {\n\n                // 1. insert a space before all caps 2. uppercase all first characters\n                // Source: https://stackoverflow.com/questions/4149276/how-to-convert-camelcase-to-camel-case\n                let formattedString = key.replace(/([A-Z])/g, ' $1').replace(/^./, function (str) {\n                    return str.toUpperCase();\n                });\n\n                showErrorSnackbar(\"\\\"\" + formattedString + \"\\\" is empty\");\n                return false;\n            }\n        });\n\n        return true;\n    }\n\n    function form2Validation() {\n\n        [\"oldPassword\", \"newPassword\", \"newPasswordConfirmation\"].forEach(key => {\n            if (state.account[key] === \"\") {\n\n                // 1. insert a space before all caps 2. uppercase all first characters\n                // Source: https://stackoverflow.com/questions/4149276/how-to-convert-camelcase-to-camel-case\n                let formattedString = key.replace(/([A-Z])/g, ' $1').replace(/^./, function (str) {\n                    return str.toUpperCase();\n                });\n\n                showErrorSnackbar(\"\\\"\" + formattedString + \"\\\" is empty\");\n                return false;\n            }\n        });\n\n        if (state.account[\"newPassword\"] !== state.account[\"newPasswordConfirmation\"]) {\n            showErrorSnackbar(\"\\\"New Password\\\" and \\\"New Password Confirmation\\\" do not match\");\n            return false;\n        }\n\n        if (state.account[\"newPassword\"].length < 8) {\n            showErrorSnackbar(\"\\\"New Password\\\" too short (at least 8 characters)\");\n            return false;\n        }\n\n        return true;\n    }\n\n    function submitForm1Change() {\n        startForm1SubmittingState();\n\n        if (form1Validation()) {\n            // Looks and feels better if the process actually takes some time\n            setTimeout(() => {\n                axios.put(BACKEND_URL + \"backend/database/account\", {\n                    email: props.account.email,\n                    api_key: props.api_key,\n\n                    new_email: state.account.email,\n                    account_zip: state.account.zip,\n                    account_city: state.account.city,\n                })\n                    .then(response => {\n                        if (response.data.status === \"ok\") {\n                            stopForm1SubmittingState();\n                            props.handleNewAccountData(response);\n                        } else {\n                            showErrorSnackbar(response.data.status);\n                        }\n                    }).catch(response => {\n                    console.log(\"Axios promise rejected! Response:\");\n                    console.log(response);\n                    stopForm1SubmittingState();\n                    showErrorSnackbar(\"The server seems to be offline. See console for details.\");\n                });\n            }, 1000);\n        }\n    }\n\n    function submitForm2Change() {\n        startForm2SubmittingState();\n\n        if (form2Validation()) {\n            // Looks and feels better if the process actually takes some time\n            setTimeout(() => {\n                axios.put(BACKEND_URL + \"backend/database/account\", {\n                    email: props.account.email,\n                    api_key: props.api_key,\n\n                    account_old_password: state.account.oldPassword,\n                    account_new_password: state.account.newPassword,\n                    account_new_password_confirmation: state.account.newPasswordConfirmation,\n                })\n                    .then(response => {\n                        if (response.data.status === \"ok\") {\n                            stopForm2SubmittingState();\n                            form2Success();\n                        } else {\n                            showErrorSnackbar(response.data.status);\n                        }\n                    }).catch(response => {\n                    console.log(\"Axios promise rejected! Response:\");\n                    console.log(response);\n                    stopForm2SubmittingState();\n                    showErrorSnackbar(\"The server seems to be offline. See console for details.\");\n                });\n            }, 1000);\n        }\n    }\n\n    function submitResendEmail() {\n        startResendingEmailState();\n\n        axios.post(BACKEND_URL + \"backend/email/resend\", {\n            email: props.account.email,\n            api_key: props.api_key,\n        })\n            .then(response => {\n                if (response.data.status === \"ok\") {\n                    setTimeout(stopResendingEmailState, 1000);\n                } else {\n                    resetForm1Change();\n                    showErrorSnackbar(response.data.status);\n                }\n            }).catch(response => {\n            console.log(\"Axios promise rejected! Response:\");\n            console.log(response);\n            resetForm1Change();\n            showErrorSnackbar(\"The server seems to be offline. See console for details.\");\n        });\n    }\n\n\n    function focusEmail() {\n        emailInputRef.current.focus()\n    }\n\n    function blurEmail() {\n        emailInputRef.current.blur()\n    }\n\n\n    function focusZip() {\n        zipInputRef.current.focus()\n    }\n\n    function blurZip() {\n        zipInputRef.current.blur()\n    }\n\n\n    function focusCity() {\n        cityInputRef.current.focus()\n    }\n\n    function blurCity() {\n        cityInputRef.current.blur()\n    }\n\n    function openForm2() {\n        let newState = cloneDeep(state);\n        newState.form2Open = true;\n        changeState(newState);\n    }\n\n    function closeForm2() {\n        if (!state.form2Submitting) {\n            let newState = cloneDeep(state);\n            newState.form2Open = false;\n            newState.account.oldPassword = \"\";\n            newState.account.newPassword = \"\";\n            newState.account.newPasswordConfirmation = \"\";\n            newState.account.form2Modified = false;\n            newState.errorMessageVisible = false;\n            changeState(newState);\n        }\n    }\n\n    function form2Success() {\n        let newState = cloneDeep(state);\n        newState.form2Open = false;\n\n        newState.account.oldPassword = \"\";\n        newState.account.newPassword = \"\";\n        newState.account.newPasswordConfirmation = \"\";\n\n        newState.errorMessageVisible = true;\n        newState.errorMessageText = \"Success!\";\n        changeState(newState);\n\n        setTimeout(() => {\n            let newState = cloneDeep(state);\n            newState.form2Open = false;\n\n            newState.account.oldPassword = \"\";\n            newState.account.newPassword = \"\";\n            newState.account.newPasswordConfirmation = \"\";\n\n            newState.errorMessageVisible = false;\n            changeState(newState);\n        }, 1000);\n    }\n\n\n    function focusPassword1() {\n        password1InputRef.current.focus()\n    }\n\n    function blurPassword1() {\n        password1InputRef.current.blur()\n    }\n\n\n    function focusPassword2() {\n        password2InputRef.current.focus()\n    }\n\n    function blurPassword2() {\n        password2InputRef.current.blur()\n    }\n\n\n    function focusPassword3() {\n        password3InputRef.current.focus()\n    }\n\n    function blurPassword3() {\n        password3InputRef.current.blur()\n    }\n\n\n    return (\n        <Container maxWidth=\"md\" className=\"AccountPage\">\n\n            <Grid container spacing={1} className={classes.formContainer}>\n\n                <Grid item xs={12} md={props.account.email_verified ? 9 : 6}>\n                    <CustomTextField\n                        required disabled={props.account.email_verified || state.form1Submitting}\n                        ref={emailInputRef} onTab={focusZip} onEnter={blurEmail} onEscape={blurEmail}\n                        className={classes.textField} variant=\"outlined\" label=\"Email\" fullWidth\n                        value={state.account.email} onChange={(email) => handleFormChange({email: email})}/>\n                </Grid>\n\n                <Grid item xs={12} md={props.account.email_verified ? 3 : 6}>\n                    <div className=\"ButtonBox\">\n                        {!props.account.email_verified && (\n                            <div className={classes.wrapper}>\n                                <Button variant=\"contained\"\n                                        disabled={state.resending || !state.resendPossible || state.form1Modified}\n                                        color=\"secondary\"\n                                        onClick={submitResendEmail}\n                                        className={classes.button}>Resend Verification</Button>\n                                {state.resending && (\n                                    <CircularProgress size={24}\n                                                      className={classes.buttonProgress}\n                                                      color=\"secondary\"/>\n                                )}\n                            </div>\n                        )}\n                        <div className={classes.wrapper}>\n                            <Button variant=\"contained\"\n                                    disabled={state.resending || state.form1Modified}\n                                    color=\"secondary\"\n                                    onClick={openForm2}\n                                    className={classes.button}>Change Password</Button>\n                        </div>\n                    </div>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <div className={classes.divider}/>\n                </Grid>\n\n                <Grid item xs={12} sm={6} md={4}>\n                    <CustomTextField\n                        required\n                        disabled={state.form1Submitting}\n                        ref={zipInputRef} onTab={focusCity} onEnter={blurZip} onEscape={blurZip}\n                        className={classes.textField} variant=\"outlined\" label=\"ZIP Code\" fullWidth\n                        value={state.account.zip} onChange={(zip) => handleFormChange({zip: zip})}/>\n                </Grid>\n\n                <Grid item xs={12} sm={6} md={4}>\n                    <CustomTextField\n                        required\n                        disabled={state.form1Submitting}\n                        ref={cityInputRef} onTab={focusEmail} onEnter={blurCity} onEscape={blurCity}\n                        className={classes.textField} variant=\"outlined\" label=\"City\" fullWidth\n                        value={state.account.city} onChange={(city) => handleFormChange({city: city})}/>\n                </Grid>\n\n                <Grid item xs={12} sm={6} md={4}>\n                    <CustomTextField\n                        required disabled\n                        className={classes.textField} variant=\"outlined\" label=\"Country\" fullWidth\n                        value={state.account.country}/>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <div className={classes.divider}/>\n                </Grid>\n\n                {state.form1Modified && (\n                    <Grid item xs={12}>\n                        <div className=\"ButtonBox\">\n                            <div className={classes.wrapper}>\n                                <Button variant=\"contained\"\n                                        disabled={state.form1Submitting}\n                                        color=\"secondary\"\n                                        onClick={resetForm1Change}\n                                        className={classes.button}>Cancel</Button>\n                            </div>\n                            <div className={classes.wrapper}>\n                                <Button variant=\"contained\"\n                                        disabled={state.form1Submitting}\n                                        color=\"secondary\"\n                                        onClick={submitForm1Change}\n                                        className={classes.button}>Submit</Button>\n                                {state.form1Submitting && (\n                                    <CircularProgress size={24}\n                                                      className={classes.buttonProgress}\n                                                      color=\"secondary\"/>\n                                )}\n                            </div>\n                        </div>\n                    </Grid>\n                )}\n\n            </Grid>\n\n            {state.errorMessageVisible && (\n                <Snackbar className={classes.snackbar}\n                          open={true}\n                          anchorOrigin={{vertical: 'bottom', horizontal: 'center'}}>\n                    <SnackbarContent\n                        className={classes.snackbarContentError}\n                        aria-describedby=\"message-id\"\n                        message={<span id=\"message-id\">{state.errorMessageText}</span>}\n                    />\n                </Snackbar>\n            )}\n\n            <Dialog onClose={closeForm2} aria-labelledby=\"simple-dialog-title\" open={state.form2Open}>\n\n                <Grid container spacing={1} className={classes.form2Container}>\n\n                    <Grid item xs={12}>\n                        <CustomTextField\n                            type=\"password\"\n                            required disabled={state.form2Submitting}\n                            ref={password1InputRef} onTab={focusPassword2} onEnter={focusPassword2}\n                            onEscape={blurPassword1}\n                            className={clsx(classes.textField, classes.passwordTextField)} variant=\"outlined\"\n                            label=\"Old Password\" fullWidth\n                            value={state.account.oldPassword}\n                            onChange={(oldPassword) =>\n                                handleFormChange({oldPassword: oldPassword})}/>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <CustomTextField\n                            type=\"password\"\n                            required disabled={state.form2Submitting}\n                            ref={password2InputRef} onTab={focusPassword3} onEnter={focusPassword3}\n                            onEscape={blurPassword2}\n                            className={clsx(classes.textField, classes.passwordTextField)} variant=\"outlined\"\n                            label=\"New Password\" fullWidth\n                            value={state.account.newPassword}\n                            onChange={(newPassword) =>\n                                handleFormChange({newPassword: newPassword})}/>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <CustomTextField\n                            type=\"password\"\n                            required disabled={state.form2Submitting}\n                            ref={password3InputRef} onTab={focusPassword1} onEnter={submitForm2Change}\n                            onEscape={blurPassword3}\n                            className={clsx(classes.textField, classes.passwordTextField)} variant=\"outlined\"\n                            label=\"New Password Confirmation\" fullWidth\n                            value={state.account.newPasswordConfirmation}\n                            onChange={(newPasswordConfirmation) =>\n                                handleFormChange({newPasswordConfirmation: newPasswordConfirmation})}/>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <div className={clsx(\"ButtonBox\", classes.buttonBox)}>\n                            <div className={classes.wrapper}>\n                                <Button variant=\"contained\"\n                                        disabled={state.form2Submitting}\n                                        color=\"secondary\"\n                                        onClick={closeForm2}\n                                        className={classes.button}>Cancel</Button>\n                            </div>\n                            <div className={classes.wrapper}>\n                                <Button variant=\"contained\"\n                                        disabled={state.form2Submitting}\n                                        color=\"secondary\"\n                                        onClick={submitForm2Change}\n                                        className={classes.button}>Submit</Button>\n                                {state.form2Submitting && (\n                                    <CircularProgress size={24}\n                                                      className={classes.buttonProgress}\n                                                      color=\"secondary\"/>\n                                )}\n                            </div>\n                        </div>\n                    </Grid>\n\n                </Grid>\n            </Dialog>\n        </Container>\n    );\n}\n\n\n/* Redux link -------------------------------------------------------------------- */\n/* Making the RouterComponent watch the loggedIn property of the store */\n\n\nconst mapStateToProps = state => ({\n    account: state.account,\n    api_key: state.api_key,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    handleNewAccountData: (response) => dispatch(handleNewAccountData(response)),\n});\n\nexport const AccountPage = connect(mapStateToProps, mapDispatchToProps)(AccountPageComponent);\n\n","import React from 'react';\nimport {makeStyles} from \"@material-ui/core/styles\";\n\n\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {handleNewAccountData} from \"../../ReduxActions\";\nimport {connect} from \"react-redux\";\nimport axios from \"axios\";\nimport {BACKEND_URL} from \"../../secrets\";\nimport clsx from \"clsx\";\n\nimport CheckIcon from '@material-ui/icons/Check';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport IconButton from '@material-ui/core/IconButton';\n\nconst useStyles = makeStyles(theme => ({\n    callPaper: {\n        paddingTop: theme.spacing(1),\n        paddingRight: theme.spacing(1),\n        paddingBottom: theme.spacing(1),\n        paddingLeft: theme.spacing(2),\n\n        marginBottom: theme.spacing(1),\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n    },\n    inlineText: {\n        display: \"inline\"\n    },\n    phoneText: {\n        marginRight: theme.spacing(3),\n        fontWeight: \"500\",\n    },\n    timeText: {\n        flexGrow: 1,\n        fontWeight: \"400\",\n    },\n}));\n\n\nexport function CallComponent(props) {\n\n    const classes = useStyles();\n\n    function axiosPutAction(action) {\n        axios.put(BACKEND_URL + \"backend/database/call\", {\n            email: props.account.email,\n            api_key: props.api_key,\n            action: action,\n            call_id: props.call.id,\n        })\n            .then(response => {\n                if (response.data.status === \"ok\") {\n                    props.handleNewAccountData(response);\n                    console.log(response.data.calls);\n                }\n            }).catch(response => {\n            console.log(\"Axios promise rejected! Response:\");\n            console.log(response);\n        });\n    }\n\n    return (\n        <Paper elevation={3} className={classes.callPaper}>\n            <Typography variant=\"body1\" className={clsx(classes.inlineText, classes.phoneText)}>{props.call.phone_number}</Typography>\n            <Typography variant=\"body2\" className={clsx(classes.inlineText, classes.timeText)}>{props.call.timestamp}</Typography>\n            {props.call.status !== \"fulfilled\" && (\n                <React.Fragment>\n                    <IconButton onClick={() => axiosPutAction(\"fulfill\")}>\n                        <CheckIcon color=\"primary\"/>\n                    </IconButton>\n                    <IconButton onClick={() => axiosPutAction(\"decline\")}>\n                        <ClearIcon color=\"primary\"/>\n                    </IconButton>\n                </React.Fragment>\n            )}\n            {props.call.status === \"fulfilled\" && (\n                <IconButton disabled>\n                    <CheckIcon style={{fill: \"transparent\"}}/>\n                </IconButton>\n            )}\n        </Paper>\n    );\n}\n\n\nconst mapStateToProps = state => ({\n    account: state.account,\n    api_key: state.api_key,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    handleNewAccountData: (response) => dispatch(handleNewAccountData(response)),\n});\n\nexport const Call = connect(mapStateToProps, mapDispatchToProps)(CallComponent);\n\n\n","import React, {useState, useRef} from 'react';\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nimport {connect} from 'react-redux';\nimport {handleNewAccountData} from '../../ReduxActions';\n\nimport {Container} from \"@material-ui/core\";\nimport {Typography} from \"@material-ui/core\";\n\nimport {Button} from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Divider from \"@material-ui/core/Divider\";\n\nimport {CircularProgress} from \"@material-ui/core\";\n\nimport {CustomTextField} from \"../../Components/CustomTextField\";\n\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\n\nimport {BACKEND_URL} from \"../../secrets\";\n\nimport {Call} from \"./Call\";\n\nimport axios from 'axios';\n\n\nimport Grid from \"@material-ui/core/Grid\";\nimport {Link} from \"react-router-dom\";\n\nimport WifiIcon from '@material-ui/icons/Wifi';\nimport WifiOffIcon from '@material-ui/icons/WifiOff';\nimport AddIcon from '@material-ui/icons/Add';\n\nimport './CallsPage.scss';\n\nvar cloneDeep = require('lodash.clonedeep');\n\n\nconst useStyles = makeStyles(theme => ({\n    title: {\n        display: \"block\",\n        textAlign: \"center\",\n        marginBottom: theme.spacing(2),\n    },\n    link: {\n        textDecoration: \"none\",\n        display: \"block\"\n    },\n    button: {\n        color: \"white\"\n    },\n    textField: {\n        marginBottom: theme.spacing(1)\n    },\n    wrapper: {\n        marginTop: theme.spacing(1),\n        marginLeft: theme.spacing(0.5),\n        marginRight: theme.spacing(0.5),\n        position: 'relative',\n    },\n    buttonProgress: {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        marginTop: -12,\n        marginLeft: -12,\n    },\n    buttonIcon: {\n        marginLeft: -8,\n        marginRight: -4,\n    },\n    snackbar: {\n        margin: theme.spacing(1),\n    },\n    snackbarContentError: {\n        backgroundColor: theme.palette.primary.main,\n    },\n    snackbarContentSuccess: {\n        backgroundColor: theme.palette.secondary.main,\n    },\n    switchLink: {\n        marginTop: theme.spacing(2),\n        textAlign: \"center\",\n    },\n    formContainer: {\n        marginTop: theme.spacing(2),\n        marginBottom: theme.spacing(2),\n    },\n    divider: {\n        marginTop: theme.spacing(6),\n        marginBottom: theme.spacing(1),\n    },\n    subheading: {\n        marginBottom: theme.spacing(1),\n        marginLeft: theme.spacing(1),\n    },\n    placeholder: {\n        marginLeft: theme.spacing(0.5),\n    },\n}));\n\nclass CallsPageWrapper extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loadingNewCall: false,\n            loadingGoOnline: false,\n            errorMessageVisible: false,\n            errorMessageText: \"\",\n        };\n\n        this.componentDidMount = this.componentDidMount.bind(this);\n        this.axiosPutAction = this.axiosPutAction.bind(this);\n\n        this.acceptNewCall = this.acceptNewCall.bind(this);\n        this.goOnline = this.goOnline.bind(this);\n        this.goOffline = this.goOffline.bind(this);\n    }\n\n    componentDidMount() {\n\n        axios.get(BACKEND_URL + \"backend/database/call\", {\n            email: this.props.account.email,\n            api_key: this.props.api_key,\n        })\n            .then(response => {\n                if (response.data.status === \"ok\") {\n                    this.props.handleNewAccountData(response);\n                }\n            }).catch(response => {\n            console.log(\"Axios promise rejected! Response:\");\n            console.log(response);\n        });\n    }\n\n    axiosPutAction(action) {\n        axios.put(BACKEND_URL + \"backend/database/call\", {\n            email: this.props.account.email,\n            api_key: this.props.api_key,\n            action: action,\n        })\n            .then(response => {\n                if (response.data.status === \"ok\") {\n                    this.props.handleNewCallData(response);\n                    console.log(response.data.calls);\n                } else if (response.data.status === \"no new calls\") {\n                    this.setState({\n                        errorMessageVisible: true,\n                        errorMessageText: \"Currently no new calls. Please try again in a few minutes.\",\n                    });\n                    setTimeout(() => {\n                        this.setState({\n                            errorMessageVisible: false,\n                        })\n                    }, 2500);\n                }\n\n            }).catch(response => {\n            console.log(\"Axios promise rejected! Response:\");\n            console.log(response);\n        });\n    }\n\n    acceptNewCall() {\n        this.setState({loadingNewCall: true});\n        setTimeout(() => {\n            this.axiosPutAction(\"accept\");\n            this.setState({loadingNewCall: false});\n        }, 1000);\n    }\n\n    goOnline() {\n        this.setState({loadingGoOnline: true});\n        setTimeout(() => {\n            this.axiosPutAction(\"go_online\");\n            this.setState({loadingGoOnline: false});\n        }, 1000);\n    }\n\n    goOffline() {\n        this.setState({loadingGoOnline: true});\n        setTimeout(() => {\n            this.axiosPutAction(\"go_offline\");\n            this.setState({loadingGoOnline: false});\n        }, 1000);\n    }\n\n    render() {\n        return (\n            <CallsPageComponent calls={this.props.calls}\n\n                                account={this.props.account}\n                                acceptNewCall={this.acceptNewCall}\n                                loadingNewCall={this.state.loadingNewCall}\n\n                                goOnline={this.goOnline}\n                                goOffline={this.goOffline}\n                                loadingGoOnline={this.state.loadingGoOnline}\n\n                                errorMessageVisible={this.state.errorMessageVisible}\n                                errorMessageText={this.state.errorMessageText}/>\n        );\n    }\n\n}\n\nexport function CallsPageComponent(props) {\n\n    const classes = useStyles();\n\n    return (\n        <Container maxWidth=\"md\" className=\"CallsPage\">\n\n            <Grid container spacing={1} className={classes.formContainer}>\n\n                <Grid item xs={12}>\n                    <div className=\"ButtonBox\">\n                        <div className={classes.wrapper}>\n                            <Button variant=\"contained\"\n                                    disabled={props.loadingNewCall || !props.account.online}\n                                    color=\"secondary\"\n                                    onClick={props.acceptNewCall}\n                                    startIcon={props.loadingNewCall ?\n                                        <CircularProgress size={20} className={classes.buttonIcon} color=\"secondary\"/> :\n                                        <AddIcon className={classes.buttonIcon}/>\n                                    }\n                                    className={classes.button}>Accept Call</Button>\n                        </div>\n\n                        <div className={classes.wrapper}>\n                            <Button variant=\"contained\"\n                                    disabled={props.loadingGoOnline}\n                                    color=\"secondary\"\n                                    startIcon={props.loadingGoOnline ?\n                                        <CircularProgress size={20} className={classes.buttonIcon} color=\"secondary\"/> : (\n                                            props.account.online ?\n                                            <WifiIcon className={classes.buttonIcon}/> :\n                                            <WifiOffIcon className={classes.buttonIcon}/>\n                                    )}\n                                    onClick={props.account.online ? props.goOffline : props.goOnline}\n                                    className={classes.button}>{props.account.online ? \"online\" : \"offline\"}</Button>\n                        </div>\n                    </div>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Divider className={classes.divider}/>\n                </Grid>\n\n                <Typography variant=\"h6\" className={classes.subheading}>Accepted Calls</Typography>\n\n                <Grid item xs={12}>\n                    {props.calls.accepted.map((call, index) => (\n                        <Call key={index} call={call}/>\n                    ))}\n                    {props.calls.accepted.length === 0 && (\n                        <Typography variant=\"body1\" className={classes.placeholder}>No accepted Calls</Typography>\n                    )}\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Divider className={classes.divider}/>\n                </Grid>\n\n                <Typography variant=\"h6\" className={classes.subheading}>Fulfilled Calls</Typography>\n\n                <Grid item xs={12}>\n                    {props.calls.fulfilled.map((call, index) => (\n                        <Call key={index} call={call}/>\n                    ))}\n                    {props.calls.fulfilled.length === 0 && (\n                        <Typography variant=\"body1\" className={classes.placeholder}>No fulfilled Calls</Typography>\n                    )}\n                </Grid>\n\n            </Grid>\n\n            <Snackbar className={classes.snackbar}\n                      open={props.errorMessageVisible}\n                      anchorOrigin={{vertical: 'top', horizontal: 'center'}}>\n                <SnackbarContent\n                    className={classes.snackbarContentError}\n                    aria-describedby=\"message-id\"\n                    message={<span id=\"message-id\">{props.errorMessageText}</span>}\n                />\n            </Snackbar>\n\n        </Container>\n    );\n}\n\n\n/* Redux link -------------------------------------------------------------------- */\n/* Making the RouterComponent watch the loggedIn property of the store */\n\n\nconst mapStateToProps = state => ({\n    calls: state.calls,\n    account: state.account,\n    api_key: state.api_key,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    handleNewCallData: (response) => dispatch(handleNewAccountData(response)),\n});\n\nexport const CallsPage = connect(mapStateToProps, mapDispatchToProps)(CallsPageWrapper);\n\n","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport {Container} from \"@material-ui/core\";\n\nimport './GuidePage.scss';\n\nconst useStyles = makeStyles(theme => ({\n    title: {\n        display: \"block\",\n        textAlign: \"center\",\n        marginBottom: theme.spacing(3),\n    },\n    description: {\n        display: \"block\",\n        textAlign: \"center\",\n        marginBottom: theme.spacing(6),\n    },\n    crowdSource: {\n        display: \"block\",\n        textAlign: \"center\",\n        marginTop: theme.spacing(6),\n        marginBottom: theme.spacing(6),\n    },\n    root: {\n        width: '100%',\n    },\n    heading: {\n        fontWeight: \"500\"\n    },\n}));\n\nexport const GuidePage = (props) => {\n    const classes = useStyles();\n\n    return (\n        <Container maxWidth=\"md\" className=\"GuidePage\">\n            <Typography variant=\"h4\" className={classes.title}>Guide <em>(coming soon)</em></Typography>\n\n            <Container maxWidth=\"sm\">\n                <Typography variant=\"body1\" className={classes.description}>\n                    Call-Center-Volunteers should not have to figure out everything by themselves.\n\n                    This page will contain a <strong>list of tips</strong> for <strong>all kinds of\n                    scenarios</strong> our\n                    volunteers might have to conquer.\n\n                    <br/><br/>\n\n                    Since we do not want to share \"truth's\" specified by only a small number of people we are\n                    <strong> not yet ready to share</strong> these tips.\n\n                    We're already <strong>crowdsourcing the best strategies</strong> which people broadly agreed on.\n\n                    <br/><br/>\n\n                    Stay tuned!\n                </Typography>\n            </Container>\n\n            <div className={classes.root}>\n\n                <ExpansionPanel disabled>\n                    <ExpansionPanelSummary\n                        expandIcon={<ExpandMoreIcon/>}>\n                        <Typography variant=\"subtitle1\" className={classes.heading}>\n                            Grocery shopping\n                        </Typography>\n                    </ExpansionPanelSummary>\n\n                </ExpansionPanel>\n\n                <ExpansionPanel disabled>\n                    <ExpansionPanelSummary\n                        expandIcon={<ExpandMoreIcon/>}>\n                        <Typography variant=\"subtitle1\" className={classes.heading}>\n                            Picking up parcels from the post office\n                        </Typography>\n                    </ExpansionPanelSummary>\n                </ExpansionPanel>\n\n                <ExpansionPanel disabled>\n                    <ExpansionPanelSummary\n                        expandIcon={<ExpandMoreIcon/>}>\n                        <Typography variant=\"subtitle1\" className={classes.heading}>\n                            Stores are closed/risky: Helping with internet shopping\n                        </Typography>\n                    </ExpansionPanelSummary>\n                </ExpansionPanel>\n\n                <ExpansionPanel disabled>\n                    <ExpansionPanelSummary\n                        expandIcon={<ExpandMoreIcon/>}>\n                        <Typography variant=\"subtitle1\" className={classes.heading}>\n                            Picking up prescription/medication\n                        </Typography>\n                    </ExpansionPanelSummary>\n                </ExpansionPanel>\n\n                <ExpansionPanel disabled>\n                    <ExpansionPanelSummary\n                        expandIcon={<ExpandMoreIcon/>}>\n                        <Typography variant=\"subtitle1\" className={classes.heading}>\n                            Dealing with mental health\n                        </Typography>\n                    </ExpansionPanelSummary>\n                </ExpansionPanel>\n\n            </div>\n\n            <Container maxWidth=\"sm\">\n                <Typography variant=\"body1\" className={classes.crowdSource}>\n                    If you want to <strong>help us in the process</strong> feel free to contact us via:\n                    <br/>\n                    <a href=\"mailto:info@hilfe-am-ohr.de\">info@hilfe-am-ohr.de</a>\n\n                    <br/><br/>\n\n                    If you want to <strong>contribute by translating this page</strong> into more languages:\n                    <br/>\n                    <a href=\"mailto:languages@hilfe-am-ohr.de\">languages@hilfe-am-ohr.de</a>\n                </Typography>\n            </Container>\n        </Container>\n    );\n};\n","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport {Button, CircularProgress, Container} from \"@material-ui/core\";\nimport clsx from \"clsx\";\n\nimport './IndexPage.scss';\nimport {Link} from \"react-router-dom\";\n\nconst useStyles = makeStyles(theme => ({\n    title: {\n        display: \"block\",\n        textAlign: \"center\",\n        marginBottom: theme.spacing(1),\n    },\n    title2: {\n        display: \"block\",\n        textAlign: \"center\",\n        marginBottom: theme.spacing(3),\n    },\n    videoContainer: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        marginBottom: theme.spacing(3),\n    },\n    description: {\n        display: \"block\",\n        textAlign: \"center\",\n        marginBottom: theme.spacing(3),\n    },\n    links: {\n        display: \"block\",\n        textAlign: \"center\",\n        marginBottom: theme.spacing(3),\n        lineHeight: theme.spacing(0.3),\n    },\n    link: {\n        textDecoration: \"none\",\n        display: \"block\"\n    },\n    button: {\n        color: \"white\",\n        marginTop: theme.spacing(1),\n        marginLeft: theme.spacing(0.5),\n        marginRight: theme.spacing(0.5),\n        position: 'relative',\n    }\n}));\n\nexport const IndexPage = (props) => {\n    const classes = useStyles();\n\n    return (\n        <div className=\"IndexPage\">\n            <Typography variant=\"h4\" className={classes.title}>Hilfe am Ohr!</Typography>\n            <Typography variant=\"h6\" className={classes.title2}>Eine Hotline für Menschen ohne Internetzugang</Typography>\n\n            <Container maxWidth=\"sm\">\n                <div className={clsx(classes.videoContainer, \"VideoContainer\")}>\n                    <iframe src=\"https://www.youtube.com/embed/veRkcaPmV4g?rel=0\" frameBorder=\"0\"\n                            allowFullScreen=\"allowfullscreen\"/>\n                </div>\n                <Typography variant=\"body1\" className={classes.description}>\n                    <em>Showcase coming soon!</em>\n                </Typography>\n\n                <Typography variant=\"body1\" className={classes.links}>\n                    Webapp Frontend Repository on <a target=\"_blank\" href=\"https://github.com/dostuffthatmatters/callcenter-frontend\">GitHub</a>\n                    <br/>\n                    Webapp Backend Repository on <a target=\"_blank\" href=\"https://github.com/dostuffthatmatters/callcenter-backend\">GitHub</a>\n                    <br/>\n                    Telegram Bot Repository: <em>sharing soon</em>\n                    <br/>\n                    Hub Backend Repository: <em>sharing soon</em>\n                </Typography>\n            </Container>\n\n            <div className=\"ButtonBox\">\n                <Button variant=\"contained\"\n                        color=\"secondary\"\n                        className={classes.button}>\n                    <Link to={\"/guide\"} className={classes.link}>Read our Guide</Link>\n                </Button>\n                <Button variant=\"contained\"\n                        color=\"secondary\"\n                        className={classes.button}>\n                    <Link to={\"/register\"} className={classes.link}>Register</Link>\n                </Button>\n            </div>\n\n        </div>\n    );\n};\n","/* General Imports --------------------------------------------------------------- */\nimport React from 'react';\nimport {connect} from 'react-redux';\nimport {makeStyles} from '@material-ui/core/styles';\n\n/* Routing Imports --------------------------------------------------------------- */\nimport {Switch, Route, BrowserRouter, Redirect, Link} from 'react-router-dom';\n\n\n/* Component Imports ------------------------------------------------------------- */\nimport {Navbar, ReducedNavbar} from \"../App/Navbar/Navbar\";\nimport {LoginPage} from '../App/SignInPage/LoginPage';\nimport {RegisterPage} from \"../App/SignInPage/RegisterPage\";\nimport {AccountPage} from \"../App/AccountPage/AccountPage\";\nimport {CallsPage} from \"../App/CallsPage/CallsPage\";\nimport {GuidePage} from \"../App/GuidePage/GuidePage\";\nimport {IndexPage} from \"../App/IndexPage/IndexPage\";\n// import {Footer} from \"../App/Footer/Footer\";\n\n\n/* Component --------------------------------------------------------------------- */\n\n\nconst useStyles = makeStyles(theme => ({\n    content: {\n        flexGrow: 1,\n    },\n    fullHeightContainer: {\n        minHeight: \"100vh\",\n    },\n    children: {\n        padding: theme.spacing(0),\n    },\n    toolbar: theme.mixins.toolbar,\n}));\n\nconst Content = (props) => {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n            <main className={classes.content}>\n                <div className={classes.fullHeightContainer}>\n                    <div className={classes.toolbar}/>\n                    <div className={classes.children}>\n                        {props.children}\n                    </div>\n                </div>\n            </main>\n        </React.Fragment>\n    );\n};\n\n\nconst RouterComponent = (props) => (\n    <BrowserRouter>\n        <Route>\n            <Switch>\n                <Route exact strict path=\"/\">\n                    <ReducedNavbar/>\n                    <IndexPage/>\n                </Route>\n\n                <Route exact strict path=\"/guide\">\n                    <Navbar/>\n                    <Content>\n                        <GuidePage/>\n                    </Content>\n                </Route>\n\n                <Route exact strict path=\"/calls\">\n                    {props.loggedIn && (\n                        <React.Fragment>\n                            <Navbar/>\n                            <Content>\n                                <CallsPage/>\n                            </Content>\n                        </React.Fragment>\n                    )}\n                    {(!props.loggedIn && props.autoLogin) && (<Navbar/>)}\n                    {(!props.loggedIn && !props.autoLogin) && (<Redirect to=\"/login\"/>)}\n                </Route>\n\n                <Route exact strict path=\"/account\">\n                    {props.loggedIn && (\n                        <React.Fragment>\n                            <Navbar/>\n                            <Content>\n                                <AccountPage/>\n                            </Content>\n                        </React.Fragment>\n                    )}\n                    {(!props.loggedIn && props.autoLogin) && (<Navbar/>)}\n                    {(!props.loggedIn && !props.autoLogin) && (<Redirect to=\"/login\"/>)}\n                </Route>\n\n                <Route exact strict path=\"/login\">\n                    {props.loggedIn && (\n                        <Redirect to=\"/account\"/>\n                    )}\n                    {!props.loggedIn && (\n                        <React.Fragment>\n                            <ReducedNavbar/>\n                            <LoginPage/>\n                        </React.Fragment>\n                    )}\n                </Route>\n                <Route exact strict path=\"/register\">\n                    {props.loggedIn && (\n                        <Redirect to=\"/account\"/>\n                    )}\n                    {!props.loggedIn && (\n                        <React.Fragment>\n                            <ReducedNavbar/>\n                            <RegisterPage/>\n                        </React.Fragment>\n                    )}\n                </Route>\n                <Route exact strict path=\"/logout\">\n                    <Redirect to=\"/guide\"/>\n                </Route>\n\n                <Route>\n                    <ReducedNavbar/>\n                    <Content>\n                        <p>page not found</p>\n                    </Content>\n                </Route>\n            </Switch>\n        </Route>\n    </BrowserRouter>\n);\n\n\n/* Redux link -------------------------------------------------------------------- */\n/* Making the RouterComponent watch the loggedIn property of the store */\n\nconst mapStateToProps = state => ({\n    loggedIn: state.loggedIn,\n    autoLogin: state.autoLogin,\n});\n\nconst mapDispatchToProps = dispatch => ({});\n\nexport const Router = connect(mapStateToProps, mapDispatchToProps)(RouterComponent);\n","/* General Imports --------------------------------------------------------------- */\nimport React from 'react';\n\n\n/* Styling Imports --------------------------------------------------------------- */\nimport {createMuiTheme} from \"@material-ui/core/styles\";\nimport {ThemeProvider} from \"@material-ui/core/styles\";\nimport {BreakpointProvider} from 'react-socks';\nimport './Themer.scss';\n\n\n/* Component Imports ------------------------------------------------------------- */\nimport {Router} from './Router';\n\n\n/* Theme ------------------------------------------------------------------------- */\n\n\nconst theme = createMuiTheme({\n\tpalette : {\n\t\tprimary: {\n\t\t\tmain: 'hsl(229, 25%, 18%)',\n\t\t\ttransparent80: 'rgba(40, 44, 52, 0.8)',\n\t\t},\n\t\tsecondary: {\n\t\t\tmain: 'hsl(344, 93%, 50%)',\n\t\t\ttransparent80: 'hsla(340, 100%, 50%, 0.8)',\n\t\t},\n\t\twhite: {\n\t\t\tmain: 'rgb(255, 255, 255)',\n\t\t\ttransparent80: 'rgba(255, 255, 255, 0.8)',\n\t\t\ttransparent60: 'rgba(255, 255, 255, 0.6)',\n\t\t},\n\n\t\tmaastrichtBlue: {\n\t\t\tmain: 'hsl(237, 77%, 18%)',\n\t\t\ttransparent80: 'hsla(237, 77%, 18%, 0.8)',\n\t\t\ttransparent60: 'hsla(237, 77%, 18%, 0.6)',\n\t\t},\n\t\tpinctonBlue: {\n\t\t\tmain: 'hsl(206, 81%, 50%)',\n\t\t\ttransparent80: 'hsla(206, 81%, 50%, 0.8)',\n\t\t\ttransparent60: 'hsla(206, 81%, 50%, 0.6)',\n\t\t},\n\t\tdesireMagenta: {\n\t\t\tmain: 'hsl(344, 93%, 50%)',\n\t\t\ttransparent80: 'hsla(344, 93%, 50%, 0.8)',\n\t\t\ttransparent60:  'hsla(344, 93%, 50%, 0.6)',\n\t\t\ttransparent40:  'hsla(344, 93%, 50%, 0.4)',\n\t\t\ttransparent20:  'hsla(344, 93%, 50%, 0.2)',\n\t\t},\n\t\tgunmetalGray: {\n\t\t\tmain: 'hsl(229, 25%, 18%)',\n\t\t\ttransparent80: 'hsla(229, 25%, 18%, 0.8)',\n\t\t\ttransparent60: 'hsla(229, 25%, 18%, 0.6)',\n\t\t},\n\t\tgray1: 'hsl(0, 0%, 95%)',\n\t\tgray2: 'hsl(0, 0%, 90%)',\n\t}\n});\n\n\n/* Component --------------------------------------------------------------------- */\n\n\nexport const Themer = () => {\n\treturn (\n\t\t<ThemeProvider theme={theme}>\n\t\t\t<BreakpointProvider>\n\t\t\t\t<Router/>\n\t\t\t</BreakpointProvider>\n\t\t</ThemeProvider>\n\t);\n};\n","\n/* General Imports --------------------------------------------------------------- */\nimport React from 'react';\nimport {createStore} from 'redux'\nimport {Provider} from \"react-redux\";\nimport {Themer} from \"./Themer\";\n\n\nimport Cookies from 'js-cookie';\nimport axios from \"axios\";\nimport {handleLogin, abortAutoLogin, startAutoLogin} from \"../ReduxActions\";\n\nimport {BACKEND_URL} from \"../secrets\";\n\n\nvar cloneDeep = require('lodash.clonedeep');\n\n\nfunction storeReducer(state = {\n    loggedIn: false,\n    autoLogin: false,\n\n    account: {\n        email: \"\",\n        online: false,\n    },\n    calls: {\n        accepted: [],\n        fulfilled: []\n    },\n    api_key: \"\",\n}, action) {\n\n    let newState = cloneDeep(state);\n\n    switch (action.type) {\n        case \"LOGIN\":\n            newState.loggedIn = true;\n            newState.autoLogin = false;\n            newState.api_key = action.api_key;\n            newState.account = action.account;\n            newState.calls = action.calls;\n\n            Cookies.set('email', action.account.email, {expires: 7});\n            Cookies.set('api_key', action.api_key, {expires: 7});\n\n            return newState;\n\n        case \"LOGOUT\":\n            newState.loggedIn = false;\n            delete newState.account.email;\n            delete newState.api_key;\n\n            Cookies.remove('email');\n            Cookies.remove('api_key');\n\n            return newState;\n\n        case \"START_AUTOLOGIN\":\n            newState.autoLogin = true;\n            return newState;\n\n        case \"ABORT_AUTOLOGIN\":\n            newState.autoLogin = false;\n\n            Cookies.remove('email');\n            Cookies.remove('api_key');\n\n            return newState;\n\n        case \"NEW_ACCOUNT_DATA\":\n            newState.account = action.account;\n            newState.calls = action.calls;\n\n            Cookies.remove('email');\n            Cookies.set('email', action.account.email);\n            return newState;\n\n        default:\n            return newState;\n    }\n}\n\nlet store = createStore(storeReducer);\n\n\n// Try to log in automatically on launch\n\nlet cookieEmail =  Cookies.get('email');\nlet cookieApiKey =  Cookies.get('api_key');\n\nif (cookieEmail !== undefined && cookieApiKey !== undefined) {\n    store.dispatch(startAutoLogin());\n    axios.post(BACKEND_URL + \"backend/login\", {email: cookieEmail, api_key: cookieApiKey})\n        .then(response => {\n            if (response.data.status === \"ok\") {\n                // Instant view-change looks laggy rather than fast -> 1.0 second delay\n                setTimeout(() => {\n                    store.dispatch(handleLogin(response));\n                }, 1000);\n            } else {\n                store.dispatch(abortAutoLogin());\n            }\n        }).catch(response => {\n        console.log(\"Axios promise rejected! Response:\");\n        console.log(response);\n        store.dispatch(abortAutoLogin());\n    });\n}\n\nexport const ReduxWrapper = () => {\n\n    return (\n        <Provider store={store}>\n            <Themer/>\n        </Provider>\n    );\n};\n","/* General Imports --------------------------------------------------------------- */\nimport React from 'react';\n\n\n/* Component Imports ------------------------------------------------------------- */\nimport {ReduxWrapper} from \"./ReduxWrapper\";\n\n\n/* Component --------------------------------------------------------------------- */\n\n\nconst Wrapper = () => {\n\n\t// window.console.log = () => {};\n\t// window.console.warn = () => {};\n\t// window.console.error = () => {};\n\n\treturn <ReduxWrapper/>;\n};\n\nexport default Wrapper;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Wrapper from './Wrappers/Wrapper';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Wrapper />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}