{"version":3,"sources":["ReduxActions/index.jsx","Components/CustomTextField.jsx","App/Navbar/NavbarTranslation.jsx","App/Navbar/Navbar.jsx","App/SignInPage/SignInTranslation.jsx","App/SignInPage/LoginPage.jsx","App/SignInPage/RegisterPage.jsx","App/AccountPage/AccountPageTranslation.jsx","App/AccountPage/AccountPage.jsx","App/CallsPage/Call.jsx","App/CallsPage/CallsPageTranslation.jsx","App/CallsPage/CallsPage.jsx","App/GuidePage/GuidePageTranslation.jsx","App/GuidePage/GuidePage.jsx","App/IndexPage/IndexPageTranslation.jsx","App/IndexPage/IndexPage.jsx","Wrappers/Router.jsx","Wrappers/Themer.jsx","Wrappers/ReduxWrapper.jsx","Wrappers/Wrapper.jsx","serviceWorker.js","index.js"],"names":["handleLogin","response","type","api_key","data","account","calls","handleNewAccountData","switchLanguage","language","CustomTextField","React","forwardRef","props","ref","TextField","fullWidth","className","required","disabled","helperText","variant","multiline","rowsMax","value","inputRef","onChange","event","target","onKeyDown","which","preventDefault","onTab","onEnter","console","log","onEscape","onBlur","label","NavbarTranslation","guide","english","deutsch","login","logout","logoutQuestion","cancel","menu","useStyles","makeStyles","theme","appBar","zIndex","drawer","width","flexShrink","drawerPaper","toolbar","mixins","navBar","backgroundColor","palette","gunmetalGray","main","menuButton","marginRight","spacing","title","flexGrow","HeaderLanguageButton","padding","overflow","borderRadius","HeaderLogoButton","margin","HeaderIcon","height","button","marginBottom","alignItems","justifyContent","textTransform","transitionDelay","transitionDuration","topButton","marginTop","link","textDecoration","display","divider","marginLeft","wrapper","position","CircularProgress","drawerBox","drawerScrollBox","paddingBottom","logoutDialog","boxSizing","overflowX","logoutDialogContainer","scroll","logoutDialogButton","color","logoutDialogWrapper","logoutDialogTitle","textAlign","Navbar","connect","state","loggedIn","autoLogin","dispatch","handleLogout","classes","path","window","location","pathname","initialPageTitle","startsWith","useState","pageTitle","setPageTitle","open","setLogoutDialogState","drawerIsOpen","toggleDrawer","languageMenuAnchor","toggleLanguageMenuAnchor","pageTitleComponent","Typography","noWrap","languageMenuComponent","IconButton","aria-label","edge","onClick","currentTarget","disableRipple","alt","style","fill","fontSize","pageLogoComponent","to","pageButtons","Fragment","Button","size","startIcon","clsx","loginButton","small","down","AppBar","Toolbar","Drawer","onClose","role","Divider","large","up","CssBaseline","paper","Dialog","aria-labelledby","maxWidth","Grid","container","item","xs","buttonBox","anchorElement","handleClose","ReducedNavbar","LanguageMenu","id","anchorEl","keepMounted","Boolean","MenuItem","SignInTranslation","serverOffline","invalidEmailPassword","email","password","confirmPassword","noAccountYet","germany","fieldEmpty","passwordConfirmationMatch","passwordTooShort","register","zipCode","city","country","alreadyHaveAnAccount","emailInvalid","emailTaken","zipInvalid","cityInvalid","defaultError","cloneDeep","require","textField","buttonProgress","top","left","formContainer","snackbar","snackbarContentError","primary","snackbarContentSuccess","secondary","switchLink","LoginPage","emailInputRef","useRef","passwordInputRef","loading","errorMessageVisible","errorMessageText","changeState","handleFormChange","errorSnackbar","text","newState","blurEmail","blurPassword","startLoading","axios","post","BACKEND_URL","then","setTimeout","status","catch","focusPassword","current","focus","blur","Container","Snackbar","anchorOrigin","vertical","horizontal","SnackbarContent","aria-describedby","message","RegisterPage","passwordConfirmationInputRef","zipInputRef","cityInputRef","countryInputRef","formData","passwordConfirmation","zip","newFormData","forEach","key","blurPasswordConfirmation","blurZip","blurCity","formValid","length","formValidation","account_email","account_password","account_passwordConfirmation","account_zip","account_city","account_country","focusPasswordConfirmation","focusZip","focusCity","sm","md","AccountPageTranslation","passwordFieldEmpty","resendVerification","changePassword","submit","oldPassword","newPassword","newPasswordConfirmation","passwordTextField","form2Container","paddingTop","paddingRight","paddingLeft","AccountPage","password1InputRef","password2InputRef","password3InputRef","initialState","address","resending","resendPossible","form1Modified","form1Submitting","form2Submitting","form2Open","resetForm1Change","stopResendingEmailState","stopForm1SubmittingState","stopForm2SubmittingState","form2Modified","showErrorSnackbar","submitForm2Change","startForm2SubmittingState","put","account_old_password","account_new_password","account_new_password_confirmation","form2Success","closeForm2","focusPassword2","focusPassword3","email_verified","startResendingEmailState","startForm1SubmittingState","replace","str","toUpperCase","new_email","callPaper","inlineText","phoneText","fontWeight","timeText","Call","axiosPutAction","action","call_id","call","Paper","elevation","phone_number","timestamp","CallsPageTranslation","noNewCalls","acceptCall","online","offline","acceptedCalls","noAcceptedCalls","fulfilledCalls","noFulfilledCalls","buttonIcon","subheading","placeholder","CallsPageWrapper","loadingNewCall","loadingGoOnline","componentDidMount","bind","acceptNewCall","goOnline","goOffline","get","this","handleNewCallData","setState","CallsPageComponent","Component","accepted","map","index","fulfilled","CallsPage","GuidePageTranslation","guideTitle","text1","groceryShopping","pickingUpParcels","storesAreClosed","pickingUpMedication","mentalHealth","text2","href","description","crowdSource","root","heading","GuidePage","ExpansionPanel","ExpansionPanelSummary","expandIcon","IndexPageTranslation","indexSubtitle","text3","rel","readOurGuide","text4","text5","text6","title2","videoContainer","description1","description2","description3","divider1","description4","description5","description6","links","lineHeight","IndexPage","src","frameBorder","allowFullScreen","content","fullHeightContainer","minHeight","children","Content","Router","exact","strict","createMuiTheme","transparent80","white","transparent60","maastrichtBlue","pinctonBlue","desireMagenta","transparent40","transparent20","gray1","gray2","Themer","ThemeProvider","store","createStore","Cookies","set","expires","remove","cookieEmail","cookieApiKey","undefined","cookieLanguage","ReduxWrapper","Wrapper","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"js/main.96b3ab74.chunk.js","sourcesContent":["\nexport const handleLogout = () => ({\n    type: \"LOGOUT\"\n});\n\nexport const handleLogin = (response) => ({\n    type: \"LOGIN\",\n    api_key: response.data.api_key,\n    account: response.data.account,\n    calls: response.data.calls,\n});\n\nexport const startAutoLogin = () => ({\n    type: \"START_AUTOLOGIN\",\n});\n\nexport const abortAutoLogin = () => ({\n    type: \"ABORT_AUTOLOGIN\",\n});\n\nexport const handleNewAccountData = (response) => ({\n    type: \"NEW_ACCOUNT_DATA\",\n    account: response.data.account,\n    calls: response.data.calls,\n});\n\nexport const switchLanguage = (language) => ({\n    type: \"SWITCH_LANGUAGE\",\n    language: language,\n});\n","\n/* General Imports --------------------------------------------------------------- */\nimport React from \"react\";\n\n\n/* Material UI Imports ----------------------------------------------------------- */\nimport TextField from \"@material-ui/core/TextField\";\n\n\n/* Component --------------------------------------------------------------------- */\n\n\nexport const CustomTextField = React.forwardRef((props, ref) => {\n\n    /*\n\n    REQUIRED props:\n    * label (label of the input field)\n\n    OPTIONAL props:\n    * value (initial value)\n    * className (actual classname strings)\n    * variant (standard, outlined or filled)\n    * type (e.g. text, password) -> See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types\n\n    * required\n    * disabled\n    * helperText\n\n    * onChange (function handler for value change (when focused))\n    * onTab (function handler for pressed Tab keys (when focused))\n    * onEnter (function handler for pressed Enter keys (when focused))\n    * onEscape (function handler for pressed Escape keys (when focused))\n\n    * ref (the react-ref belonging to the actual input)\n\n    */\n\n    //const [value, setValue] = React.useState(\"value\" in props ? props[\"value\"] : \"\");\n\n    const handleChange = (event) => {\n        //setValue(event.target.value);\n        if (\"onChange\" in props) {\n            props.onChange(event.target.value);\n        }\n    };\n\n    const handleKeyDown = (event) => {\n        if (\"onTab\" in props && event.which === 9) {\n            event.preventDefault();\n            props.onTab(event.target.value);\n        } else if (\"onEnter\" in props && event.which === 13) {\n            event.preventDefault();\n            props.onEnter(event.target.value);\n        } else if (\"onEscape\" in props && event.which === 27) {\n            console.log(\"Triggering Escape\");\n            event.preventDefault();\n            props.onEscape(event.target.value);\n        }\n    };\n\n    const handleBlur = (event) => {\n        if (\"onBlur\" in props) {\n            props.onBlur(event.target.value);\n        }\n    };\n\n    return (\n        <TextField fullWidth={(\"fullWidth\" in props) ? props[\"fullWidth\"] : false}\n                   className={(\"className\" in props) ? props[\"className\"] : \"\"}\n                   type={(\"type\" in props) ? props[\"type\"] : \"text\"}\n\n                   required={(\"required\" in props) ? props[\"required\"] : false}\n                   disabled={(\"disabled\" in props) ? props[\"disabled\"] : false}\n                   helperText={(\"helperText\" in props) ? props[\"helperText\"] : \"\"}\n\n                   variant={(\"variant\" in props) ? props[\"variant\"] : \"standard\"}\n                   multiline={(\"multiline\" in props) ? props[\"multiline\"] : false}\n                   rowsMax={(\"rowsMax\" in props) ? props[\"rowsMax\"] : \"1\"}\n\n                   value={props.value}\n                   inputRef={ref}\n                   onChange={handleChange}\n                   onKeyDown={handleKeyDown}\n                   onBlur={handleBlur}\n                   label={props.label}/>\n    );\n});\n","\nexport const NavbarTranslation = {\n    guide: {\n        english: \"Guide\",\n        deutsch: \"Ratgeber\",\n    },\n    calls: {\n        english: \"Calls\",\n        deutsch: \"Anrufe\",\n    },\n    account: {\n        english: \"Account\",\n        deutsch: \"Benutzerkonto\",\n    },\n    login: {\n        english: \"Login\",\n        deutsch: \"Einloggen\",\n    },\n    logout: {\n        english: \"Logout\",\n        deutsch: \"Ausloggen\",\n    },\n    logoutQuestion: {\n        english: \"Are your Sure?\",\n        deutsch: \"Sind Sie Sicher?\",\n    },\n    cancel: {\n        english: \"Cancel\",\n        deutsch: \"Abbrechen\",\n    },\n    menu: {\n        english: \"Menu\",\n        deutsch: \"Menü\",\n    },\n    language: {\n        english: \"Language\",\n        deutsch: \"Sprache\"\n    }\n};\n\n","import React, {useState} from 'react';\nimport {connect} from 'react-redux';\nimport {handleLogout, switchLanguage} from '../../ReduxActions';\n\nimport clsx from 'clsx';\nimport './Navbar.scss';\n\nimport {makeStyles} from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport {Link} from \"react-router-dom\";\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\n\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport PersonIcon from '@material-ui/icons/Person';\n\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport CallIcon from '@material-ui/icons/Call';\nimport {CircularProgress} from \"@material-ui/core\";\n\nimport MenuIcon from '@material-ui/icons/Menu';\n\nimport {Breakpoint} from 'react-socks';\nimport Grid from \"@material-ui/core/Grid\";\nimport {CustomTextField} from \"../../Components/CustomTextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\n\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport {NavbarTranslation} from \"./NavbarTranslation\";\n\nimport LanguageIcon from '@material-ui/icons/Language';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    toolbar: theme.mixins.toolbar,\n    navBar: {\n        backgroundColor: theme.palette.gunmetalGray.main,\n    },\n    menuButton: {\n        marginRight: theme.spacing(1),\n    },\n    title: {\n        flexGrow: 1,\n    },\n    HeaderLanguageButton: {\n        marginRight: theme.spacing(3),\n        padding: 0,\n        backgroundColor: \"transparent !important\",\n        overflow: \"visible\",\n        borderRadius: \"0\",\n    },\n    HeaderLogoButton: {\n        margin: 0,\n        padding: 0,\n        backgroundColor: \"transparent !important\",\n        overflow: \"visible\",\n        borderRadius: \"0\",\n    },\n    HeaderIcon: {\n        backgroundColor: \"transparent !important\",\n        height: theme.spacing(4),\n        margin: \"-6px\",\n    },\n    button: {\n        margin: theme.spacing(1),\n        marginBottom: 0,\n        padding: theme.spacing(1),\n        width: \"225px\",\n        alignItems: \"flex-start\",\n        justifyContent: \"left\",\n        textTransform: \"capitalize\",\n        transitionDelay: 0,\n        transitionDuration: 0\n    },\n    topButton: {\n        marginTop: theme.spacing(1)\n    },\n    link: {\n        textDecoration: \"none\",\n        display: \"block\"\n    },\n    divider: {\n        marginTop: theme.spacing(2),\n        marginBottom: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        marginLeft: theme.spacing(1),\n    },\n    wrapper: {\n        position: 'relative',\n    },\n    CircularProgress: {\n        marginTop: 0,\n        marginLeft: 0,\n        marginRight: 4,\n    },\n    drawerBox: {\n        height: \"100vh\",\n        position: \"relative\",\n    },\n    drawerScrollBox: {\n        paddingBottom: theme.spacing(10),\n    },\n\n    logoutDialog: {\n        boxSizing: \"border-box\",\n        overflowX: \"hidden\",\n    },\n    logoutDialogContainer: {\n        position: \"relative\",\n        display: \"block\",\n        scroll: \"disabled\",\n        padding: theme.spacing(2),\n        margin: -3.5,\n    },\n    logoutDialogButton: {\n        color: \"white\",\n    },\n    logoutDialogWrapper: {\n        marginTop: theme.spacing(1),\n        marginLeft: theme.spacing(0.5),\n        marginRight: theme.spacing(0.5),\n        position: 'relative',\n        display: \"inline-flex\"\n    },\n    logoutDialogTitle: {\n        textAlign: \"center\",\n    },\n}));\n\nfunction NavbarComponent(props) {\n    const classes = useStyles();\n\n    const path = window.location.pathname;\n    let initialPageTitle = \"\";\n    if (path.startsWith(\"/guide\")) {\n        initialPageTitle = NavbarTranslation.guide[props.language];\n    } else if (path.startsWith(\"/calls\")) {\n        initialPageTitle = NavbarTranslation.calls[props.language];\n    } else if (path.startsWith(\"/account\")) {\n        initialPageTitle = NavbarTranslation.account[props.language];\n    }\n\n    const [pageTitle, setPageTitle] = useState(initialPageTitle);\n    const [logoutDialog, setLogoutDialogState] = useState({open: false});\n\n    const [drawerIsOpen, toggleDrawer] = useState(false);\n\n    const [languageMenuAnchor, toggleLanguageMenuAnchor] = useState(null);\n\n    const openLanguageMenu = (event) => {\n        toggleLanguageMenuAnchor(event.currentTarget);\n    };\n    const closeLanguageMenu = () => {\n        toggleLanguageMenuAnchor(null);\n    };\n\n\n    const pageTitleComponent = (\n        <Typography variant=\"h6\" noWrap className={classes.title}>{pageTitle}</Typography>\n    );\n\n    const languageMenuComponent = (\n        <IconButton aria-label=\"index\"\n                    edge=\"end\"\n                    onClick={openLanguageMenu}\n                    className={classes.HeaderLanguageButton}\n                    disableRipple={true}>\n            <LanguageIcon alt={NavbarTranslation.language[props.language] + \" Icon\"} style={{fill: \"white\"}} fontSize=\"large\"/>\n        </IconButton>\n    );\n\n    const pageLogoComponent = (\n        <Link edge=\"end\"\n              to=\"/\"\n              onClick={() => setPageTitle(NavbarTranslation.guide[props.language])}>\n            <IconButton aria-label=\"index\"\n                        className={classes.HeaderLogoButton}\n                        disableRipple={true}>\n                <CallIcon alt={NavbarTranslation.calls[props.language] + \" Icon\"} style={{fill: \"white\"}} fontSize=\"large\"/>\n            </IconButton>\n        </Link>\n    );\n\n    const pageButtons = (\n        <React.Fragment>\n            <Link to=\"/guide\"\n                  className={classes.link}\n                  onClick={() => setPageTitle(NavbarTranslation.guide[props.language])}>\n                <Button size=\"large\"\n                        color={path.startsWith(\"/guide\") ? \"secondary\" : \"primary\"}\n                        startIcon={<AssignmentIcon alt={NavbarTranslation.guide[props.language] + \" Icon\"}/>}\n                        className={clsx(classes.button, classes.topButton)}>{NavbarTranslation.guide[props.language]}</Button>\n            </Link>\n\n            {props.loggedIn && (\n                <React.Fragment>\n                    <Link to=\"/calls\"\n                          className={classes.link}\n                          onClick={() => setPageTitle(NavbarTranslation.calls[props.language])}>\n                        <Button size=\"large\"\n                                color={path.startsWith(\"/calls\") ? \"secondary\" : \"primary\"}\n                                startIcon={<CallIcon alt={NavbarTranslation.calls[props.language] + \" Icon\"}/>}\n                                className={clsx(classes.button, classes.topButton)}>{NavbarTranslation.calls[props.language]}</Button>\n                    </Link>\n                    <Link to=\"/account\"\n                          className={classes.link}\n                          onClick={() => setPageTitle(NavbarTranslation.account[props.language])}>\n                        <Button size=\"large\"\n                                color={path.startsWith(\"/account\") ? \"secondary\" : \"primary\"}\n                                startIcon={<SettingsIcon alt={NavbarTranslation.account[props.language] + \" Icon\"}/>}\n                                className={clsx(classes.button, classes.topButton)}>{NavbarTranslation.account[props.language]}</Button>\n                    </Link>\n                </React.Fragment>\n            )}\n        </React.Fragment>\n    );\n\n    const loginButton = (\n        <React.Fragment>\n            {props.loggedIn && (\n                <Button onClick={() => {setLogoutDialogState({open: true});}}\n                        size=\"large\"\n                        color=\"primary\"\n                        startIcon={<PersonIcon alt={NavbarTranslation.logout[props.language] + \" Icon\"}/>}\n                        className={clsx(classes.button, classes.topButton)}>{NavbarTranslation.logout[props.language]}</Button>\n            )}\n            {!props.loggedIn && (\n                <Link to=\"/login\"\n                      className={classes.link}>\n                    <div className={classes.wrapper}>\n                        <Button size=\"large\"\n                                color=\"primary\"\n                                disabled={props.autoLogin}\n\n                                startIcon={props.autoLogin ?\n                                    <CircularProgress size={20} className={classes.CircularProgress} disabled/> :\n                                    <PersonIcon alt={NavbarTranslation.login[props.language] + \" Icon\"}/>}\n                                className={clsx(classes.button, classes.topButton)}>{NavbarTranslation.login[props.language]}</Button>\n                    </div>\n                </Link>\n            )}\n        </React.Fragment>\n    );\n\n    return (\n        <React.Fragment>\n\n            <Breakpoint small down>\n                <AppBar position=\"fixed\" className={classes.navBar}>\n                    <Toolbar>\n                        <IconButton edge=\"start\"\n                                    color=\"inherit\"\n                                    aria-label=\"menu\"\n                                    className={classes.menuButton}\n                                    onClick={() => toggleDrawer(true)}>\n                            <MenuIcon alt={NavbarTranslation.menu[props.language] + \" Icon\"}/>\n                        </IconButton>\n                        {pageTitleComponent}\n                        {languageMenuComponent}\n                        {pageLogoComponent}\n                    </Toolbar>\n                </AppBar>\n                <Drawer open={drawerIsOpen}\n                        onClose={() => toggleDrawer(false)}\n                        onClick={() => toggleDrawer(false)}\n                        onKeyDown={() => toggleDrawer(false)}>\n                    <div role=\"presentation\" className={classes.drawerBox}>\n                        <div className={classes.drawerScrollBox}>\n                            {pageButtons}\n                            <Divider className={classes.divider}/>\n                            {loginButton}\n                        </div>\n                    </div>\n                </Drawer>\n            </Breakpoint>\n\n            <Breakpoint large up>\n                <CssBaseline/>\n                <AppBar position=\"fixed\" className={classes.appBar}>\n                    <Toolbar>\n                        {pageTitleComponent}\n                        {languageMenuComponent}\n                        {pageLogoComponent}\n                    </Toolbar>\n                </AppBar>\n                <Drawer\n                    className={classes.drawer}\n                    variant=\"permanent\"\n                    classes={{\n                        paper: classes.drawerPaper,\n                    }}>\n\n                    <div className={classes.toolbar}/>\n                    {pageButtons}\n                    <Divider className={classes.divider}/>\n                    {loginButton}\n\n                </Drawer>\n            </Breakpoint>\n\n            <Dialog onClose={() => setLogoutDialogState({open: false})}\n                    aria-labelledby=\"logout-dialog\"\n                    open={logoutDialog.open}\n                    className={classes.logoutDialog}\n                    maxWidth=\"xs\">\n\n                <Grid container spacing={1} className={classes.logoutDialogContainer}>\n\n                    <Grid item xs={12}>\n                        <Typography variant=\"h6\" className={classes.logoutDialogTitle}>{NavbarTranslation.logoutQuestion[props.language]}</Typography>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <div className={clsx(\"ButtonBox\", classes.buttonBox)}>\n                            <div className={classes.logoutDialogWrapper}>\n                                <Button variant=\"contained\"\n                                        color=\"secondary\"\n                                        onClick={() => setLogoutDialogState({open: false})}\n                                        className={classes.logoutDialogButton}>{NavbarTranslation.cancel[props.language]}</Button>\n                            </div>\n                            <div className={classes.logoutDialogWrapper}>\n                                <Link to=\"/logout\"\n                                      className={classes.link}\n                                      onClick={() => {\n                                          props.handleLogout();\n                                          setPageTitle(NavbarTranslation.guide[props.language]);\n                                      }}>\n                                    <Button variant=\"contained\"\n                                            color=\"secondary\"\n                                            className={classes.logoutDialogButton}>{NavbarTranslation.logout[props.language]}</Button>\n                                </Link>\n                            </div>\n                        </div>\n                    </Grid>\n\n                </Grid>\n            </Dialog>\n\n            <LanguageMenu anchorElement={languageMenuAnchor}\n                          handleClose={closeLanguageMenu}\n                          switchLanguage={props.switchLanguage}/>\n\n        </React.Fragment>\n    );\n}\n\n\n/* Redux link -------------------------------------------------------------------- */\n/* Making the RouterComponent watch the loggedIn property of the store */\n\n\nconst mapStateToProps = state => ({\n    loggedIn: state.loggedIn,\n    autoLogin: state.autoLogin,\n    language: state.language,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    handleLogout: () => dispatch(handleLogout()),\n    switchLanguage: (language) => dispatch(switchLanguage(language)),\n});\n\nexport const Navbar = connect(mapStateToProps, mapDispatchToProps)(NavbarComponent);\n\n\n/* Reduced Navbar (login, register, 404) ----------------------------------------- */\n\n\nexport const ReducedNavbarComponent = (props) => {\n    const classes = useStyles();\n\n    const [languageMenuAnchor, toggleLanguageMenuAnchor] = useState(null);\n\n    const openLanguageMenu = (event) => {\n        toggleLanguageMenuAnchor(event.currentTarget);\n    };\n    const closeLanguageMenu = () => {\n        toggleLanguageMenuAnchor(null);\n    };\n\n    return (\n        <div className=\"navbar\">\n            <CssBaseline/>\n            <AppBar position=\"fixed\" className={classes.appBar}>\n                <Toolbar>\n                    <Typography variant=\"h6\" noWrap className={classes.title}/>\n                    <IconButton aria-label=\"index\"\n                                edge=\"end\"\n                                onClick={openLanguageMenu}\n                                className={classes.HeaderLanguageButton}\n                                disableRipple={true}>\n                        <LanguageIcon alt={NavbarTranslation.language[props.language] + \" Icon\"} style={{fill: \"white\"}} fontSize=\"large\"/>\n                    </IconButton>\n                    <Link to=\"/\"\n                          edge=\"end\">\n                        <IconButton disableRipple={true} className={classes.HeaderLogoButton}>\n                            <CallIcon alt=\"Phone Icon\" style={{fill: \"white\"}} fontSize=\"large\"/>\n                        </IconButton>\n                    </Link>\n                </Toolbar>\n            </AppBar>\n\n            <LanguageMenu anchorElement={languageMenuAnchor}\n                          handleClose={closeLanguageMenu}\n                          switchLanguage={props.switchLanguage}/>\n        </div>\n    );\n};\n\nconst mapStateToPropsReduced = state => ({\n});\n\nconst mapDispatchToPropsReduced = dispatch => ({\n    switchLanguage: (language) => dispatch(switchLanguage(language)),\n});\n\nexport const ReducedNavbar = connect(mapStateToPropsReduced, mapDispatchToPropsReduced)(ReducedNavbarComponent);\n\n\n/* Language Menu */\n\nconst LanguageMenu = (props) => {\n    return (\n        <Menu\n            id=\"simple-menu\"\n            anchorEl={props.anchorElement}\n            keepMounted\n            open={Boolean(props.anchorElement)}\n            onClose={props.handleClose}>\n            <MenuItem onClick={() => {\n                props.switchLanguage(\"english\");\n                props.handleClose();\n            }}>English</MenuItem>\n            <MenuItem onClick={() => {\n                props.switchLanguage(\"deutsch\");\n                props.handleClose();\n            }}>Deutsch</MenuItem>\n        </Menu>\n    );\n};\n\n","\nexport const SignInTranslation = {\n    serverOffline: {\n        english: \"Server currently offline. Please try again later.\",\n        deutsch: \"Server zurzeit offline. Bitte versuchen Sie es später noch einmal.\",\n    },\n    invalidEmailPassword: {\n        english: \"Invalid Email/Password Combination\",\n        deutsch: \"Ungültige Email/Passwort Kombination\",\n    },\n    login: {\n        english: \"Login\",\n        deutsch: \"Einloggen\",\n    },\n    email: {\n        english: \"Email\",\n        deutsch: \"Email\",\n    },\n    password: {\n        english: \"Password\",\n        deutsch: \"Passwort\",\n    },\n    confirmPassword: {\n        english: \"Confirm Password\",\n        deutsch: \"Passwort Bestätigen\",\n    },\n    cancel: {\n        english: \"Cancel\",\n        deutsch: \"Abbrechen\",\n    },\n    noAccountYet: {\n        english: \"Don't have an account yet?\",\n        deutsch: \"Sie haben noch kein Benutzerkonto?\",\n    },\n    germany: {\n        english: \"Germany\",\n        deutsch: \"Deutschland\",\n    },\n    fieldEmpty: {\n        english: \"Please fill in all the fields.\",\n        deutsch: \"Bitte füllen Sie alle Felder aus.\",\n    },\n    passwordConfirmationMatch: {\n        english: \"\\\"Password\\\" and \\\"Password Confirmation\\\" do not match.\",\n        deutsch: \"\\\"Passwort\\\" und \\\"Passwort Bestätigung\\\" sind unterschiedlich.\",\n    },\n    passwordTooShort: {\n        english: \"\\\"Password\\\" too short (at least 8 characters).\",\n        deutsch: \"\\\"Passwort\\\" zu kurz (mindestens 8 Zeichen).\",\n    },\n    register: {\n        english: \"Register\",\n        deutsch: \"Registrieren\",\n    },\n    zipCode: {\n        english: \"Zip Code\",\n        deutsch: \"Postleitzahl\",\n    },\n    city: {\n        english: \"City\",\n        deutsch: \"Stadt\",\n    },\n    country: {\n        english: \"Country\",\n        deutsch: \"Land\",\n    },\n\n    alreadyHaveAnAccount: {\n        english: \"Already have an account?\",\n        deutsch: \"Sie besitzen schon ein Benutzerkonto?\",\n    },\n    emailInvalid: {\n        english: \"Email invalid\",\n        deutsch: \"Email ungültig\",\n    },\n    emailTaken: {\n        english: \"This Email is already taken\",\n        deutsch: \"Zu dieser Email Adresse gibt es schon einen Account\",\n    },\n    zipInvalid: {\n        english: \"Zip invalid\",\n        deutsch: \"Postleitzahl undgültig\",\n    },\n    cityInvalid: {\n        english: \"City invalid\",\n        deutsch: \"Stadt ungültig\",\n    },\n    defaultError: {\n        english: \"Something went wrong. Please try again later.\",\n        deutsch: \"Irgendetwas lief schief. Bitte versuchen Sie es später erneut\",\n    },\n};\n\n","import React, {useState, useRef} from 'react';\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nimport {connect} from 'react-redux';\nimport {handleLogin} from '../../ReduxActions';\n\nimport {Container} from \"@material-ui/core\";\nimport {Link} from \"react-router-dom\";\nimport {Typography} from \"@material-ui/core\";\n\nimport {Button} from \"@material-ui/core\";\nimport {CircularProgress} from \"@material-ui/core\";\n\nimport {CustomTextField} from \"../../Components/CustomTextField\";\n\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\n\nimport {BACKEND_URL} from \"../../secrets\";\n\nimport axios from 'axios';\n\nimport './SignInPage.scss';\nimport clsx from \"clsx\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport {SignInTranslation} from \"./SignInTranslation\";\n\n\nvar cloneDeep = require('lodash.clonedeep');\n\n\nconst useStyles = makeStyles(theme => ({\n    title: {\n        display: \"block\",\n        textAlign: \"center\",\n        marginBottom: theme.spacing(2)\n    },\n    link: {\n        textDecoration: \"none\",\n        display: \"block\"\n    },\n    button: {\n        color: \"white\"\n    },\n    textField: {\n        display: \"block\",\n        marginBottom: theme.spacing(1)\n    },\n    wrapper: {\n        marginTop: theme.spacing(1),\n        marginLeft: theme.spacing(0.5),\n        marginRight: theme.spacing(0.5),\n        position: 'relative',\n    },\n    buttonProgress: {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        marginTop: -12,\n        marginLeft: -12,\n    },\n    formContainer: {\n        marginTop: theme.spacing(2),\n        marginBottom: theme.spacing(2),\n    },\n    snackbar: {\n        margin: theme.spacing(1)\n    },\n    snackbarContentError: {\n        backgroundColor: theme.palette.primary.main,\n    },\n    snackbarContentSuccess: {\n        backgroundColor: theme.palette.secondary.main,\n    },\n    switchLink: {\n        marginTop: theme.spacing(2)\n    }\n}));\n\n\nexport function LoginPageComponent(props) {\n\n    const classes = useStyles();\n\n    const emailInputRef = useRef(null);\n    const passwordInputRef = useRef(null);\n\n    let [state, changeState] = useState({\n        email: \"\",\n        password: \"\",\n        loading: false,\n        errorMessageVisible: false,\n        errorMessageText: \"\",\n    });\n\n    function handleFormChange(email, password) {\n        changeState({\n            email: email,\n            password: password,\n            loading: false,\n            errorMessageVisible: false,\n            errorMessageText: \"\",\n        });\n    }\n\n    function startLoading() {\n        blurEmail();\n        blurPassword();\n\n        let newState = cloneDeep(state);\n        newState.loading = true;\n        newState.errorMessageVisible = false;\n        newState.errorMessageText = \"\";\n        changeState(newState);\n    }\n\n    function errorSnackbar(text) {\n        let newState = cloneDeep(state);\n        newState.loading = false;\n        newState.errorMessageVisible = true;\n        newState.errorMessageText = text;\n        changeState(newState);\n    }\n\n    function handleLogin() {\n        startLoading();\n\n        axios.post(BACKEND_URL + \"backend/login\", {email: state.email, password: state.password})\n            .then(response => {\n\n                setTimeout(() => {\n                    if (response.data.status === \"ok\") {\n                        props.handleLogin(response);\n                    } else {\n                        errorSnackbar(SignInTranslation.invalidEmailPassword[props.language]);\n                    }\n                }, 1000);\n            }).catch(response => {\n            console.log(\"Axios promise rejected! Response:\");\n            console.log(response);\n            errorSnackbar(SignInTranslation.serverOffline[props.language]);\n        });\n    }\n\n    function focusEmail() {\n        emailInputRef.current.focus();\n    }\n\n    function focusPassword() {\n        passwordInputRef.current.focus();\n    }\n\n    function blurEmail() {\n        emailInputRef.current.blur();\n    }\n\n    function blurPassword() {\n        passwordInputRef.current.blur();\n    }\n\n    return (\n        <Container maxWidth=\"xs\" className={\"SignInPage\"}>\n            <div className=\"SignInForm\">\n                <Typography variant=\"h3\" className={classes.title}>{SignInTranslation.login[props.language]}</Typography>\n\n                <Grid container spacing={1} className={classes.formContainer}>\n                    <Grid item xs={12}>\n                        <CustomTextField\n                            ref={emailInputRef}\n                            onTab={focusPassword}\n                            onEnter={focusPassword}\n                            onEscape={blurEmail}\n\n                            className={classes.textField}\n                            variant=\"outlined\"\n\n                            label={SignInTranslation.email[props.language]}\n                            fullWidth\n\n                            value={state.email}\n                            onChange={(email) => handleFormChange(email, state.password)}/>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <CustomTextField\n                            ref={passwordInputRef}\n                            onTab={focusEmail}\n                            onEnter={handleLogin}\n                            onEscape={blurPassword}\n\n                            className={classes.textField}\n                            variant=\"outlined\"\n\n                            label={SignInTranslation.password[props.language]}\n                            type=\"password\"\n                            fullWidth\n\n                            value={state.password}\n                            onChange={(password) => handleFormChange(state.email, password)}/>\n                    </Grid>\n                </Grid>\n\n                <div className=\"ButtonBox\">\n                    <div className={classes.wrapper}>\n                        <Button variant=\"contained\"\n                                disabled={state.loading}\n                                color=\"secondary\"\n                                className={classes.button}>\n                            <Link to={\"/guide\"} className={classes.link}>{SignInTranslation.cancel[props.language]}</Link>\n                        </Button>\n                    </div>\n                    <div className={classes.wrapper}>\n                        <Button variant=\"contained\"\n                                disabled={state.loading}\n                                color=\"secondary\"\n                                onClick={handleLogin}\n                                className={classes.button}>{SignInTranslation.login[props.language]}</Button>\n                        {state.loading && (\n                            <CircularProgress size={24}\n                                              className={classes.buttonProgress}\n                                              color=\"secondary\"/>\n                        )}\n                    </div>\n                </div>\n\n                <Link to={\"/register\"} className={classes.switchLink}>{SignInTranslation.noAccountYet[props.language]}</Link>\n\n                {state.errorMessageVisible && (\n                    <Snackbar className={classes.snackbar}\n                              open={true}\n                              anchorOrigin={{vertical: 'bottom', horizontal: 'center'}}>\n                        <SnackbarContent\n                            className={classes.snackbarContentError}\n                            aria-describedby=\"message-id\"\n                            message={<span id=\"message-id\">{state.errorMessageText}</span>}\n                        />\n                    </Snackbar>\n                )}\n            </div>\n        </Container>\n    );\n}\n\n\n/* Redux link -------------------------------------------------------------------- */\n/* Making the RouterComponent watch the loggedIn property of the store */\n\n\nconst mapStateToProps = state => ({\n    language: state.language,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    handleLogin: (response) => dispatch(handleLogin(response)),\n});\n\nexport const LoginPage = connect(mapStateToProps, mapDispatchToProps)(LoginPageComponent);\n\n","import React, {useState, useRef} from 'react';\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nimport {connect} from 'react-redux';\nimport {handleLogin} from '../../ReduxActions';\n\nimport {Container} from \"@material-ui/core\";\nimport {Link} from \"react-router-dom\";\nimport {Typography} from \"@material-ui/core\";\n\nimport {Button} from \"@material-ui/core\";\nimport {CircularProgress} from \"@material-ui/core\";\n\nimport {CustomTextField} from \"../../Components/CustomTextField\";\n\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\n\nimport axios from 'axios';\n\nimport './SignInPage.scss';\n\nimport {BACKEND_URL} from \"../../secrets\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\n\n\nimport {SignInTranslation} from \"./SignInTranslation\";\n\n\nvar cloneDeep = require('lodash.clonedeep');\n\n\nconst useStyles = makeStyles(theme => ({\n    title: {\n        display: \"block\",\n        textAlign: \"center\",\n        marginBottom: theme.spacing(2),\n    },\n    link: {\n        textDecoration: \"none\",\n        display: \"block\"\n    },\n    button: {\n        color: \"white\"\n    },\n    textField: {\n        marginBottom: theme.spacing(1)\n    },\n    wrapper: {\n        marginTop: theme.spacing(1),\n        marginLeft: theme.spacing(0.5),\n        marginRight: theme.spacing(0.5),\n        position: 'relative',\n    },\n    buttonProgress: {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        marginTop: -12,\n        marginLeft: -12,\n    },\n    snackbar: {\n        margin: theme.spacing(1)\n    },\n    snackbarContentError: {\n        backgroundColor: theme.palette.primary.main,\n    },\n    snackbarContentSuccess: {\n        backgroundColor: theme.palette.secondary.main,\n    },\n    switchLink: {\n        marginTop: theme.spacing(2),\n        textAlign: \"center\",\n    },\n    formContainer: {\n        marginTop: theme.spacing(2),\n        marginBottom: theme.spacing(2),\n    },\n    divider: {\n        marginTop: theme.spacing(3),\n        marginBottom: theme.spacing(3),\n    },\n}));\n\n\nexport function RegisterPageComponent(props) {\n\n    const classes = useStyles();\n\n    const emailInputRef = useRef(null);\n    const passwordInputRef = useRef(null);\n    const passwordConfirmationInputRef = useRef(null);\n    const zipInputRef = useRef(null);\n    const cityInputRef = useRef(null);\n    const countryInputRef = useRef(null);\n\n    let [state, changeState] = useState({\n        formData: {\n            email: \"\",\n\n            password: \"\",\n            passwordConfirmation: \"\",\n\n            zip: \"\",\n            city: \"\",\n            country: SignInTranslation.germany[props.language],\n        },\n        loading: false,\n        errorMessageVisible: false,\n        errorMessageText: \"\",\n    });\n\n    function handleFormChange(newFormData) {\n        let newState = cloneDeep(state);\n\n        [\"email\", \"password\", \"passwordConfirmation\", \"zip\", \"city\", \"country\"].forEach(key => {\n            newState.formData[key] = key in newFormData ? newFormData[key] : newState.formData[key];\n        });\n\n        newState.loading = false;\n        newState.errorMessageVisible = false;\n        newState.errorMessageText = \"\";\n        changeState(newState);\n    }\n\n    function startLoading() {\n        blurAll();\n\n        let newState = cloneDeep(state);\n        newState.loading = true;\n        newState.errorMessageVisible = false;\n        newState.errorMessageText = \"\";\n        changeState(newState);\n    }\n\n    function errorSnackbar(text) {\n        let newState = cloneDeep(state);\n        newState.loading = false;\n        newState.errorMessageVisible = true;\n        newState.errorMessageText = text;\n        changeState(newState);\n    }\n\n    function formValidation() {\n\n        let formValid = true;\n\n        [\"email\", \"password\", \"passwordConfirmation\", \"zip\", \"city\", \"country\"].forEach(key => {\n            if (state.formData[key] === \"\") {\n                errorSnackbar(SignInTranslation.fieldEmpty[props.language]);\n                formValid = false;\n            }\n        });\n\n        if (formValid) {\n            if (state.formData[\"password\"] !== state.formData[\"passwordConfirmation\"]) {\n                errorSnackbar(SignInTranslation.passwordConfirmationMatch[props.language]);\n                formValid = false;\n            }\n        }\n\n        if (formValid) {\n            if (state.formData[\"password\"].length < 8) {\n                errorSnackbar(SignInTranslation.passwordTooShort[props.language]);\n                formValid = false;\n            }\n        }\n\n        return formValid;\n    }\n\n    function handleLogin() {\n        startLoading();\n\n        if (formValidation()) {\n            axios.post(BACKEND_URL + \"backend/database/account\", {\n                account_email: state.formData.email,\n\n                account_password: state.formData.password,\n                account_passwordConfirmation: state.formData.passwordConfirmation,\n\n                account_zip: state.formData.zip,\n                account_city: state.formData.city,\n                account_country: state.formData.country,\n            })\n                .then(response => {\n\n                    setTimeout(() => {\n                        switch (response.data.status) {\n                            case \"ok\":\n                                props.handleLogin(response);\n                                break;\n                            case \"email is invalid\":\n                                errorSnackbar(SignInTranslation.emailInvalid[props.language]);\n                                break;\n                            case \"email already taken\":\n                                errorSnackbar(SignInTranslation.emailTaken[props.language]);\n                                break;\n                            case \"zip is invalid\":\n                                errorSnackbar(SignInTranslation.zipInvalid[props.language]);\n                                break;\n                            case \"city is invalid\":\n                                errorSnackbar(SignInTranslation.cityInvalid[props.language]);\n                                break;\n                            default:\n                                errorSnackbar(SignInTranslation.defaultError[props.language]);\n                                break;\n                        }\n                    }, 1000);\n                }).catch(response => {\n                console.log(\"Axios promise rejected! Response:\");\n                console.log(response);\n                errorSnackbar(SignInTranslation.serverOffline[props.language]);\n            });\n        }\n    }\n\n\n    function focusEmail() {\n        emailInputRef.current.focus();\n    }\n\n    function focusPassword() {\n        passwordInputRef.current.focus();\n    }\n\n    function focusPasswordConfirmation() {\n        passwordConfirmationInputRef.current.focus();\n    }\n\n    function focusZip() {\n        zipInputRef.current.focus();\n    }\n\n    function focusCity() {\n        cityInputRef.current.focus();\n    }\n\n    function focusCountry() {\n        countryInputRef.current.focus();\n    }\n\n\n    function blurEmail() {\n        emailInputRef.current.blur();\n    }\n\n    function blurPassword() {\n        passwordInputRef.current.blur();\n    }\n\n    function blurPasswordConfirmation() {\n        passwordConfirmationInputRef.current.blur();\n    }\n\n    function blurZip() {\n        zipInputRef.current.blur();\n    }\n\n    function blurCity() {\n        cityInputRef.current.blur();\n    }\n\n    function blurCountry() {\n        countryInputRef.current.blur();\n    }\n\n    function blurAll() {\n        blurEmail();\n        blurPassword();\n        blurPasswordConfirmation();\n        blurZip();\n        blurCity();\n        blurCountry();\n    }\n\n    return (\n        <Container maxWidth=\"md\" className=\"SignInPage\">\n            <div className=\"SignInForm\">\n                <Typography variant=\"h3\" className={classes.title}>{SignInTranslation.register[props.language]}</Typography>\n\n                <Grid container spacing={1} className={classes.formContainer}>\n\n                    <Grid item xs={12}>\n                        <CustomTextField\n                            required\n                            ref={emailInputRef} onTab={focusPassword} onEnter={focusPassword} onEscape={blurEmail}\n                            className={classes.textField} variant=\"outlined\" label={SignInTranslation.email[props.language]} fullWidth\n                            value={state.formData.email} onChange={(email) => handleFormChange({email: email})}/>\n                    </Grid>\n\n                    <Grid item xs={12} sm={6}>\n                        <CustomTextField\n                            required type=\"password\"\n                            ref={passwordInputRef} onTab={focusPasswordConfirmation} onEnter={focusPasswordConfirmation}\n                            onEscape={blurPassword}\n                            className={classes.textField} variant=\"outlined\" label={SignInTranslation.password[props.language]} fullWidth\n                            value={state.formData.password}\n                            onChange={(password) => handleFormChange({password: password})}/>\n                    </Grid>\n\n                    <Grid item xs={12} sm={6}>\n                        <CustomTextField\n                            required type=\"password\"\n                            ref={passwordConfirmationInputRef} onTab={focusZip} onEnter={focusZip}\n                            onEscape={blurPasswordConfirmation}\n                            className={classes.textField} variant=\"outlined\" label={SignInTranslation.confirmPassword[props.language]} fullWidth\n                            value={state.formData.passwordConfirmation}\n                            onChange={(passwordConfirmation) => handleFormChange({passwordConfirmation: passwordConfirmation})}/>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <div className={classes.divider}/>\n                    </Grid>\n\n                    <Grid item xs={12} sm={6} md={4}>\n                        <CustomTextField\n                            required\n                            ref={zipInputRef} onTab={focusCity} onEnter={focusCity} onEscape={blurZip}\n                            className={classes.textField} variant=\"outlined\" label={SignInTranslation.zipCode[props.language]} fullWidth\n                            value={state.formData.zip} onChange={(zip) => handleFormChange({zip: zip})}/>\n                    </Grid>\n\n                    <Grid item xs={12} sm={6} md={4}>\n                        <CustomTextField\n                            required\n                            ref={cityInputRef} onTab={focusEmail} onEnter={handleLogin} onEscape={blurCity}\n                            className={classes.textField} variant=\"outlined\" label={SignInTranslation.city[props.language]} fullWidth\n                            value={state.formData.city} onChange={(city) => handleFormChange({city: city})}/>\n                    </Grid>\n\n                    <Grid item xs={12} sm={6} md={4}>\n                        <CustomTextField\n                            required disabled\n                            ref={countryInputRef}\n                            className={classes.textField} variant=\"outlined\" label={SignInTranslation.country[props.language]} fullWidth\n                            value={state.formData.country}/>\n                    </Grid>\n\n                </Grid>\n\n                <div className=\"ButtonBox\">\n                    <div className={classes.wrapper}>\n                        <Button variant=\"contained\"\n                                disabled={state.loading}\n                                color=\"secondary\"\n                                className={classes.button}>\n                            <Link to={\"/guide\"} className={classes.link}>{SignInTranslation.cancel[props.language]}</Link>\n                        </Button>\n                    </div>\n                    <div className={classes.wrapper}>\n                        <Button variant=\"contained\"\n                                disabled={state.loading}\n                                color=\"secondary\"\n                                onClick={handleLogin}\n                                className={classes.button}>{SignInTranslation.register[props.language]}</Button>\n                        {state.loading && (\n                            <CircularProgress size={24}\n                                              className={classes.buttonProgress}\n                                              color=\"secondary\"/>\n                        )}\n                    </div>\n                </div>\n\n                <Link to={\"/login\"} className={classes.switchLink}>{SignInTranslation.alreadyHaveAnAccount[props.language]}</Link>\n\n                {state.errorMessageVisible && (\n                    <Snackbar className={classes.snackbar}\n                              open={true}\n                              anchorOrigin={{vertical: 'bottom', horizontal: 'center'}}>\n                        <SnackbarContent\n                            className={classes.snackbarContentError}\n                            aria-describedby=\"message-id\"\n                            message={<span id=\"message-id\">{state.errorMessageText}</span>}\n                        />\n                    </Snackbar>\n                )}\n            </div>\n        </Container>\n    );\n}\n\n\n/* Redux link -------------------------------------------------------------------- */\n/* Making the RouterComponent watch the loggedIn property of the store */\n\n\nconst mapStateToProps = state => ({\n    language: state.language,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    handleLogin: (response) => dispatch(handleLogin(response)),\n});\n\nexport const RegisterPage = connect(mapStateToProps, mapDispatchToProps)(RegisterPageComponent);\n\n","\nexport const AccountPageTranslation = {\n\n    passwordConfirmationMatch: {\n        english: \"\\\"New Password\\\" and \\\"New Password Confirmation\\\" do not match.\",\n        deutsch: \"\\\"Neues Passwort\\\" und \\\"Bestätigung Neues Passwort\\\" sind unterschiedlich.\",\n    },\n    passwordTooShort: {\n        english: \"\\\"New Password\\\" too short (at least 8 characters).\",\n        deutsch: \"\\\"Neues Passwort\\\" zu kurz (mindestens 8 Zeichen).\",\n    },\n    passwordFieldEmpty: {\n        english: \"Please fill in all three password fields.\",\n        deutsch: \"Bitte füllen Sie alle drei Passwort Felder aus.\",\n    },\n    serverOffline: {\n        english: \"Server currently offline. Please try again later.\",\n        deutsch: \"Server zurzeit offline. Bitte versuchen Sie es später noch einmal.\",\n    },\n    resendVerification: {\n        english: \"Resend Verification\",\n        deutsch: \"Bestätigung Erneut Senden\",\n    },\n    changePassword: {\n        english: \"Change Password\",\n        deutsch: \"Passwort Ändern\",\n    },\n    cancel: {\n        english: \"Cancel\",\n        deutsch: \"Abbrechen\",\n    },\n    submit: {\n        english: \"Submit\",\n        deutsch: \"Übernehmen\",\n    },\n    email: {\n        english: \"Email\",\n        deutsch: \"Email\",\n    },\n    zipCode: {\n        english: \"Zip Code\",\n        deutsch: \"Postleitzahl\",\n    },\n    city: {\n        english: \"City\",\n        deutsch: \"Stadt\",\n    },\n    country: {\n        english: \"Country\",\n        deutsch: \"Land\",\n    },\n    oldPassword: {\n        english: \"Old Password\",\n        deutsch: \"Altes Passwort\",\n    },\n    newPassword: {\n        english: \"New Password\",\n        deutsch: \"Neues Passwort\",\n    },\n    newPasswordConfirmation: {\n        english: \"New Password Confirmation\",\n        deutsch: \"Bestätigung Neues Passwort\",\n    },\n};\n\n","import React, {useState, useRef} from 'react';\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nimport {connect} from 'react-redux';\nimport {handleNewAccountData} from '../../ReduxActions';\n\nimport {Container} from \"@material-ui/core\";\nimport {Typography} from \"@material-ui/core\";\nimport Dialog from \"@material-ui/core/Dialog\";\n\nimport {Button} from \"@material-ui/core\";\nimport {CircularProgress} from \"@material-ui/core\";\n\nimport {CustomTextField} from \"../../Components/CustomTextField\";\n\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\n\nimport {BACKEND_URL} from \"../../secrets\";\n\nimport axios from 'axios';\n\nimport './AccountPage.scss';\n\nimport Grid from \"@material-ui/core/Grid\";\nimport clsx from \"clsx\";\n\nimport {AccountPageTranslation} from \"./AccountPageTranslation\";\n\nvar cloneDeep = require('lodash.clonedeep');\n\n\nconst useStyles = makeStyles(theme => ({\n    title: {\n        display: \"block\",\n        textAlign: \"center\",\n        marginBottom: theme.spacing(2),\n    },\n    link: {\n        textDecoration: \"none\",\n        display: \"block\"\n    },\n    button: {\n        color: \"white\",\n    },\n    textField: {\n        marginTop: theme.spacing(0.5),\n        marginBottom: theme.spacing(0.5),\n    },\n    passwordTextField: {},\n    wrapper: {\n        margin: theme.spacing(0.5),\n\n        position: 'relative',\n        display: \"inline-flex\"\n    },\n    buttonProgress: {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        marginTop: -12,\n        marginLeft: -12,\n    },\n    snackbar: {\n        margin: theme.spacing(1)\n    },\n    snackbarContentError: {\n        backgroundColor: theme.palette.primary.main,\n    },\n    snackbarContentSuccess: {\n        backgroundColor: theme.palette.secondary.main,\n    },\n    switchLink: {\n        marginTop: theme.spacing(2),\n        textAlign: \"center\",\n    },\n    formContainer: {\n        marginTop: theme.spacing(2),\n        marginBottom: theme.spacing(2),\n    },\n    form2Container: {\n        paddingTop: theme.spacing(1.5),\n        paddingRight: theme.spacing(2),\n        paddingBottom: theme.spacing(1.5),\n        paddingLeft: theme.spacing(2),\n    },\n    divider: {\n        marginTop: theme.spacing(3),\n        marginBottom: theme.spacing(3),\n    },\n}));\n\n\nexport function AccountPageComponent(props) {\n\n    const classes = useStyles();\n\n    const emailInputRef = useRef(null);\n    const zipInputRef = useRef(null);\n    const cityInputRef = useRef(null);\n\n    const password1InputRef = useRef(null);\n    const password2InputRef = useRef(null);\n    const password3InputRef = useRef(null);\n\n    const initialState = {\n        account: {\n            email: props.account.email,\n\n            oldPassword: \"\",\n            newPassword: \"\",\n            newPasswordConfirmation: \"\",\n\n            zip: props.account.address.zip,\n            city: props.account.address.city,\n            country: props.account.address.country,\n        },\n        errorMessageVisible: false,\n        errorMessageText: \"\",\n\n        resending: false,\n        resendPossible: true,\n\n        form1Modified: false,\n\n        form1Submitting: false,\n        form2Submitting: false,\n\n        form2Open: false,\n    };\n\n    let [state, changeState] = useState(initialState);\n\n    const resetForm1Change = () => {\n        changeState({...initialState});\n    };\n\n    // form1 = email, zip & city\n    // form2 = password fields\n\n    function handleFormChange(newFormData) {\n        let newState = cloneDeep(state);\n\n        let form1Modified = false;\n\n        if (\"email\" in newFormData) {\n            newState.account[\"email\"] = newFormData[\"email\"];\n            form1Modified = (newFormData[\"email\"] !== props.account[\"email\"]);\n        }\n\n        [\"zip\", \"city\", \"country\"].forEach(key => {\n            if (key in newFormData) {\n                newState.account[key] = newFormData[key];\n                form1Modified = (newFormData[key] !== props.account.address[key]) || form1Modified;\n            }\n        });\n\n        [\"oldPassword\", \"newPassword\", \"newPasswordConfirmation\"].forEach(key => {\n            if (key in newFormData) {\n                newState.account[key] = newFormData[key];\n            }\n        });\n\n        newState.form1Modified = form1Modified;\n\n        newState.errorMessageVisible = false;\n        changeState(newState);\n    }\n\n    function startResendingEmailState() {\n        let newState = cloneDeep(state);\n        newState.resending = true;\n        newState.errorMessageVisible = false;\n        changeState(newState);\n    }\n\n    function stopResendingEmailState() {\n        let newState = cloneDeep(state);\n        newState.resending = false;\n        newState.errorMessageVisible = false;\n        changeState(newState);\n    }\n\n    function startForm1SubmittingState() {\n        let newState = cloneDeep(state);\n        newState.form1Submitting = true;\n        changeState(newState);\n    }\n\n    function stopForm1SubmittingState() {\n        let newState = cloneDeep(state);\n        newState.form1Modified = false;\n        newState.form1Submitting = false;\n        changeState(newState);\n    }\n\n    function startForm2SubmittingState() {\n        let newState = cloneDeep(state);\n        newState.form2Submitting = true;\n        changeState(newState);\n    }\n\n    function stopForm2SubmittingState() {\n        let newState = cloneDeep(state);\n        newState.form2Modified = false;\n        changeState(newState);\n    }\n\n    function showErrorSnackbar(text) {\n        let newState = cloneDeep(state);\n        newState.errorMessageVisible = true;\n        newState.errorMessageText = text;\n        changeState(newState);\n    }\n\n    function hideErrorSnackbar(text) {\n        let newState = cloneDeep(state);\n        newState.errorMessageVisible = false;\n        changeState(newState);\n    }\n\n    function form1Validation() {\n\n        [\"email\", \"zip\", \"city\", \"country\"].forEach(key => {\n            if (state.account[key] === \"\") {\n\n                // 1. insert a space before all caps 2. uppercase all first characters\n                // Source: https://stackoverflow.com/questions/4149276/how-to-convert-camelcase-to-camel-case\n                let formattedString = key.replace(/([A-Z])/g, ' $1').replace(/^./, function (str) {\n                    return str.toUpperCase();\n                });\n\n                showErrorSnackbar(\"\\\"\" + formattedString + \"\\\" is empty\");\n                return false;\n            }\n        });\n\n        return true;\n    }\n\n    function form2Validation() {\n\n        [\"oldPassword\", \"newPassword\", \"newPasswordConfirmation\"].forEach(key => {\n            if (state.account[key] === \"\") {\n                showErrorSnackbar(AccountPageTranslation.passwordFieldEmpty[props.language]);\n                return false;\n            }\n        });\n\n        if (state.account[\"newPassword\"] !== state.account[\"newPasswordConfirmation\"]) {\n            showErrorSnackbar(AccountPageTranslation.passwordConfirmationMatch[props.language]);\n            return false;\n        }\n\n        if (state.account[\"newPassword\"].length < 8) {\n            showErrorSnackbar(AccountPageTranslation.passwordTooShort[props.language]);\n            return false;\n        }\n\n        return true;\n    }\n\n    function submitForm1Change() {\n        startForm1SubmittingState();\n\n        if (form1Validation()) {\n            // Looks and feels better if the process actually takes some time\n            setTimeout(() => {\n                axios.put(BACKEND_URL + \"backend/database/account\", {\n                    email: props.account.email,\n                    api_key: props.api_key,\n\n                    new_email: state.account.email,\n                    account_zip: state.account.zip,\n                    account_city: state.account.city,\n                })\n                    .then(response => {\n                        if (response.data.status === \"ok\") {\n                            stopForm1SubmittingState();\n                            props.handleNewAccountData(response);\n                        } else {\n                            showErrorSnackbar(response.data.status);\n                        }\n                    }).catch(response => {\n                    console.log(\"Axios promise rejected! Server response:\");\n                    console.log(response);\n                    stopForm1SubmittingState();\n                    showErrorSnackbar(AccountPageTranslation.serverOffline[props.language]);\n                });\n            }, 1000);\n        }\n    }\n\n    function submitForm2Change() {\n        startForm2SubmittingState();\n\n        if (form2Validation()) {\n            // Looks and feels better if the process actually takes some time\n            setTimeout(() => {\n                axios.put(BACKEND_URL + \"backend/database/account\", {\n                    email: props.account.email,\n                    api_key: props.api_key,\n\n                    account_old_password: state.account.oldPassword,\n                    account_new_password: state.account.newPassword,\n                    account_new_password_confirmation: state.account.newPasswordConfirmation,\n                })\n                    .then(response => {\n                        if (response.data.status === \"ok\") {\n                            stopForm2SubmittingState();\n                            form2Success();\n                        } else {\n                            showErrorSnackbar(response.data.status);\n                        }\n                    }).catch(response => {\n                    console.log(\"Axios promise rejected! Server response:\");\n                    console.log(response);\n                    stopForm2SubmittingState();\n                    showErrorSnackbar(AccountPageTranslation.serverOffline[props.language]);\n                });\n            }, 1000);\n        }\n    }\n\n    function submitResendEmail() {\n        startResendingEmailState();\n\n        axios.post(BACKEND_URL + \"backend/email/resend\", {\n            email: props.account.email,\n            api_key: props.api_key,\n        })\n            .then(response => {\n                if (response.data.status === \"ok\") {\n                    setTimeout(stopResendingEmailState, 1000);\n                } else {\n                    resetForm1Change();\n                    showErrorSnackbar(response.data.status);\n                }\n            }).catch(response => {\n            console.log(\"Axios promise rejected! Server response:\");\n            console.log(response);\n            resetForm1Change();\n            showErrorSnackbar(AccountPageTranslation.serverOffline[props.language]);\n        });\n    }\n\n\n    function focusEmail() {\n        emailInputRef.current.focus()\n    }\n\n    function blurEmail() {\n        emailInputRef.current.blur()\n    }\n\n\n    function focusZip() {\n        zipInputRef.current.focus()\n    }\n\n    function blurZip() {\n        zipInputRef.current.blur()\n    }\n\n\n    function focusCity() {\n        cityInputRef.current.focus()\n    }\n\n    function blurCity() {\n        cityInputRef.current.blur()\n    }\n\n    function openForm2() {\n        let newState = cloneDeep(state);\n        newState.form2Open = true;\n        changeState(newState);\n    }\n\n    function closeForm2() {\n        if (!state.form2Submitting) {\n            let newState = cloneDeep(state);\n            newState.form2Open = false;\n            newState.account.oldPassword = \"\";\n            newState.account.newPassword = \"\";\n            newState.account.newPasswordConfirmation = \"\";\n            newState.account.form2Modified = false;\n            newState.errorMessageVisible = false;\n            changeState(newState);\n        }\n    }\n\n    function form2Success() {\n        let newState = cloneDeep(state);\n        newState.form2Open = false;\n\n        newState.account.oldPassword = \"\";\n        newState.account.newPassword = \"\";\n        newState.account.newPasswordConfirmation = \"\";\n\n        newState.errorMessageVisible = true;\n        newState.errorMessageText = \"Success!\";\n        changeState(newState);\n\n        setTimeout(() => {\n            let newState = cloneDeep(state);\n            newState.form2Open = false;\n\n            newState.account.oldPassword = \"\";\n            newState.account.newPassword = \"\";\n            newState.account.newPasswordConfirmation = \"\";\n\n            newState.errorMessageVisible = false;\n            changeState(newState);\n        }, 1000);\n    }\n\n\n    function focusPassword1() {\n        password1InputRef.current.focus()\n    }\n\n    function blurPassword1() {\n        password1InputRef.current.blur()\n    }\n\n\n    function focusPassword2() {\n        password2InputRef.current.focus()\n    }\n\n    function blurPassword2() {\n        password2InputRef.current.blur()\n    }\n\n\n    function focusPassword3() {\n        password3InputRef.current.focus()\n    }\n\n    function blurPassword3() {\n        password3InputRef.current.blur()\n    }\n\n\n    return (\n        <Container maxWidth=\"md\" className=\"AccountPage\">\n\n            <Grid container spacing={1} className={classes.formContainer}>\n\n                <Grid item xs={12} md={props.account.email_verified ? 9 : 6}>\n                    <CustomTextField\n                        required disabled={props.account.email_verified || state.form1Submitting}\n                        ref={emailInputRef} onTab={focusZip} onEnter={blurEmail} onEscape={blurEmail}\n                        className={classes.textField} variant=\"outlined\" label={AccountPageTranslation.email[props.language]} fullWidth\n                        value={state.account.email} onChange={(email) => handleFormChange({email: email})}/>\n                </Grid>\n\n                <Grid item xs={12} md={props.account.email_verified ? 3 : 6}>\n                    <div className=\"ButtonBox\">\n                        {!props.account.email_verified && (\n                            <div className={classes.wrapper}>\n                                <Button variant=\"contained\"\n                                        disabled={state.resending || !state.resendPossible || state.form1Modified}\n                                        color=\"secondary\"\n                                        onClick={submitResendEmail}\n                                        className={classes.button}>{AccountPageTranslation.resendVerification[props.language]}</Button>\n                                {state.resending && (\n                                    <CircularProgress size={24}\n                                                      className={classes.buttonProgress}\n                                                      color=\"secondary\"/>\n                                )}\n                            </div>\n                        )}\n                        <div className={classes.wrapper}>\n                            <Button variant=\"contained\"\n                                    disabled={state.resending || state.form1Modified}\n                                    color=\"secondary\"\n                                    onClick={openForm2}\n                                    className={classes.button}>{AccountPageTranslation.changePassword[props.language]}</Button>\n                        </div>\n                    </div>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <div className={classes.divider}/>\n                </Grid>\n\n                <Grid item xs={12} sm={6} md={4}>\n                    <CustomTextField\n                        required\n                        disabled={state.form1Submitting}\n                        ref={zipInputRef} onTab={focusCity} onEnter={blurZip} onEscape={blurZip}\n                        className={classes.textField} variant=\"outlined\" label={AccountPageTranslation.zipCode[props.language]} fullWidth\n                        value={state.account.zip} onChange={(zip) => handleFormChange({zip: zip})}/>\n                </Grid>\n\n                <Grid item xs={12} sm={6} md={4}>\n                    <CustomTextField\n                        required\n                        disabled={state.form1Submitting}\n                        ref={cityInputRef} onTab={focusEmail} onEnter={blurCity} onEscape={blurCity}\n                        className={classes.textField} variant=\"outlined\" label={AccountPageTranslation.city[props.language]} fullWidth\n                        value={state.account.city} onChange={(city) => handleFormChange({city: city})}/>\n                </Grid>\n\n                <Grid item xs={12} sm={6} md={4}>\n                    <CustomTextField\n                        required disabled\n                        className={classes.textField} variant=\"outlined\" label={AccountPageTranslation.country[props.language]} fullWidth\n                        value={state.account.country}/>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <div className={classes.divider}/>\n                </Grid>\n\n                {state.form1Modified && (\n                    <Grid item xs={12}>\n                        <div className=\"ButtonBox\">\n                            <div className={classes.wrapper}>\n                                <Button variant=\"contained\"\n                                        disabled={state.form1Submitting}\n                                        color=\"secondary\"\n                                        onClick={resetForm1Change}\n                                        className={classes.button}>{AccountPageTranslation.cancel[props.language]}</Button>\n                            </div>\n                            <div className={classes.wrapper}>\n                                <Button variant=\"contained\"\n                                        disabled={state.form1Submitting}\n                                        color=\"secondary\"\n                                        onClick={submitForm1Change}\n                                        className={classes.button}>{AccountPageTranslation.submit[props.language]}</Button>\n                                {state.form1Submitting && (\n                                    <CircularProgress size={24}\n                                                      className={classes.buttonProgress}\n                                                      color=\"secondary\"/>\n                                )}\n                            </div>\n                        </div>\n                    </Grid>\n                )}\n\n            </Grid>\n\n            {state.errorMessageVisible && (\n                <Snackbar className={classes.snackbar}\n                          open={true}\n                          anchorOrigin={{vertical: 'bottom', horizontal: 'center'}}>\n                    <SnackbarContent\n                        className={classes.snackbarContentError}\n                        aria-describedby=\"message-id\"\n                        message={<span id=\"message-id\">{state.errorMessageText}</span>}\n                    />\n                </Snackbar>\n            )}\n\n            <Dialog onClose={closeForm2} aria-labelledby=\"simple-dialog-title\" open={state.form2Open}>\n\n                <Container maxWidth=\"xs\" className={classes.form2Container}>\n                    <Grid container spacing={1}>\n\n                        <Grid item xs={12}>\n                            <CustomTextField\n                                type=\"password\"\n                                required disabled={state.form2Submitting}\n                                ref={password1InputRef} onTab={focusPassword2} onEnter={focusPassword2}\n                                onEscape={blurPassword1}\n                                className={clsx(classes.textField, classes.passwordTextField)} variant=\"outlined\"\n                                label={AccountPageTranslation.oldPassword[props.language]} fullWidth\n                                value={state.account.oldPassword}\n                                onChange={(oldPassword) =>\n                                    handleFormChange({oldPassword: oldPassword})}/>\n                        </Grid>\n\n                        <Grid item xs={12}>\n                            <CustomTextField\n                                type=\"password\"\n                                required disabled={state.form2Submitting}\n                                ref={password2InputRef} onTab={focusPassword3} onEnter={focusPassword3}\n                                onEscape={blurPassword2}\n                                className={clsx(classes.textField, classes.passwordTextField)} variant=\"outlined\"\n                                label={AccountPageTranslation.newPassword[props.language]} fullWidth\n                                value={state.account.newPassword}\n                                onChange={(newPassword) =>\n                                    handleFormChange({newPassword: newPassword})}/>\n                        </Grid>\n\n                        <Grid item xs={12}>\n                            <CustomTextField\n                                type=\"password\"\n                                required disabled={state.form2Submitting}\n                                ref={password3InputRef} onTab={focusPassword1} onEnter={submitForm2Change}\n                                onEscape={blurPassword3}\n                                className={clsx(classes.textField, classes.passwordTextField)} variant=\"outlined\"\n                                label={AccountPageTranslation.newPasswordConfirmation[props.language]} fullWidth\n                                value={state.account.newPasswordConfirmation}\n                                onChange={(newPasswordConfirmation) =>\n                                    handleFormChange({newPasswordConfirmation: newPasswordConfirmation})}/>\n                        </Grid>\n\n                        <Grid item xs={12}>\n                            <div className={clsx(\"ButtonBox\", classes.buttonBox)}>\n                                <div className={classes.wrapper}>\n                                    <Button variant=\"contained\"\n                                            disabled={state.form2Submitting}\n                                            color=\"secondary\"\n                                            onClick={closeForm2}\n                                            className={classes.button}>{AccountPageTranslation.cancel[props.language]}</Button>\n                                </div>\n                                <div className={classes.wrapper}>\n                                    <Button variant=\"contained\"\n                                            disabled={state.form2Submitting}\n                                            color=\"secondary\"\n                                            onClick={submitForm2Change}\n                                            className={classes.button}>{AccountPageTranslation.submit[props.language]}</Button>\n                                    {state.form2Submitting && (\n                                        <CircularProgress size={24}\n                                                          className={classes.buttonProgress}\n                                                          color=\"secondary\"/>\n                                    )}\n                                </div>\n                            </div>\n                        </Grid>\n\n                    </Grid>\n                </Container>\n            </Dialog>\n        </Container>\n    );\n}\n\n\n/* Redux link -------------------------------------------------------------------- */\n/* Making the RouterComponent watch the loggedIn property of the store */\n\n\nconst mapStateToProps = state => ({\n    account: state.account,\n    api_key: state.api_key,\n    language: state.language,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    handleNewAccountData: (response) => dispatch(handleNewAccountData(response)),\n});\n\nexport const AccountPage = connect(mapStateToProps, mapDispatchToProps)(AccountPageComponent);\n\n","import React from 'react';\nimport {makeStyles} from \"@material-ui/core/styles\";\n\n\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {handleNewAccountData} from \"../../ReduxActions\";\nimport {connect} from \"react-redux\";\nimport axios from \"axios\";\nimport {BACKEND_URL} from \"../../secrets\";\nimport clsx from \"clsx\";\n\nimport CheckIcon from '@material-ui/icons/Check';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport IconButton from '@material-ui/core/IconButton';\n\nconst useStyles = makeStyles(theme => ({\n    callPaper: {\n        paddingTop: theme.spacing(1),\n        paddingRight: theme.spacing(1),\n        paddingBottom: theme.spacing(1),\n        paddingLeft: theme.spacing(2),\n\n        marginBottom: theme.spacing(1),\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n    },\n    inlineText: {\n        display: \"inline\"\n    },\n    phoneText: {\n        marginRight: theme.spacing(3),\n        fontWeight: \"500\",\n    },\n    timeText: {\n        flexGrow: 1,\n        fontWeight: \"400\",\n    },\n}));\n\n\nexport function CallComponent(props) {\n\n    const classes = useStyles();\n\n    function axiosPutAction(action) {\n        axios.put(BACKEND_URL + \"backend/database/call\", {\n            email: props.account.email,\n            api_key: props.api_key,\n            action: action,\n            call_id: props.call.id,\n        })\n            .then(response => {\n                if (response.data.status === \"ok\") {\n                    props.handleNewAccountData(response);\n                    console.log(response.data.calls);\n                }\n            }).catch(response => {\n            console.log(\"Axios promise rejected! Response:\");\n            console.log(response);\n        });\n    }\n\n    return (\n        <Paper elevation={3} className={classes.callPaper}>\n            <Typography variant=\"body1\" className={clsx(classes.inlineText, classes.phoneText)}>{props.call.phone_number}</Typography>\n            <Typography variant=\"body2\" className={clsx(classes.inlineText, classes.timeText)}>{props.call.timestamp}</Typography>\n            {props.call.status !== \"fulfilled\" && (\n                <React.Fragment>\n                    <IconButton onClick={() => axiosPutAction(\"fulfill\")}>\n                        <CheckIcon color=\"primary\"/>\n                    </IconButton>\n                    <IconButton onClick={() => axiosPutAction(\"decline\")}>\n                        <ClearIcon color=\"primary\"/>\n                    </IconButton>\n                </React.Fragment>\n            )}\n            {props.call.status === \"fulfilled\" && (\n                <IconButton disabled>\n                    <CheckIcon style={{fill: \"transparent\"}}/>\n                </IconButton>\n            )}\n        </Paper>\n    );\n}\n\n\nconst mapStateToProps = state => ({\n    account: state.account,\n    api_key: state.api_key,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    handleNewAccountData: (response) => dispatch(handleNewAccountData(response)),\n});\n\nexport const Call = connect(mapStateToProps, mapDispatchToProps)(CallComponent);\n\n\n","\nexport const CallsPageTranslation = {\n    serverOffline: {\n        english: \"Server currently offline. Please try again later.\",\n        deutsch: \"Server zurzeit offline. Bitte versuchen Sie es später noch einmal.\",\n    },\n    noNewCalls: {\n        english: \"Currently no new calls. Please try again in a few minutes.\",\n        deutsch: \"Zurzeit keine neuen Anrufe. Bitte versuche es in ein paar Minuten nochmal.\",\n    },\n    acceptCall: {\n        english: \"Accept Call\",\n        deutsch: \"Anruf Annehmen\",\n    },\n    online: {\n        english: \"Online\",\n        deutsch: \"Online\",\n    },\n    offline: {\n        english: \"Offline\",\n        deutsch: \"Offline\",\n    },\n    acceptedCalls: {\n        english: \"Accepted Calls\",\n        deutsch: \"Angenommene Anrufe\",\n    },\n    noAcceptedCalls: {\n        english: \"No Accepted Calls\",\n        deutsch: \"Keine Angenommenen Anrufe\",\n    },\n    fulfilledCalls: {\n        english: \"Fulfilled Calls\",\n        deutsch: \"Abgeschlossene Anrufe\",\n    },\n    noFulfilledCalls: {\n        english: \"No Fulfilled Calls\",\n        deutsch: \"Keine Abgeschlossenen Anrufe\",\n    },\n};\n\n","import React, {useState, useRef} from 'react';\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nimport {connect} from 'react-redux';\nimport {handleNewAccountData} from '../../ReduxActions';\n\nimport {Container} from \"@material-ui/core\";\nimport {Typography} from \"@material-ui/core\";\n\nimport {Button} from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Divider from \"@material-ui/core/Divider\";\n\nimport {CircularProgress} from \"@material-ui/core\";\n\nimport {CustomTextField} from \"../../Components/CustomTextField\";\n\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\n\nimport {BACKEND_URL} from \"../../secrets\";\n\nimport {Call} from \"./Call\";\n\nimport axios from 'axios';\n\n\nimport Grid from \"@material-ui/core/Grid\";\nimport {Link} from \"react-router-dom\";\n\nimport WifiIcon from '@material-ui/icons/Wifi';\nimport WifiOffIcon from '@material-ui/icons/WifiOff';\nimport AddIcon from '@material-ui/icons/Add';\n\nimport './CallsPage.scss';\n\nimport {CallsPageTranslation} from \"./CallsPageTranslation\";\n\nvar cloneDeep = require('lodash.clonedeep');\n\n\nconst useStyles = makeStyles(theme => ({\n    title: {\n        display: \"block\",\n        textAlign: \"center\",\n        marginBottom: theme.spacing(2),\n    },\n    link: {\n        textDecoration: \"none\",\n        display: \"block\"\n    },\n    button: {\n        color: \"white\"\n    },\n    textField: {\n        marginBottom: theme.spacing(1)\n    },\n    wrapper: {\n        marginTop: theme.spacing(1),\n        marginLeft: theme.spacing(0.5),\n        marginRight: theme.spacing(0.5),\n        position: 'relative',\n    },\n    buttonProgress: {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        marginTop: -12,\n        marginLeft: -12,\n    },\n    buttonIcon: {\n        marginLeft: -8,\n        marginRight: -4,\n    },\n    snackbar: {\n        margin: theme.spacing(1),\n    },\n    snackbarContentError: {\n        backgroundColor: theme.palette.primary.main,\n    },\n    snackbarContentSuccess: {\n        backgroundColor: theme.palette.secondary.main,\n    },\n    switchLink: {\n        marginTop: theme.spacing(2),\n        textAlign: \"center\",\n    },\n    formContainer: {\n        marginTop: theme.spacing(2),\n        marginBottom: theme.spacing(2),\n    },\n    divider: {\n        marginTop: theme.spacing(6),\n        marginBottom: theme.spacing(1),\n    },\n    subheading: {\n        marginBottom: theme.spacing(1),\n        marginLeft: theme.spacing(1),\n    },\n    placeholder: {\n        marginLeft: theme.spacing(0.5),\n    },\n}));\n\nclass CallsPageWrapper extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loadingNewCall: false,\n            loadingGoOnline: false,\n            errorMessageVisible: false,\n            errorMessageText: \"\",\n        };\n\n        this.componentDidMount = this.componentDidMount.bind(this);\n        this.axiosPutAction = this.axiosPutAction.bind(this);\n\n        this.acceptNewCall = this.acceptNewCall.bind(this);\n        this.goOnline = this.goOnline.bind(this);\n        this.goOffline = this.goOffline.bind(this);\n    }\n\n    componentDidMount() {\n\n        axios.get(BACKEND_URL + \"backend/database/call\", {\n            email: this.props.account.email,\n            api_key: this.props.api_key,\n        })\n            .then(response => {\n                if (response.data.status === \"ok\") {\n                    this.props.handleNewAccountData(response);\n                }\n            }).catch(response => {\n            console.log(\"Axios promise rejected! Response:\");\n            console.log(response);\n        });\n    }\n\n    axiosPutAction(action) {\n        axios.put(BACKEND_URL + \"backend/database/call\", {\n            email: this.props.account.email,\n            api_key: this.props.api_key,\n            action: action,\n        })\n            .then(response => {\n                if (response.data.status === \"ok\") {\n                    this.props.handleNewCallData(response);\n                    console.log(response.data.calls);\n                } else if (response.data.status === \"no new calls\") {\n                    this.setState({\n                        errorMessageVisible: true,\n                        errorMessageText: CallsPageTranslation.noNewCalls[this.props.language],\n                    });\n                    setTimeout(() => {\n                        this.setState({\n                            errorMessageVisible: false,\n                        })\n                    }, 2500);\n                }\n\n            }).catch(response => {\n                console.log(\"Axios promise rejected! Response:\");\n                console.log(response);\n                this.setState({\n                    errorMessageVisible: true,\n                    errorMessageText: CallsPageTranslation.serverOffline[this.props.language],\n                });\n                setTimeout(() => {\n                    this.setState({\n                        errorMessageVisible: false,\n                    })\n                }, 2500);\n            });\n    }\n\n    acceptNewCall() {\n        this.setState({loadingNewCall: true});\n        setTimeout(() => {\n            this.axiosPutAction(\"accept\");\n            this.setState({loadingNewCall: false});\n        }, 1000);\n    }\n\n    goOnline() {\n        this.setState({loadingGoOnline: true});\n        setTimeout(() => {\n            this.axiosPutAction(\"go_online\");\n            this.setState({loadingGoOnline: false});\n        }, 1000);\n    }\n\n    goOffline() {\n        this.setState({loadingGoOnline: true});\n        setTimeout(() => {\n            this.axiosPutAction(\"go_offline\");\n            this.setState({loadingGoOnline: false});\n        }, 1000);\n    }\n\n    render() {\n        return (\n            <CallsPageComponent language={this.props.language}\n                                calls={this.props.calls}\n\n                                account={this.props.account}\n                                acceptNewCall={this.acceptNewCall}\n                                loadingNewCall={this.state.loadingNewCall}\n\n                                goOnline={this.goOnline}\n                                goOffline={this.goOffline}\n                                loadingGoOnline={this.state.loadingGoOnline}\n\n                                errorMessageVisible={this.state.errorMessageVisible}\n                                errorMessageText={this.state.errorMessageText}/>\n        );\n    }\n\n}\n\nexport function CallsPageComponent(props) {\n\n    const classes = useStyles();\n\n    return (\n        <Container maxWidth=\"md\" className=\"CallsPage\">\n\n            <Grid container spacing={1} className={classes.formContainer}>\n\n                <Grid item xs={12}>\n                    <div className=\"ButtonBox\">\n                        <div className={classes.wrapper}>\n                            <Button variant=\"contained\"\n                                    disabled={props.loadingNewCall || !props.account.online}\n                                    color=\"secondary\"\n                                    onClick={props.acceptNewCall}\n                                    startIcon={props.loadingNewCall ?\n                                        <CircularProgress size={20} className={classes.buttonIcon} color=\"secondary\"/> :\n                                        <AddIcon className={classes.buttonIcon}/>\n                                    }\n                                    className={classes.button}>{CallsPageTranslation.acceptCall[props.language]}</Button>\n                        </div>\n\n                        <div className={classes.wrapper}>\n                            <Button variant=\"contained\"\n                                    disabled={props.loadingGoOnline}\n                                    color=\"secondary\"\n                                    startIcon={props.loadingGoOnline ?\n                                        <CircularProgress size={20} className={classes.buttonIcon} color=\"secondary\"/> : (\n                                            props.account.online ?\n                                            <WifiIcon className={classes.buttonIcon}/> :\n                                            <WifiOffIcon className={classes.buttonIcon}/>\n                                    )}\n                                    onClick={props.account.online ? props.goOffline : props.goOnline}\n                                    className={classes.button}>{props.account.online ? CallsPageTranslation.online[props.language] : CallsPageTranslation.offline[props.language]}</Button>\n                        </div>\n                    </div>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Divider className={classes.divider}/>\n                </Grid>\n\n                <Typography variant=\"h6\" className={classes.subheading}>{CallsPageTranslation.acceptedCalls[props.language]}</Typography>\n\n                <Grid item xs={12}>\n                    {props.calls.accepted.map((call, index) => (\n                        <Call key={index} call={call}/>\n                    ))}\n                    {props.calls.accepted.length === 0 && (\n                        <Typography variant=\"body1\" className={classes.placeholder}>{CallsPageTranslation.noAcceptedCalls[props.language]}</Typography>\n                    )}\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Divider className={classes.divider}/>\n                </Grid>\n\n                <Typography variant=\"h6\" className={classes.subheading}>{CallsPageTranslation.fulfilledCalls[props.language]}</Typography>\n\n                <Grid item xs={12}>\n                    {props.calls.fulfilled.map((call, index) => (\n                        <Call key={index} call={call}/>\n                    ))}\n                    {props.calls.fulfilled.length === 0 && (\n                        <Typography variant=\"body1\" className={classes.placeholder}>{CallsPageTranslation.noFulfilledCalls[props.language]}</Typography>\n                    )}\n                </Grid>\n\n            </Grid>\n\n            <Snackbar className={classes.snackbar}\n                      open={props.errorMessageVisible}\n                      anchorOrigin={{vertical: 'top', horizontal: 'center'}}>\n                <SnackbarContent\n                    className={classes.snackbarContentError}\n                    aria-describedby=\"message-id\"\n                    message={<span id=\"message-id\">{props.errorMessageText}</span>}\n                />\n            </Snackbar>\n\n        </Container>\n    );\n}\n\n\n/* Redux link -------------------------------------------------------------------- */\n/* Making the RouterComponent watch the loggedIn property of the store */\n\n\nconst mapStateToProps = state => ({\n    calls: state.calls,\n    account: state.account,\n    api_key: state.api_key,\n    language: state.language,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    handleNewCallData: (response) => dispatch(handleNewAccountData(response)),\n});\n\nexport const CallsPage = connect(mapStateToProps, mapDispatchToProps)(CallsPageWrapper);\n\n","\nimport React from 'react';\n\n\nexport const GuidePageTranslation = {\n    guideTitle: {\n        english: (<React.Fragment>Guide <em>(coming soon)</em></React.Fragment>),\n        deutsch: (<React.Fragment>Ratgeber <em>(kommt bald)</em></React.Fragment>),\n    },\n    text1: {\n        english: (\n            <React.Fragment>\n                Call-Center-Volunteers should not have to figure out everything by themselves.\n\n                This page will contain a <strong>list of tips</strong> for <strong>all kinds of\n                scenarios</strong> our\n                volunteers might have to conquer.\n\n                <br/><br/>\n\n                Since we do not want to share \"semi-truth's\" specified by only a small number of people we are\n                <strong> not yet ready to share</strong> these tips.\n\n                We're already <strong>crowdsourcing the best strategies</strong> which people can broadly agreed on.\n\n                <br/><br/>\n\n                Please make use of this page in the future, so we can guarantee a good, regulated service!\n            </React.Fragment>\n        ),\n        deutsch: (\n            <React.Fragment>\n                Freiwillige Helfer, die Anrufe entgegennehmen sollen bei ihrer Aufgabe nicht auf sich\n                allein gestellt sein!\n\n                Diese Seite wird eine <strong>Liste von Tipps</strong> für <strong>alle möglichen Anfragen </strong>\n                enthalten, vor die unsere Helfer eventuell gestellt werden.\n\n                <br/><br/>\n\n                Da wir <strong>keine Halbwahrheiten</strong>, insbesondere im Verhalten bei den verbleibenden Kontaktpunkten beim\n                Einkaufen und bei ungewöhnlichem mentalen Zustand verbreiten möchten, haben wir diese Seite noch nicht\n                freigeschaltet.\n\n                Wir arbeiten bereits an den besten Strategien und Tipps, die auf breite Zustimmung treffen.\n\n                <br/><br/>\n\n                Bitte benutzt diese Seite in Zukunft, damit wir einen guten, regulierten Service garantieren können!\n            </React.Fragment>\n        ),\n    },\n    groceryShopping: {\n        english: (<React.Fragment>Buying groceries/everyday things</React.Fragment>),\n        deutsch: (<React.Fragment>Lebensmittel/Alltägliches einkaufen</React.Fragment>),\n    },\n    pickingUpParcels: {\n        english: (<React.Fragment>Picking up parcels from the post office</React.Fragment>),\n        deutsch: (<React.Fragment>Pakete/Sendungen von der Post abholen</React.Fragment>),\n    },\n    storesAreClosed: {\n        english: (<React.Fragment>Stores are closed/risky: Helping with internet shopping</React.Fragment>),\n        deutsch: (<React.Fragment>Fachgeschäfte geschlossen/riskant: Hilfe beim Internetkauf</React.Fragment>),\n    },\n    pickingUpMedication: {\n        english: (<React.Fragment>Picking up prescription/medication</React.Fragment>),\n        deutsch: (<React.Fragment>Rezepte/Arzneimittel besorgen</React.Fragment>),\n    },\n    mentalHealth: {\n        english: (<React.Fragment>Dealing with mental health</React.Fragment>),\n        deutsch: (<React.Fragment>Tipps und Vermittlung bei Seelsorge</React.Fragment>),\n    },\n    text2: {\n        english: (\n            <React.Fragment>\n                If you want to <strong>actively help us on our journey</strong> feel free to contact us via:\n                <br/>\n                <a href=\"mailto:jobs@hilfe-am-ohr.de\">jobs@hilfe-am-ohr.de</a>\n\n                <br/><br/>\n\n                We need your help with: <strong>Translation, Voice Synchronization, Gathering Service-Strategies</strong> and much more!\n            </React.Fragment>\n        ),\n        deutsch: (\n            <React.Fragment>\n                Wenn du uns <strong>aktiv auf unserem Weg unterstützen möchtest</strong> dann kontaktiere uns gerne unter:\n                <br/>\n                <a href=\"mailto:jobs@hilfe-am-ohr.de\">jobs@hilfe-am-ohr.de</a>\n\n                <br/><br/>\n\n                Wir brauchen deine Hilfe bei: <strong>Übersetzung, Sprach-Synchronisation, Service-Strategien Ausarbeiten</strong> und vielem mehr!\n            </React.Fragment>\n        ),\n    },\n};\n\n","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport {Container} from \"@material-ui/core\";\n\nimport './GuidePage.scss';\nimport {handleNewAccountData} from \"../../ReduxActions\";\nimport {connect} from \"react-redux\";\n\nimport {GuidePageTranslation, guideTranslationTitle, guideTranslationText1, guideTranslationText2} from \"./GuidePageTranslation\";\n\n\nconst useStyles = makeStyles(theme => ({\n    title: {\n        display: \"block\",\n        textAlign: \"center\",\n        marginBottom: theme.spacing(3),\n    },\n    description: {\n        display: \"block\",\n        textAlign: \"center\",\n        marginBottom: theme.spacing(6),\n    },\n    crowdSource: {\n        display: \"block\",\n        textAlign: \"center\",\n        marginTop: theme.spacing(6),\n        marginBottom: theme.spacing(6),\n    },\n    root: {\n        width: '100%',\n    },\n    heading: {\n        fontWeight: \"500\"\n    },\n}));\n\nconst GuidePageComponent = (props) => {\n    const classes = useStyles();\n\n    return (\n        <Container maxWidth=\"md\" className=\"GuidePage\">\n            <Typography variant=\"h4\" className={classes.title}>{GuidePageTranslation.guideTitle[props.language]}</Typography>\n\n            <Container maxWidth=\"sm\">\n                <Typography variant=\"body1\" className={classes.description}>\n                    {GuidePageTranslation.text1[props.language]}\n                </Typography>\n            </Container>\n\n            <div className={classes.root}>\n\n                <ExpansionPanel disabled>\n                    <ExpansionPanelSummary\n                        expandIcon={<ExpandMoreIcon/>}>\n                        <Typography variant=\"subtitle1\" className={classes.heading}>\n                            {GuidePageTranslation.groceryShopping[props.language]}\n                        </Typography>\n                    </ExpansionPanelSummary>\n\n                </ExpansionPanel>\n\n                <ExpansionPanel disabled>\n                    <ExpansionPanelSummary\n                        expandIcon={<ExpandMoreIcon/>}>\n                        <Typography variant=\"subtitle1\" className={classes.heading}>\n                            {GuidePageTranslation.pickingUpParcels[props.language]}\n                        </Typography>\n                    </ExpansionPanelSummary>\n                </ExpansionPanel>\n\n                <ExpansionPanel disabled>\n                    <ExpansionPanelSummary\n                        expandIcon={<ExpandMoreIcon/>}>\n                        <Typography variant=\"subtitle1\" className={classes.heading}>\n                            {GuidePageTranslation.storesAreClosed[props.language]}\n                        </Typography>\n                    </ExpansionPanelSummary>\n                </ExpansionPanel>\n\n                <ExpansionPanel disabled>\n                    <ExpansionPanelSummary\n                        expandIcon={<ExpandMoreIcon/>}>\n                        <Typography variant=\"subtitle1\" className={classes.heading}>\n                            {GuidePageTranslation.pickingUpMedication[props.language]}\n                        </Typography>\n                    </ExpansionPanelSummary>\n                </ExpansionPanel>\n\n                <ExpansionPanel disabled>\n                    <ExpansionPanelSummary\n                        expandIcon={<ExpandMoreIcon/>}>\n                        <Typography variant=\"subtitle1\" className={classes.heading}>\n                            {GuidePageTranslation.mentalHealth[props.language]}\n                        </Typography>\n                    </ExpansionPanelSummary>\n                </ExpansionPanel>\n\n            </div>\n\n            <Container maxWidth=\"sm\">\n                <Typography variant=\"body1\" className={classes.crowdSource}>\n                    {GuidePageTranslation.text2[props.language]}\n                </Typography>\n            </Container>\n        </Container>\n    );\n};\n\n\nconst mapStateToProps = state => ({\n    language: state.language,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    handleNewAccountData: (response) => dispatch(handleNewAccountData(response)),\n});\n\nexport const GuidePage = connect(mapStateToProps, mapDispatchToProps)(GuidePageComponent);\n\n","\nimport React from 'react';\n\n\nexport const IndexPageTranslation = {\n    indexSubtitle: {\n        english: (<React.Fragment>A hotline for people without internet access</React.Fragment>),\n        deutsch: (<React.Fragment>Eine Hotline für Menschen ohne Internetzugang</React.Fragment>),\n    },\n    text1: {\n        english: (\n            <React.Fragment>\n                Call now: <a href=\"tel:+49-30-2555-5305\"><strong>+49 30 2555 5305</strong></a>\n            </React.Fragment>\n        ),\n        deutsch: (\n            <React.Fragment>\n                Rufe jetzt an: <a href=\"tel:+49-30-2555-5305\"><strong>+49 30 2555 5305</strong></a>\n            </React.Fragment>\n        ),\n    },\n    text2: {\n        english: (\n            <React.Fragment>\n                <em>Showcase coming soon!</em>\n            </React.Fragment>\n        ),\n        deutsch: (\n            <React.Fragment>\n                <em>Showcase kommt bald!</em>\n            </React.Fragment>\n        ),\n    },\n    text3: {\n        english: (\n            <React.Fragment>\n                See all Code Repositories on <a rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://github.com/Hilfe-am-Ohr\">GitHub</a>\n            </React.Fragment>\n        ),\n        deutsch: (\n            <React.Fragment>\n                Schaut euch alle Code Repositories auf <a rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://github.com/Hilfe-am-Ohr\">GitHub</a> an\n            </React.Fragment>\n        ),\n    },\n    readOurGuide: {\n        english: \"Read our Guide\",\n        deutsch: \"Lest unseren Guide\",\n    },\n    register: {\n        english: \"Register\",\n        deutsch: \"Registrieren\",\n    },\n    text4: {\n        english: \"How can you support us?\",\n        deutsch: \"Wie könnt ihr uns unterstützen?\",\n    },\n    text5: {\n        english: (\n            <React.Fragment>\n                1. Like our pitch - you saw above - on&nbsp;\n                <a href=\"https://www.youtube.com/watch?v=veRkcaPmV4g\"\n                   rel=\"noopener noreferrer\"\n                   target=\"_blank\"><strong>YouTube</strong></a>\n\n                <br/><br/>\n\n                2. Like our project on&nbsp;\n                <a href=\"https://devpost.com/software/hilfehotline-finde-einfach-helfende\"\n                   rel=\"noopener noreferrer\"\n                   target=\"_blank\"><strong>DevPost</strong></a>\n\n                <br/><br/>\n\n                3. <strong>Register as a volunteer</strong> on this page\n\n                <br/><br/>\n\n                4. Take part in <strong>our survey</strong> by calling the hotline <em>(~ 1 minute)</em>\n            </React.Fragment>\n        ),\n        deutsch: (\n            <React.Fragment>\n                1. Liked unseren Pitch - den ihr oben gesehen habt - auf&nbsp;\n                <a href=\"https://www.youtube.com/watch?v=veRkcaPmV4g\"\n                   rel=\"noopener noreferrer\"\n                   target=\"_blank\"><strong>YouTube</strong></a>\n\n                <br/><br/>\n\n                2. Liked unser Projekt auf&nbsp;\n                <a href=\"https://devpost.com/software/hilfehotline-finde-einfach-helfende\"\n                   rel=\"noopener noreferrer\"\n                   target=\"_blank\"><strong>DevPost</strong></a>\n\n                <br/><br/>\n\n                3. <strong>Registriert euch als Helfer</strong> auf dieser Seite\n\n                <br/><br/>\n\n                4. Nehmt an unserer <strong>Umfrage</strong> teil, indem ihr die Hotline anruft <em>(~ 1 Minute)</em>\n            </React.Fragment>\n        ),\n    },\n    text6: {\n        english: (\n            <React.Fragment>\n                <em>Job-Wall coming soon!</em>&nbsp;\n                Contact us via <a href=\"mailto:jobs@hilfe-am-ohr.de\">info@hilfe-am-ohr.de</a>\n            </React.Fragment>\n        ),\n        deutsch: (\n            <React.Fragment>\n                <em>Job-Pinnwand kommt bald!</em>&nbsp;\n                Kontaktiert uns über <a href=\"mailto:jobs@hilfe-am-ohr.de\">info@hilfe-am-ohr.de</a>\n            </React.Fragment>\n        ),\n    },\n};\n\n","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport {Button, CircularProgress, Container} from \"@material-ui/core\";\nimport clsx from \"clsx\";\n\nimport './IndexPage.scss';\nimport {Link} from \"react-router-dom\";\nimport Divider from \"@material-ui/core/Divider\";\n\nimport {IndexPageTranslation} from \"./IndexPageTranslation\";\nimport {handleNewAccountData} from \"../../ReduxActions\";\nimport {connect} from \"react-redux\";\n\n\nconst useStyles = makeStyles(theme => ({\n    title: {\n        display: \"block\",\n        textAlign: \"center\",\n        marginBottom: theme.spacing(1),\n    },\n    title2: {\n        display: \"block\",\n        textAlign: \"center\",\n        marginBottom: theme.spacing(3),\n    },\n    videoContainer: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        marginBottom: theme.spacing(6),\n    },\n    description: {\n        display: \"block\",\n        textAlign: \"center\",\n    },\n    description1: {\n        marginBottom: theme.spacing(2),\n    },\n    description2: {\n        marginBottom: theme.spacing(2),\n    },\n    description3: {\n        marginBottom: theme.spacing(2),\n    },\n    buttonBox: {\n        marginBottom: theme.spacing(0),\n    },\n    divider1: {\n        marginTop: theme.spacing(5),\n        marginBottom: theme.spacing(5),\n    },\n    description4: {\n        marginBottom: theme.spacing(3),\n    },\n    description5: {\n        marginBottom: theme.spacing(0),\n    },\n    description6: {\n        marginBottom: theme.spacing(5),\n    },\n    links: {\n        display: \"block\",\n        textAlign: \"center\",\n        marginBottom: theme.spacing(3),\n        lineHeight: theme.spacing(0.3),\n    },\n    link: {\n        textDecoration: \"none\",\n        display: \"block\"\n    },\n    button: {\n        color: \"white\",\n        marginTop: theme.spacing(1),\n        marginLeft: theme.spacing(0.5),\n        marginRight: theme.spacing(0.5),\n        position: 'relative',\n    }\n}));\n\nexport const IndexPageComponent = (props) => {\n    const classes = useStyles();\n\n    return (\n        <div className=\"IndexPage\">\n            <Typography variant=\"h4\" className={classes.title}>Hilfe am Ohr!</Typography>\n            <Typography variant=\"h6\" className={classes.title2}>{IndexPageTranslation.indexSubtitle[props.language]}</Typography>\n\n            <Container maxWidth=\"sm\">\n                <div className={clsx(classes.videoContainer, \"VideoContainer\")}>\n                    <iframe src=\"https://www.youtube.com/embed/veRkcaPmV4g?rel=0\" frameBorder=\"0\"\n                            allowFullScreen=\"allowfullscreen\"/>\n                </div>\n\n                <Typography variant=\"h5\" className={clsx(classes.description, classes.description1)}>\n                    {IndexPageTranslation.text1[props.language]}\n                </Typography>\n\n                <Typography variant=\"body1\" className={clsx(classes.description, classes.description2)}>\n                    {IndexPageTranslation.text2[props.language]}\n                </Typography>\n\n                <Typography variant=\"body1\" className={clsx(classes.description, classes.description3)}>\n                    {IndexPageTranslation.text3[props.language]}\n                </Typography>\n            </Container>\n\n            <div className={clsx(\"ButtonBox\", classes.buttonBox)}>\n                <Button variant=\"contained\"\n                        color=\"secondary\"\n                        className={classes.button}>\n                    <Link to={\"/guide\"} className={classes.link}>{IndexPageTranslation.readOurGuide[props.language]}</Link>\n                </Button>\n                <Button variant=\"contained\"\n                        color=\"secondary\"\n                        className={classes.button}>\n                    <Link to={\"/register\"} className={classes.link}>{IndexPageTranslation.register[props.language]}</Link>\n                </Button>\n            </div>\n\n            <Container maxWidth=\"sm\">\n\n                <Divider className={classes.divider1}/>\n\n                <Typography variant=\"h5\" className={clsx(classes.description, classes.description4)}>\n                    {IndexPageTranslation.text4[props.language]}\n                </Typography>\n\n                <Typography variant=\"body1\" className={clsx(classes.description, classes.description5)}>\n                    {IndexPageTranslation.text5[props.language]}\n                </Typography>\n\n                <Divider className={classes.divider1}/>\n\n                <Typography variant=\"body1\" className={clsx(classes.description, classes.description2)}>\n                    {IndexPageTranslation.text6[props.language]}\n                </Typography>\n\n            </Container>\n\n        </div>\n    );\n};\n\nconst mapStateToProps = state => ({\n    language: state.language,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    handleNewAccountData: (response) => dispatch(handleNewAccountData(response)),\n});\n\nexport const IndexPage = connect(mapStateToProps, mapDispatchToProps)(IndexPageComponent);\n\n","/* General Imports --------------------------------------------------------------- */\nimport React from 'react';\nimport {connect} from 'react-redux';\nimport {makeStyles} from '@material-ui/core/styles';\n\n/* Routing Imports --------------------------------------------------------------- */\nimport {Switch, Route, BrowserRouter, Redirect, Link} from 'react-router-dom';\n\n\n/* Component Imports ------------------------------------------------------------- */\nimport {Navbar, ReducedNavbar} from \"../App/Navbar/Navbar\";\nimport {LoginPage} from '../App/SignInPage/LoginPage';\nimport {RegisterPage} from \"../App/SignInPage/RegisterPage\";\nimport {AccountPage} from \"../App/AccountPage/AccountPage\";\nimport {CallsPage} from \"../App/CallsPage/CallsPage\";\nimport {GuidePage} from \"../App/GuidePage/GuidePage\";\nimport {IndexPage} from \"../App/IndexPage/IndexPage\";\n// import {Footer} from \"../App/Footer/Footer\";\n\n\n/* Component --------------------------------------------------------------------- */\n\n\nconst useStyles = makeStyles(theme => ({\n    content: {\n        flexGrow: 1,\n    },\n    fullHeightContainer: {\n        minHeight: \"100vh\",\n    },\n    children: {\n        padding: theme.spacing(0),\n    },\n    toolbar: theme.mixins.toolbar,\n}));\n\nconst Content = (props) => {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n            <main className={classes.content}>\n                <div className={classes.fullHeightContainer}>\n                    <div className={classes.toolbar}/>\n                    <div className={classes.children}>\n                        {props.children}\n                    </div>\n                </div>\n            </main>\n        </React.Fragment>\n    );\n};\n\n\nconst RouterComponent = (props) => (\n    <BrowserRouter>\n        <Route>\n            <Switch>\n                <Route exact strict path=\"/\">\n                    <ReducedNavbar/>\n                    <IndexPage/>\n                </Route>\n\n                <Route exact strict path=\"/guide\">\n                    <Navbar/>\n                    <Content>\n                        <GuidePage/>\n                    </Content>\n                </Route>\n\n                <Route exact strict path=\"/calls\">\n                    {props.loggedIn && (\n                        <React.Fragment>\n                            <Navbar/>\n                            <Content>\n                                <CallsPage/>\n                            </Content>\n                        </React.Fragment>\n                    )}\n                    {(!props.loggedIn && props.autoLogin) && (<Navbar/>)}\n                    {(!props.loggedIn && !props.autoLogin) && (<Redirect to=\"/login\"/>)}\n                </Route>\n\n                <Route exact strict path=\"/account\">\n                    {props.loggedIn && (\n                        <React.Fragment>\n                            <Navbar/>\n                            <Content>\n                                <AccountPage/>\n                            </Content>\n                        </React.Fragment>\n                    )}\n                    {(!props.loggedIn && props.autoLogin) && (<Navbar/>)}\n                    {(!props.loggedIn && !props.autoLogin) && (<Redirect to=\"/login\"/>)}\n                </Route>\n\n                <Route exact strict path=\"/login\">\n                    {props.loggedIn && (\n                        <Redirect to=\"/account\"/>\n                    )}\n                    {!props.loggedIn && (\n                        <React.Fragment>\n                            <ReducedNavbar/>\n                            <LoginPage/>\n                        </React.Fragment>\n                    )}\n                </Route>\n                <Route exact strict path=\"/register\">\n                    {props.loggedIn && (\n                        <Redirect to=\"/account\"/>\n                    )}\n                    {!props.loggedIn && (\n                        <React.Fragment>\n                            <ReducedNavbar/>\n                            <RegisterPage/>\n                        </React.Fragment>\n                    )}\n                </Route>\n                <Route exact strict path=\"/logout\">\n                    <Redirect to=\"/guide\"/>\n                </Route>\n\n                <Route>\n                    <ReducedNavbar/>\n                    <Content>\n                        <p>page not found</p>\n                    </Content>\n                </Route>\n            </Switch>\n        </Route>\n    </BrowserRouter>\n);\n\n\n/* Redux link -------------------------------------------------------------------- */\n/* Making the RouterComponent watch the loggedIn property of the store */\n\nconst mapStateToProps = state => ({\n    loggedIn: state.loggedIn,\n    autoLogin: state.autoLogin,\n});\n\nconst mapDispatchToProps = dispatch => ({});\n\nexport const Router = connect(mapStateToProps, mapDispatchToProps)(RouterComponent);\n","/* General Imports --------------------------------------------------------------- */\nimport React from 'react';\n\n\n/* Styling Imports --------------------------------------------------------------- */\nimport {createMuiTheme} from \"@material-ui/core/styles\";\nimport {ThemeProvider} from \"@material-ui/core/styles\";\nimport {BreakpointProvider} from 'react-socks';\nimport './Themer.scss';\n\n\n/* Component Imports ------------------------------------------------------------- */\nimport {Router} from './Router';\n\n\n/* Theme ------------------------------------------------------------------------- */\n\n\nconst theme = createMuiTheme({\n\tpalette : {\n\t\tprimary: {\n\t\t\tmain: 'hsl(229, 25%, 18%)',\n\t\t\ttransparent80: 'rgba(40, 44, 52, 0.8)',\n\t\t},\n\t\tsecondary: {\n\t\t\tmain: 'hsl(344, 93%, 50%)',\n\t\t\ttransparent80: 'hsla(340, 100%, 50%, 0.8)',\n\t\t},\n\t\twhite: {\n\t\t\tmain: 'rgb(255, 255, 255)',\n\t\t\ttransparent80: 'rgba(255, 255, 255, 0.8)',\n\t\t\ttransparent60: 'rgba(255, 255, 255, 0.6)',\n\t\t},\n\n\t\tmaastrichtBlue: {\n\t\t\tmain: 'hsl(237, 77%, 18%)',\n\t\t\ttransparent80: 'hsla(237, 77%, 18%, 0.8)',\n\t\t\ttransparent60: 'hsla(237, 77%, 18%, 0.6)',\n\t\t},\n\t\tpinctonBlue: {\n\t\t\tmain: 'hsl(206, 81%, 50%)',\n\t\t\ttransparent80: 'hsla(206, 81%, 50%, 0.8)',\n\t\t\ttransparent60: 'hsla(206, 81%, 50%, 0.6)',\n\t\t},\n\t\tdesireMagenta: {\n\t\t\tmain: 'hsl(344, 93%, 50%)',\n\t\t\ttransparent80: 'hsla(344, 93%, 50%, 0.8)',\n\t\t\ttransparent60:  'hsla(344, 93%, 50%, 0.6)',\n\t\t\ttransparent40:  'hsla(344, 93%, 50%, 0.4)',\n\t\t\ttransparent20:  'hsla(344, 93%, 50%, 0.2)',\n\t\t},\n\t\tgunmetalGray: {\n\t\t\tmain: 'hsl(229, 25%, 18%)',\n\t\t\ttransparent80: 'hsla(229, 25%, 18%, 0.8)',\n\t\t\ttransparent60: 'hsla(229, 25%, 18%, 0.6)',\n\t\t},\n\t\tgray1: 'hsl(0, 0%, 95%)',\n\t\tgray2: 'hsl(0, 0%, 90%)',\n\t}\n});\n\n\n/* Component --------------------------------------------------------------------- */\n\n\nexport const Themer = () => {\n\treturn (\n\t\t<ThemeProvider theme={theme}>\n\t\t\t<BreakpointProvider>\n\t\t\t\t<Router/>\n\t\t\t</BreakpointProvider>\n\t\t</ThemeProvider>\n\t);\n};\n","\n/* General Imports --------------------------------------------------------------- */\nimport React from 'react';\nimport {createStore} from 'redux'\nimport {Provider} from \"react-redux\";\nimport {Themer} from \"./Themer\";\n\n\nimport Cookies from 'js-cookie';\nimport axios from \"axios\";\nimport {handleLogin, abortAutoLogin, startAutoLogin, switchLanguage} from \"../ReduxActions\";\n\nimport {BACKEND_URL} from \"../secrets\";\n\n\nvar cloneDeep = require('lodash.clonedeep');\n\n\nfunction storeReducer(state = {\n    loggedIn: false,\n    autoLogin: false,\n    language: \"deutsch\",\n\n    account: {\n        email: \"\",\n        online: false,\n    },\n    calls: {\n        accepted: [],\n        fulfilled: []\n    },\n    api_key: \"\",\n}, action) {\n\n    let newState = cloneDeep(state);\n\n    switch (action.type) {\n        case \"LOGIN\":\n            newState.loggedIn = true;\n            newState.autoLogin = false;\n            newState.api_key = action.api_key;\n            newState.account = action.account;\n            newState.calls = action.calls;\n\n            Cookies.set('email', action.account.email, {expires: 7});\n            Cookies.set('api_key', action.api_key, {expires: 7});\n\n            return newState;\n\n        case \"LOGOUT\":\n            newState.loggedIn = false;\n            delete newState.account.email;\n            delete newState.api_key;\n\n            Cookies.remove('email');\n            Cookies.remove('api_key');\n\n            return newState;\n\n        case \"START_AUTOLOGIN\":\n            newState.autoLogin = true;\n            return newState;\n\n        case \"ABORT_AUTOLOGIN\":\n            newState.autoLogin = false;\n\n            Cookies.remove('email');\n            Cookies.remove('api_key');\n\n            return newState;\n\n        case \"NEW_ACCOUNT_DATA\":\n            newState.account = action.account;\n            newState.calls = action.calls;\n\n            Cookies.remove('email');\n            Cookies.set('email', action.account.email);\n            return newState;\n\n        case \"SWITCH_LANGUAGE\":\n            newState.language = action.language;\n            Cookies.set('language', action.language);\n            return newState;\n\n        default:\n            return newState;\n    }\n}\n\nlet store = createStore(storeReducer);\n\n\n// Try to log in automatically on launch\n\nlet cookieEmail =  Cookies.get('email');\nlet cookieApiKey =  Cookies.get('api_key');\n\nif (cookieEmail !== undefined && cookieApiKey !== undefined) {\n    store.dispatch(startAutoLogin());\n    axios.post(BACKEND_URL + \"backend/login\", {email: cookieEmail, api_key: cookieApiKey})\n        .then(response => {\n            if (response.data.status === \"ok\") {\n                // Instant view-change looks laggy rather than fast -> 1.0 second delay\n                setTimeout(() => {\n                    store.dispatch(handleLogin(response));\n                }, 1000);\n            } else {\n                store.dispatch(abortAutoLogin());\n            }\n        }).catch(response => {\n        console.log(\"Axios promise rejected! Response:\");\n        console.log(response);\n        store.dispatch(abortAutoLogin());\n    });\n}\n\n\n// Set language if stored in Cookie\nlet cookieLanguage =  Cookies.get('language');\n\nif (cookieLanguage !== undefined) {\n    switch (cookieLanguage) {\n        case \"english\":\n            store.dispatch(switchLanguage(\"english\"));\n            break;\n        case \"deutsch\":\n            store.dispatch(switchLanguage(\"deutsch\"));\n            break;\n        default:\n            break;\n    }\n}\n\n\nexport const ReduxWrapper = () => {\n\n    return (\n        <Provider store={store}>\n            <Themer/>\n        </Provider>\n    );\n};\n","/* General Imports --------------------------------------------------------------- */\nimport React from 'react';\n\n\n/* Component Imports ------------------------------------------------------------- */\nimport {ReduxWrapper} from \"./ReduxWrapper\";\n\n\n/* Component --------------------------------------------------------------------- */\n\n\nconst Wrapper = () => {\n\n\t// window.console.log = () => {};\n\t// window.console.warn = () => {};\n\t// window.console.error = () => {};\n\n\treturn <ReduxWrapper/>;\n};\n\nexport default Wrapper;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Wrapper from './Wrappers/Wrapper';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Wrapper />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}